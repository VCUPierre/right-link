{"version":3,"sources":["utils/auth/firebase.js","utils/auth/FirebaseContext.js","components/RightLinkCollectionModal/RightLinkCollectionModal.js","assets/TheRightClickTransparent.png","components/Navbar/Navbar.js","components/Header/Header.js","components/ProfileButton/ProfileButton.js","components/RightLinkManagementOpt/RightLinkManagementOpt.js","config/config.js","utils/api.js","components/CustomInput/CustomInputs.js","components/Profile/Profile.js","constants/icons.js","components/AddLink/AddLink.js","components/SocialLinks/SocialLinks.js","components/RightLinks/RightLinkArrays.js","components/RightLinks/RightLinkObjectPreview.js","components/RightLinks/RightLinkObjects.js","components/RightLinks/RightLinks.js","components/Main/Main.js","components/Home/Home.js","components/Login/Login.js","components/Login/Register.js","components/Login/Reset.js","components/PrivateRoute/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","collection","where","uid","get","docs","length","add","name","displayName","authProvider","email","data","localStorage","setItem","JSON","stringify","console","error","alert","message","registerWithEmailAndPassword","password","createUserWithEmailAndPassword","sendPasswordResetEmail","FirebaseContext","createContext","FirebaseProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","onAuthStateChanged","Provider","value","RightLinkCollectionModal","isModalOpen","setIsModalOpen","setSelectedRightLink","setData","initialRightLink","profile","title","titleColor","profilePicture","logo","bgImage","bgImageLink","bgColor","bgCustomColor","socialLinks","group","rightLinks","groups","links","handleClick","selection","uuid","uniqueId","uuidv4","prev","Modal","centered","size","open","onClose","Header","Content","List","divided","verticalAlign","map","rightLink","Item","className","onClick","Icon","color","link","StickyBar","style","justifyContent","width","boxShadow","zIndex","padding","alignItems","background","textAlign","href","Image","src","Logo","display","Navbar","ProfileButton","useContext","Dropdown","button","icon","direction","Menu","disabled","text","signOut","RightLinkManagementOpt","handleEditClick","editRightLink","handleSaveClick","saveRightLink","Button","labelPosition","CLOUD_NAME","UPLOAD_PRESET","UPLOAD_API","axios","post","equals","b","Date","getTime","prototype","keys","Object","every","k","StandardInput","field","values","setValues","dataGroup","handleUpload","e","log","userFolder","parse","getItem","formData","FormData","append","target","files","API","imageURL","items","item","secure_url","includes","Input","type","id","onChange","defaultValue","SelectInput","options","Select","RightLinkSearch","position","searchValue","setSearchValue","Search","aligned","onResultSelect","result","iconName","onSearchChange","toLowerCase","results","filter","x","RLGroupInput","setFilter","prevGroupName","groupLinks","i","RLGroupSelectInput","SocialLinksStandardInput","SocialLinksSelectInput","RightLinkStandardInput","RightLinkSelectInput","internal","Profile","presetColorOptions","key","Segment","content","rel","inline","BRANDS","image","ICONS","AddLink","linkGroup","addSocialLink","secondaryColor","surrounded","surroundedInColor","addRightLinkGroup","addRightLink","linkSpaced","typeAction","featured","featuredText","featuredTimerDate","featuredTimerText","featuredColor","featuredAltStyle","pinned","mainMedia","additionalLinks","colorOveride","fontColor","colored","buttonColor","bannerSide","additionalStyle","modalAlternativeText","removed","bioContent","addAdditionalLinks","addBio","header","subHeader","socialLinksCopy","push","rightLinksCopy","rightLinkGroupsCopy","linksCopy","bioCopy","collectionCopy","SocialLinks","activeIndex","setActiveIndex","presetBool","titleProps","index","Accordion","styled","Title","active","Grid","columns","Row","EditRightLinkArrays","handleStandardInputChange","valueField","innerArrayPosition","arrayType","arrayItem","d","TextArea","rows","handleCollectionChange","RightLinksArrays","RLArr","RightLinkObjectPreview","RLObj","objectKey","toString","slice","RightLinkObjects","presetMediaOptions","presetBoolOptions","presetSpeedOptions","handleSelectChange","RightLinks","showgroup","setShowGroup","rightLinksFilter","setRightLinksFilters","presetSideOptions","presetTypeOptions","presetAdditionalStyles","handleGroupClick","groupData","Label","as","Divider","j","Main","trackedChanges","panes","menuItem","render","Tab","Pane","menu","fluid","vertical","tabular","Home","setEditRightLink","setSaveRightLink","userDbDoc","setUserDbDoc","setTrackedChanges","userRightLinkData","setUserRightLinkData","selectedRightLink","saveData","currentDate","toLocaleString","userRef","doc","dataToSave","rightLinkExists","_","find","fullUserRightLinkDataCopy","userRightLinkDataCopy","runTransaction","transaction","exists","newUserDataArray","newVersion","version","date","shift","update","onSnapshot","snapshot","currentData","maxBy","previous","originalData","withRouter","history","handleLogin","useCallback","event","preventDefault","elements","signInWithEmailAndPassword","to","onSubmit","placeholder","handleSignUp","setEmail","PrivateRoute","Component","component","rest","location","pathname","state","from","App","cloudName","uploadPreset","basename","exact","path","Login","Register","Reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccea09ce.chunk.js","sourcesContent":["/* eslint-disable no-alert */\n/* eslint-disable no-console */\nimport app from 'firebase/compat/app';\nimport 'firebase/compat/database';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\nconst firebaseApp = app.initializeApp(firebaseConfig);\n\nexport default firebaseApp;\n\n// const appAuth = app.initializeApp(firebaseConfig);\nconst auth = firebaseApp.auth();\nconst db = app.firestore();\n\nconst googleProvider = new app.auth.GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n    try {\n        const res = await auth.signInWithPopup(googleProvider);\n        const { user } = res;\n        const query = await db\n            .collection('users')\n            .where('uid', '==', user.uid)\n            .get();\n        if (query.docs.length === 0) {\n            await db.collection('users').add({\n                uid: user.uid,\n                name: user.displayName,\n                authProvider: 'google',\n                email: user.email,\n                data: [],\n            });\n        }\n        localStorage.setItem('TRC-User', JSON.stringify(user));\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst signInWithEmailAndPassword = async (email, password) => {\n    try {\n        const res = await auth.signInWithEmailAndPassword(email, password);\n        const { user } = res;\n        localStorage.setItem('TRC-User', JSON.stringify(user));\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n    try {\n        const res = await auth.createUserWithEmailAndPassword(email, password);\n        const { user } = res;\n        await db.collection('users').add({\n            uid: user.uid,\n            name,\n            authProvider: 'local',\n            email,\n            data: [],\n        });\n        localStorage.setItem('TRC-User', JSON.stringify(user));\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst sendPasswordResetEmail = async (email) => {\n    try {\n        await auth.sendPasswordResetEmail(email);\n        alert('Password reset link sent!');\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst logout = async () => {\n    await auth.signOut();\n    localStorage.removeItem('TRC-User');\n};\n\nexport {\n    // auth,\n    db,\n    signInWithGoogle,\n    signInWithEmailAndPassword,\n    registerWithEmailAndPassword,\n    sendPasswordResetEmail,\n    logout,\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport firebaseApp from './firebase';\n\nconst FirebaseContext = createContext(null);\n\nconst FirebaseProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [pending, setPending] = useState(true);\n\n    useEffect(() => {\n        firebaseApp.auth().onAuthStateChanged((user) => {\n            setCurrentUser(user);\n            setPending(false);\n        });\n    }, []);\n\n    if (pending) {\n        return <>Loading...</>;\n    }\n\n    return (\n        <FirebaseContext.Provider value={{ currentUser }}>\n            {children}\n        </FirebaseContext.Provider>\n    );\n};\n\nexport { FirebaseContext, FirebaseProvider };\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Modal, List, Icon } from 'semantic-ui-react';\nimport './collectionStyle.css';\n\nconst RightLinkCollectionModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    collection,\n    setSelectedRightLink,\n    setData,\n}) => {\n    const initialRightLink = {\n        profile: {\n            title: '',\n            titleColor: '',\n            profilePicture: '',\n            logo: 'colored',\n            bgImage: false,\n            bgImageLink: '',\n            bgColor: '',\n            bgCustomColor: '',\n        },\n        socialLinks: {\n            group: [],\n        },\n        rightLinks: {\n            groups: [],\n            links: [],\n        },\n    };\n\n    const handleClick = (selection) => {\n        if (selection.uuid) {\n            setData(selection);\n            setSelectedRightLink(selection);\n        } else {\n            const uniqueId = uuidv4();\n            setData({ uuid: uniqueId, ...selection });\n            setSelectedRightLink({ uuid: uniqueId, ...selection });\n        }\n        setIsModalOpen((prev) => !prev);\n    };\n\n    return (\n        <Modal\n            centered\n            size=\"small\"\n            open={isModalOpen}\n            onClose={() => setIsModalOpen(false)}\n        >\n            <Modal.Header>Choose a Right Link or Create a new one</Modal.Header>\n            <Modal.Content>\n                <List divided selection verticalAlign=\"middle\">\n                    {collection && collection.length !== 0\n                        ? collection.data.map((rightLink) => (\n                              <List.Item\n                                  className=\"centeredListItem\"\n                                  onClick={() => handleClick(rightLink)}\n                              >\n                                  <List.Content>\n                                      {rightLink.profile.title}\n                                  </List.Content>\n                              </List.Item>\n                          ))\n                        : ''}\n                </List>\n                <div className=\"centeredListItem\">\n                    <Icon\n                        color=\"green\"\n                        name=\"add square\"\n                        size=\"big\"\n                        className=\"custom\"\n                        link\n                        onClick={() => handleClick(initialRightLink)}\n                    />\n                </div>\n            </Modal.Content>\n        </Modal>\n    );\n};\n\nexport default RightLinkCollectionModal;\n","export default __webpack_public_path__ + \"static/media/TheRightClickTransparent.45a3cb44.png\";","import React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport Logo from '../../assets/TheRightClickTransparent.png';\n\nconst StickyBar = () => (\n    <div\n        style={{\n            justifyContent: 'space-between',\n            width: '100%',\n            boxShadow: '0 0 1rem 0 rgba(100,110,140,.4)',\n            zIndex: '2',\n            padding: '1em',\n            alignItems: 'center',\n            background: 'white',\n            textAlign: 'center',\n        }}\n    >\n        <a href=\"/\">\n            <Image src={Logo} size=\"medium\" centered />\n        </a>\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                width: '60%',\n            }}\n        />\n    </div>\n);\n\nexport default StickyBar;\n","import React from 'react';\nimport Navbar from '../Navbar/Navbar';\n\nconst Header = () => <Navbar />\n\nexport default Header;\n","/* eslint-disable arrow-body-style */\nimport React, { useContext } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport firebaseApp from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\n\nconst ProfileButton = () => {\n    const { currentUser } = useContext(FirebaseContext);\n\n    const signOut = () => {\n        firebaseApp.auth().signOut();\n    };\n\n    return (\n        <Dropdown button icon=\"user\" direction=\"left\" className=\"icon\">\n            <Dropdown.Menu>\n                <Dropdown.Item disabled>\n                    <span>\n                        <strong>{currentUser.email}</strong>\n                        {/* <strong>{currentUser.displayName.split(' ')[0]}</strong> */}\n                    </span>\n                </Dropdown.Item>\n                <Dropdown.Item text=\"Sign Out\" onClick={signOut} />\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileButton;\n","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport ProfileButton from '../ProfileButton/ProfileButton';\n\nconst RightLinkManagementOpt = ({\n    handleEditClick,\n    editRightLink,\n    handleSaveClick,\n    saveRightLink,\n}) => (\n    <>\n        <Button\n            icon\n            labelPosition=\"left\"\n            color=\"blue\"\n            disabled={editRightLink}\n            onClick={handleEditClick}\n        >\n            <Icon name=\"edit outline\" />\n            Edit\n        </Button>\n        <Button\n            icon\n            labelPosition=\"right\"\n            color=\"green\"\n            disabled={saveRightLink}\n            onClick={handleSaveClick}\n        >\n            Save\n            <Icon name=\"save outline\" />\n        </Button>\n        <ProfileButton />\n    </>\n);\n\nexport default RightLinkManagementOpt;\n","export const CLOUD_NAME = process.env.REACT_APP_CLOUDINARY_CLOUD_NAME;\nexport const UPLOAD_PRESET =\n    process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET_NAME;\nexport const UPLOAD_API = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/upload`;\n","import axios from 'axios';\nimport { UPLOAD_API } from '../config/config';\n\nexport default {\n    uploadImage: (data) => axios.post(UPLOAD_API, data),\n};\n","import React, { useState } from 'react';\nimport { Input, Select, Search } from 'semantic-ui-react';\nimport API from '../../utils/api';\nimport { UPLOAD_PRESET } from '../../config/config';\n\nconst equals = (a, b) => {\n    if (a === b) return true;\n\n    if (a instanceof Date && b instanceof Date)\n        return a.getTime() === b.getTime();\n\n    if (!a || !b || (typeof a !== 'object' && typeof b !== 'object'))\n        return a === b;\n\n    if (a.prototype !== b.prototype) return false;\n\n    const keys = Object.keys(a);\n    if (keys.length !== Object.keys(b).length) return false;\n\n    return keys.every((k) => equals(a[k], b[k]));\n};\n\nexport const StandardInput = ({ field, values, setValues, dataGroup }) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = value;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    const handleUpload = async (e, { value }) => {\n        console.log('event', e, value);\n        const userFolder = JSON.parse(localStorage.getItem('TRC-User')).email;\n        const formData = new FormData();\n        formData.append('file', e.target.files[0]);\n        formData.append('upload_preset', UPLOAD_PRESET);\n        formData.append('folder', userFolder);\n\n        const imageURL = await API.uploadImage(formData);\n        console.log('image stuff', imageURL);\n\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = imageURL.data.secure_url;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <>\n            {['profilePicture', 'bgImageLink'].includes(field) ? (\n                <Input\n                    type=\"file\"\n                    id={field}\n                    name={field}\n                    onChange={handleUpload}\n                />\n            ) : (\n                <Input\n                    defaultValue={values[dataGroup][field] || ''}\n                    onChange={handleChange}\n                />\n            )}\n        </>\n    );\n};\n\nexport const SelectInput = ({\n    field,\n    values,\n    setValues,\n    options,\n    dataGroup,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = value;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkSearch = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    collection,\n    position,\n}) => {\n    const [searchValue, setSearchValue] = useState('');\n\n    const handleChange = (e) => {\n        setSearchValue(e.target.value.toLowerCase());\n    };\n\n    const handleSelect = (e, { result }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = result.title;\n        if (field === 'name') {\n            item.iconName = result.title;\n        }\n        items[dataGroup][group][position] = item;\n        setSearchValue(result.title);\n        setValues({ ...items });\n    };\n\n    return (\n        <Search\n            aligned=\"left\"\n            onResultSelect={handleSelect}\n            onSearchChange={handleChange}\n            results={collection.filter((x) => x.title.includes(searchValue))}\n            value={searchValue}\n        />\n    );\n};\n\nexport const RLGroupInput = ({\n    field,\n    data,\n    values,\n    setData,\n    dataGroup,\n    group,\n    setFilter,\n}) => {\n    const prevGroupName = values[0].name;\n\n    const handleChange = (e, { value }) => {\n        const items = { ...data };\n        const item = [...items[dataGroup][group]];\n        const groupLinks = [...items[dataGroup].links];\n        for (let i = 0; i < item.length; i += 1) {\n            if (equals(item[i], values[0])) {\n                item[i][field] = value;\n            }\n        }\n        for (let i = 0; i < groupLinks.length; i += 1) {\n            if (groupLinks[i].group.value === prevGroupName) {\n                groupLinks[i].group.value = value;\n            }\n        }\n        items[dataGroup][group] = item;\n        items[dataGroup].links = groupLinks;\n        setFilter(value);\n        setData({ ...items });\n    };\n\n    return (\n        <Input defaultValue={values[0][field] || ''} onChange={handleChange} />\n    );\n};\n\nexport const RLGroupSelectInput = ({\n    field,\n    values,\n    setData,\n    options,\n    dataGroup,\n    group,\n    data,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...data };\n        const item = [...items[dataGroup][group]];\n        for (let i = 0; i < item.length; i += 1) {\n            if (equals(item[i], values[0])) {\n                item[i][field] = value;\n            }\n        }\n        items[dataGroup][group] = item;\n        // setFilter(value);\n        setData({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[0][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const SocialLinksStandardInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = value;\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Input\n            defaultValue={values[dataGroup][group][position][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const SocialLinksSelectInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    options,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = value;\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][group][position][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkStandardInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field].value = value;\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Input\n            defaultValue={values[dataGroup][group][position][field].value || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkSelectInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    options,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field].value = value;\n        if (field === 'type') {\n            if (value === 'internal') {\n                item.internal.value = true;\n            } else {\n                item.internal.value = false;\n            }\n        }\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][group][position][field].value || ''}\n            onChange={handleChange}\n        />\n    );\n};\n","import React from 'react';\nimport { Segment, Header, Image } from 'semantic-ui-react';\n// import { SwatchesPicker } from 'react-color';\n// import { CloudinaryContext } from 'cloudinary-react';\nimport { StandardInput, SelectInput } from '../CustomInput/CustomInputs';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst Profile = ({ editRightLink, data, setData }) => {\n    // const {cloudName} = useContext(CloudinaryContext)\n\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n        { key: 'custom', text: 'custom', value: 'custom' },\n    ];\n\n    const presetBool = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    // const initialVals = {\n    //     title: data.title.title,\n    //     titleColor: data.title.color,\n    //     backgroundImage: data.background.image,\n    //     backgroundImageLink: data.background.imageLink,\n    //     backgroudColor: data.background.color,\n    //     backgroundCustomColor: data.background.customColor,\n    //     profilePicture: data.profilePicture,\n    // };\n\n    // const [values, setValues] = useState(initialVals);\n\n    return (\n        <Segment className=\"Profile\">\n            <Header content=\"Profile\" />\n            <Segment>\n                <pre>\n                    <b>Title:</b>{' '}\n                    {editRightLink ? (\n                        <StandardInput\n                            dataGroup=\"profile\"\n                            field=\"title\"\n                            values={data}\n                            setValues={setData}\n                        />\n                    ) : data.profile.title ? (\n                        <p>{`${data.profile.title}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                <pre>\n                    <b>Title Color:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"titleColor\"\n                            values={data}\n                            setValues={setData}\n                            options={presetColorOptions}\n                        />\n                    ) : data.profile.titleColor ? (\n                        data.profile.titleColor\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n            </Segment>\n            <Segment>\n                <pre>\n                    <b>Background Color:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"bgColor\"\n                            values={data}\n                            setValues={setData}\n                            options={presetColorOptions}\n                        />\n                    ) : data.profile.bgColor ? (\n                        <p>{`${data.profile.bgColor}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                {data.profile.bgColor === 'custom' ? (\n                    <pre>\n                        <p>\n                            <b>Custom Background Color:</b>\n                            <br />\n                            <a\n                                href=\"https://mycolor.space/gradient3\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                Try a Gradiant?\n                                {/* add a hover text (tooltip) to say 'use this link and copy and paste exactly \"css code\" box' */}\n                            </a>\n                        </p>\n                        {editRightLink ? (\n                            <StandardInput\n                                dataGroup=\"profile\"\n                                field=\"bgCustomColor\"\n                                values={data}\n                                setValues={setData}\n                            />\n                        ) : data.profile.bgCustomColor ? (\n                            <p>{`${data.profile.bgCustomColor}`}</p>\n                        ) : (\n                            'empty'\n                        )}\n                    </pre>\n                ) : (\n                    ''\n                )}\n                <pre>\n                    <b>Background Image:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"bgImage\"\n                            values={data}\n                            setValues={setData}\n                            options={presetBool}\n                        />\n                    ) : data.profile.bgImage ? (\n                        <p>{`${data.profile.bgImage}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                {data.profile.bgImage ? (\n                    <pre>\n                        <b>Background Image Link:</b>{' '}\n                        {editRightLink ? (\n                            <StandardInput\n                                dataGroup=\"profile\"\n                                field=\"bgImageLink\"\n                                values={data}\n                                setValues={setData}\n                            />\n                        ) : data.profile.bgImageLink ? (\n                            <p>{`${data.profile.bgImageLink}`}</p>\n                        ) : (\n                            'empty'\n                        )}\n                    </pre>\n                ) : (\n                    ''\n                )}\n            </Segment>\n            <Segment>\n                <pre>\n                    <b>Profile Picture:</b>{' '}\n                    {editRightLink ? (\n                        <StandardInput\n                            dataGroup=\"profile\"\n                            field=\"profilePicture\"\n                            values={data}\n                            setValues={setData}\n                        />\n                    ) : data.profile.profilePicture ? (\n                        <Image\n                            src={data.profile.profilePicture}\n                            size=\"small\"\n                            inline\n                        />\n                    ) : (\n                        // <p>{`${data.profile.profilePicture}`}</p>\n                        'empty'\n                    )}\n                </pre>\n            </Segment>\n        </Segment>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nexport const BRANDS = [\n    { title: 'amazon', image: <Icon name=\"amazon\" size=\"big\" /> },\n    { title: 'amazon pay', image: <Icon name=\"amazon pay\" size=\"big\" /> },\n    { title: 'android', image: <Icon name=\"android\" size=\"big\" /> },\n    { title: 'angellist', image: <Icon name=\"angellist\" size=\"big\" /> },\n    { title: 'app store', image: <Icon name=\"app store\" size=\"big\" /> },\n    {\n        title: 'app store ios',\n        image: <Icon name=\"app store ios\" size=\"big\" />,\n    },\n    { title: 'apple', image: <Icon name=\"apple\" size=\"big\" /> },\n    { title: 'apple pay', image: <Icon name=\"apple pay\" size=\"big\" /> },\n    { title: 'audible', image: <Icon name=\"audible\" size=\"big\" /> },\n    { title: 'aws', image: <Icon name=\"aws\" size=\"big\" /> },\n    { title: 'bandcamp', image: <Icon name=\"bandcamp\" size=\"big\" /> },\n    { title: 'behance', image: <Icon name=\"behance\" size=\"big\" /> },\n    {\n        title: 'behance square',\n        image: <Icon name=\"behance square\" size=\"big\" />,\n    },\n    { title: 'bimobject', image: <Icon name=\"bimobject\" size=\"big\" /> },\n    { title: 'bitbucket', image: <Icon name=\"bitbucket\" size=\"big\" /> },\n    { title: 'bitcoin', image: <Icon name=\"bitcoin\" size=\"big\" /> },\n    { title: 'bity', image: <Icon name=\"bity\" size=\"big\" /> },\n    { title: 'blackberry', image: <Icon name=\"blackberry\" size=\"big\" /> },\n    { title: 'blogger', image: <Icon name=\"blogger\" size=\"big\" /> },\n    { title: 'blogger b', image: <Icon name=\"blogger b\" size=\"big\" /> },\n    { title: 'bluetooth', image: <Icon name=\"bluetooth\" size=\"big\" /> },\n    { title: 'bluetooth b', image: <Icon name=\"bluetooth b\" size=\"big\" /> },\n    { title: 'btc', image: <Icon name=\"btc\" size=\"big\" /> },\n    {\n        title: 'cc amazon pay',\n        image: <Icon name=\"cc amazon pay\" size=\"big\" />,\n    },\n    { title: 'cc amex', image: <Icon name=\"cc amex\" size=\"big\" /> },\n    { title: 'cc apple pay', image: <Icon name=\"cc apple pay\" size=\"big\" /> },\n    {\n        title: 'cc diners club',\n        image: <Icon name=\"cc diners club\" size=\"big\" />,\n    },\n    { title: 'cc discover', image: <Icon name=\"cc discover\" size=\"big\" /> },\n    { title: 'cc jcb', image: <Icon name=\"cc jcb\" size=\"big\" /> },\n    {\n        title: 'cc mastercard',\n        image: <Icon name=\"cc mastercard\" size=\"big\" />,\n    },\n    { title: 'cc paypal', image: <Icon name=\"cc paypal\" size=\"big\" /> },\n    { title: 'cc stripe', image: <Icon name=\"cc stripe\" size=\"big\" /> },\n    { title: 'cc visa', image: <Icon name=\"cc visa\" size=\"big\" /> },\n    { title: 'chrome', image: <Icon name=\"chrome\" size=\"big\" /> },\n    { title: 'codepen', image: <Icon name=\"codepen\" size=\"big\" /> },\n    {\n        title: 'creative commons',\n        image: <Icon name=\"creative commons\" size=\"big\" />,\n    },\n    { title: 'deviantart', image: <Icon name=\"deviantart\" size=\"big\" /> },\n    { title: 'digg', image: <Icon name=\"digg\" size=\"big\" /> },\n    {\n        title: 'digital ocean',\n        image: <Icon name=\"digital ocean\" size=\"big\" />,\n    },\n    { title: 'discord', image: <Icon name=\"discord\" size=\"big\" /> },\n    { title: 'docker', image: <Icon name=\"docker\" size=\"big\" /> },\n    { title: 'dribbble', image: <Icon name=\"dribbble\" size=\"big\" /> },\n    {\n        title: 'dribbble square',\n        image: <Icon name=\"dribbble square\" size=\"big\" />,\n    },\n    { title: 'dropbox', image: <Icon name=\"dropbox\" size=\"big\" /> },\n    { title: 'drupal', image: <Icon name=\"drupal\" size=\"big\" /> },\n    { title: 'ember', image: <Icon name=\"ember\" size=\"big\" /> },\n    { title: 'empire', image: <Icon name=\"empire\" size=\"big\" /> },\n    { title: 'ethereum', image: <Icon name=\"ethereum\" size=\"big\" /> },\n    { title: 'etsy', image: <Icon name=\"etsy\" size=\"big\" /> },\n    { title: 'facebook', image: <Icon name=\"facebook\" size=\"big\" /> },\n    { title: 'facebook f', image: <Icon name=\"facebook f\" size=\"big\" /> },\n    {\n        title: 'facebook messenger',\n        image: <Icon name=\"facebook messenger\" size=\"big\" />,\n    },\n    {\n        title: 'facebook square',\n        image: <Icon name=\"facebook square\" size=\"big\" />,\n    },\n    { title: 'firefox', image: <Icon name=\"firefox\" size=\"big\" /> },\n    { title: 'flickr', image: <Icon name=\"flickr\" size=\"big\" /> },\n    { title: 'flipboard', image: <Icon name=\"flipboard\" size=\"big\" /> },\n    { title: 'foursquare', image: <Icon name=\"foursquare\" size=\"big\" /> },\n    {\n        title: 'free code camp',\n        image: <Icon name=\"free code camp\" size=\"big\" />,\n    },\n    { title: 'git', image: <Icon name=\"git\" size=\"big\" /> },\n    { title: 'git square', image: <Icon name=\"git square\" size=\"big\" /> },\n    { title: 'github', image: <Icon name=\"github\" size=\"big\" /> },\n    {\n        title: 'github alternate',\n        image: <Icon name=\"github alternate\" size=\"big\" />,\n    },\n    {\n        title: 'github square',\n        image: <Icon name=\"github square\" size=\"big\" />,\n    },\n    { title: 'gitkraken', image: <Icon name=\"gitkraken\" size=\"big\" /> },\n    { title: 'gitlab', image: <Icon name=\"gitlab\" size=\"big\" /> },\n    { title: 'goodreads', image: <Icon name=\"goodreads\" size=\"big\" /> },\n    { title: 'goodreads g', image: <Icon name=\"goodreads g\" size=\"big\" /> },\n    { title: 'google', image: <Icon name=\"google\" size=\"big\" /> },\n    { title: 'google drive', image: <Icon name=\"google drive\" size=\"big\" /> },\n    { title: 'google play', image: <Icon name=\"google play\" size=\"big\" /> },\n    { title: 'google plus', image: <Icon name=\"google plus\" size=\"big\" /> },\n    {\n        title: 'google plus g',\n        image: <Icon name=\"google plus g\" size=\"big\" />,\n    },\n    {\n        title: 'google plus square',\n        image: <Icon name=\"google plus square\" size=\"big\" />,\n    },\n    {\n        title: 'google wallet',\n        image: <Icon name=\"google wallet\" size=\"big\" />,\n    },\n    { title: 'hooli', image: <Icon name=\"hooli\" size=\"big\" /> },\n    { title: 'instagram', image: <Icon name=\"instagram\" size=\"big\" /> },\n    { title: 'itunes', image: <Icon name=\"itunes\" size=\"big\" /> },\n    { title: 'itunes note', image: <Icon name=\"itunes note\" size=\"big\" /> },\n    { title: 'jenkins', image: <Icon name=\"jenkins\" size=\"big\" /> },\n    { title: 'joomla', image: <Icon name=\"joomla\" size=\"big\" /> },\n    { title: 'jsfiddle', image: <Icon name=\"jsfiddle\" size=\"big\" /> },\n    { title: 'keycdn', image: <Icon name=\"keycdn\" size=\"big\" /> },\n    { title: 'kickstarter', image: <Icon name=\"kickstarter\" size=\"big\" /> },\n    {\n        title: 'kickstarter k',\n        image: <Icon name=\"kickstarter k\" size=\"big\" />,\n    },\n    { title: 'laravel', image: <Icon name=\"laravel\" size=\"big\" /> },\n    { title: 'linkedin', image: <Icon name=\"linkedin\" size=\"big\" /> },\n    { title: 'lyft', image: <Icon name=\"lyft\" size=\"big\" /> },\n    { title: 'magento', image: <Icon name=\"magento\" size=\"big\" /> },\n    { title: 'medium', image: <Icon name=\"medium\" size=\"big\" /> },\n    { title: 'medium m', image: <Icon name=\"medium m\" size=\"big\" /> },\n    { title: 'meetup', image: <Icon name=\"meetup\" size=\"big\" /> },\n    { title: 'microsoft', image: <Icon name=\"microsoft\" size=\"big\" /> },\n    { title: 'mix', image: <Icon name=\"mix\" size=\"big\" /> },\n    { title: 'mixcloud', image: <Icon name=\"mixcloud\" size=\"big\" /> },\n    { title: 'napster', image: <Icon name=\"napster\" size=\"big\" /> },\n    {\n        title: 'nintendo switch',\n        image: <Icon name=\"nintendo switch\" size=\"big\" />,\n    },\n    { title: 'npm', image: <Icon name=\"npm\" size=\"big\" /> },\n    { title: 'nutritionix', image: <Icon name=\"nutritionix\" size=\"big\" /> },\n    { title: 'patreon', image: <Icon name=\"patreon\" size=\"big\" /> },\n    { title: 'paypal', image: <Icon name=\"paypal\" size=\"big\" /> },\n    { title: 'periscope', image: <Icon name=\"periscope\" size=\"big\" /> },\n    { title: 'php', image: <Icon name=\"php\" size=\"big\" /> },\n    { title: 'pied piper', image: <Icon name=\"pied piper\" size=\"big\" /> },\n    {\n        title: 'pied piper alternate',\n        image: <Icon name=\"pied piper alternate\" size=\"big\" />,\n    },\n    {\n        title: 'pied piper pp',\n        image: <Icon name=\"pied piper pp\" size=\"big\" />,\n    },\n    { title: 'pinterest', image: <Icon name=\"pinterest\" size=\"big\" /> },\n    { title: 'pinterest p', image: <Icon name=\"pinterest p\" size=\"big\" /> },\n    {\n        title: 'pinterest square',\n        image: <Icon name=\"pinterest square\" size=\"big\" />,\n    },\n    { title: 'playstation', image: <Icon name=\"playstation\" size=\"big\" /> },\n    { title: 'quora', image: <Icon name=\"quora\" size=\"big\" /> },\n    { title: 'reddit', image: <Icon name=\"reddit\" size=\"big\" /> },\n    { title: 'reddit alien', image: <Icon name=\"reddit alien\" size=\"big\" /> },\n    {\n        title: 'reddit square',\n        image: <Icon name=\"reddit square\" size=\"big\" />,\n    },\n    { title: 'replyd', image: <Icon name=\"replyd\" size=\"big\" /> },\n    { title: 'rocketchat', image: <Icon name=\"rocketchat\" size=\"big\" /> },\n    { title: 'skype', image: <Icon name=\"skype\" size=\"big\" /> },\n    { title: 'slack', image: <Icon name=\"slack\" size=\"big\" /> },\n    { title: 'slack hash', image: <Icon name=\"slack hash\" size=\"big\" /> },\n    { title: 'slideshare', image: <Icon name=\"slideshare\" size=\"big\" /> },\n    { title: 'snapchat', image: <Icon name=\"snapchat\" size=\"big\" /> },\n    {\n        title: 'snapchat ghost',\n        image: <Icon name=\"snapchat ghost\" size=\"big\" />,\n    },\n    {\n        title: 'snapchat square',\n        image: <Icon name=\"snapchat square\" size=\"big\" />,\n    },\n    { title: 'soundcloud', image: <Icon name=\"soundcloud\" size=\"big\" /> },\n    { title: 'spotify', image: <Icon name=\"spotify\" size=\"big\" /> },\n    {\n        title: 'stack exchange',\n        image: <Icon name=\"stack exchange\" size=\"big\" />,\n    },\n    {\n        title: 'stack overflow',\n        image: <Icon name=\"stack overflow\" size=\"big\" />,\n    },\n    { title: 'staylinked', image: <Icon name=\"staylinked\" size=\"big\" /> },\n    { title: 'steam', image: <Icon name=\"steam\" size=\"big\" /> },\n    { title: 'steam square', image: <Icon name=\"steam square\" size=\"big\" /> },\n    { title: 'steam symbol', image: <Icon name=\"steam symbol\" size=\"big\" /> },\n    { title: 'stripe', image: <Icon name=\"stripe\" size=\"big\" /> },\n    { title: 'stripe s', image: <Icon name=\"stripe s\" size=\"big\" /> },\n    { title: 'stumbleupon', image: <Icon name=\"stumbleupon\" size=\"big\" /> },\n    {\n        title: 'stumbleupon circle',\n        image: <Icon name=\"stumbleupon circle\" size=\"big\" />,\n    },\n    { title: 'telegram', image: <Icon name=\"telegram\" size=\"big\" /> },\n    {\n        title: 'telegram plane',\n        image: <Icon name=\"telegram plane\" size=\"big\" />,\n    },\n    { title: 'trello', image: <Icon name=\"trello\" size=\"big\" /> },\n    { title: 'tripadvisor', image: <Icon name=\"tripadvisor\" size=\"big\" /> },\n    { title: 'tumblr', image: <Icon name=\"tumblr\" size=\"big\" /> },\n    {\n        title: 'tumblr square',\n        image: <Icon name=\"tumblr square\" size=\"big\" />,\n    },\n    { title: 'twitch', image: <Icon name=\"twitch\" size=\"big\" /> },\n    { title: 'twitter', image: <Icon name=\"twitter\" size=\"big\" /> },\n    {\n        title: 'twitter square',\n        image: <Icon name=\"twitter square\" size=\"big\" />,\n    },\n    { title: 'uber', image: <Icon name=\"uber\" size=\"big\" /> },\n    { title: 'vimeo', image: <Icon name=\"vimeo\" size=\"big\" /> },\n    { title: 'vimeo square', image: <Icon name=\"vimeo square\" size=\"big\" /> },\n    { title: 'vimeo v', image: <Icon name=\"vimeo v\" size=\"big\" /> },\n    { title: 'vine', image: <Icon name=\"vine\" size=\"big\" /> },\n    { title: 'vk', image: <Icon name=\"vk\" size=\"big\" /> },\n    { title: 'wechat', image: <Icon name=\"wechat\" size=\"big\" /> },\n    { title: 'weibo', image: <Icon name=\"weibo\" size=\"big\" /> },\n    { title: 'whatsapp', image: <Icon name=\"whatsapp\" size=\"big\" /> },\n    {\n        title: 'whatsapp square',\n        image: <Icon name=\"whatsapp square\" size=\"big\" />,\n    },\n    { title: 'wikipedia w', image: <Icon name=\"wikipedia w\" size=\"big\" /> },\n    { title: 'xbox', image: <Icon name=\"xbox\" size=\"big\" /> },\n    { title: 'y combinator', image: <Icon name=\"y combinator\" size=\"big\" /> },\n    { title: 'yahoo', image: <Icon name=\"yahoo\" size=\"big\" /> },\n    { title: 'yelp', image: <Icon name=\"yelp\" size=\"big\" /> },\n    { title: 'youtube', image: <Icon name=\"youtube\" size=\"big\" /> },\n    {\n        title: 'youtube square',\n        image: <Icon name=\"youtube square\" size=\"big\" />,\n    },\n];\n\nexport const ICONS = [...BRANDS];\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport './AddLink.css';\n\nconst AddLink = ({ collection, data, setData, linkGroup }) => {\n    const addSocialLink = {\n        name: '',\n        iconName: '',\n        link: '',\n        color: '',\n        secondaryColor: '',\n        surrounded: '',\n        surroundedInColor: '',\n    };\n\n    const addRightLinkGroup = {\n        name: 'New Group',\n        color: 'green',\n    };\n\n    const addRightLink = {\n        group: linkGroup,\n        name: {\n            type: 'text',\n            value: 'New Right Link',\n        },\n        link: {\n            type: 'text',\n            value: '',\n        },\n        linkSpaced: {\n            type: 'bool',\n            value: false,\n        },\n        type: {\n            type: 'typeSelect',\n            value: '',\n        },\n        typeAction: {\n            type: 'text',\n            value: '',\n        },\n        internal: {\n            type: 'bool',\n            value: false,\n        },\n        featured: {\n            type: 'bool',\n            value: false,\n        },\n        featuredText: {\n            type: 'text',\n            value: '',\n        },\n        featuredTimerDate: {\n            type: 'text',\n            value: '',\n        },\n        featuredTimerText: {\n            type: 'text',\n            value: '',\n        },\n        featuredColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        featuredAltStyle: {\n            type: 'text',\n            value: '',\n        },\n        pinned: {\n            type: 'bool',\n            value: false,\n        },\n        mainMedia: {\n            type: 'obj',\n            value: {},\n        },\n        additionalLinks: {\n            type: 'array',\n            value: [],\n        },\n        color: {\n            type: 'colorSelect',\n            value: '',\n        },\n        colorOveride: {\n            type: 'text',\n            value: '',\n        },\n        fontColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        colored: {\n            type: 'bool',\n            value: false,\n        },\n        buttonColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        bannerSide: {\n            type: 'sideSelect',\n            value: '',\n        },\n        additionalStyle: {\n            type: 'text',\n            value: 'longText',\n        },\n        modalAlternativeText: {\n            type: 'obj',\n            value: {\n                removed: false,\n                text: '',\n            },\n        },\n        bioContent: {\n            type: 'array',\n            value: [],\n        },\n    };\n\n    const addAdditionalLinks = {\n        name: '',\n        link: ''\n    }\n\n    const addBio = {\n        header: '',\n        subHeader: ''\n    }\n\n    // need to return empty, if edit mode return \n    const addCollection = '';\n\n    const handleClick = () => {\n        if (collection === 'socialLinks') {\n            const socialLinksCopy = data.socialLinks.group;\n            socialLinksCopy.push(addSocialLink);\n            setData({ ...data, [data.socialLinks.group]: [socialLinksCopy] });\n        }\n        if (collection === 'rightLinks') {\n            const rightLinksCopy = data.rightLinks.links;\n            rightLinksCopy.push(addRightLink);\n            setData({\n                ...data,\n                [data.rightLinks.links]: rightLinksCopy,\n            });\n        }\n        if (collection === 'rightLinksGroups') {\n            const rightLinkGroupsCopy = data.rightLinks.groups;\n            rightLinkGroupsCopy.push(addRightLinkGroup);\n            setData({ ...data, [data.rightLinks.groups]: rightLinkGroupsCopy });\n        }\n        if (collection === 'addLink') {\n            const linksCopy = data.rightLinks.links[linkGroup].additionalLinks.value;\n            linksCopy.push(addAdditionalLinks);\n            setData({ ...data, [data.rightLinks.links[linkGroup].additionalLinks.value]: linksCopy})\n        }\n        if (collection === 'bio') {\n            const bioCopy = data.rightLinks.links[linkGroup].bioContent.value;\n            bioCopy.push(addBio);\n            setData({ ...data, [data.rightLinks.links[linkGroup].bioContent.value]: bioCopy})\n        }\n        if (collection === 'collection') {\n            const collectionCopy = data.rightLinks.links[linkGroup].mainMedia.value.collection.value;\n            collectionCopy.push(addCollection);\n            setData({ ...data, [data.rightLinks.links[linkGroup].mainMedia.value.collection.value]: collectionCopy})\n        }\n    };\n\n    return (\n        <Icon\n            color=\"green\"\n            name=\"add square\"\n            size=\"big\"\n            className=\"custom\"\n            link\n            onClick={handleClick}\n        />\n    );\n};\n\nexport default AddLink;\n","import React, { useState } from 'react';\nimport { Segment, Header, Accordion, Icon, Grid } from 'semantic-ui-react';\nimport {\n    SocialLinksStandardInput,\n    SocialLinksSelectInput,\n    RightLinkSearch,\n} from '../CustomInput/CustomInputs';\nimport { ICONS } from '../../constants/icons';\nimport AddLink from '../AddLink/AddLink';\nimport './socialLinks.css';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst SocialLinks = ({ editRightLink, data, setData }) => {\n    const [activeIndex, setActiveIndex] = useState();\n\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n    ];\n\n    const presetBool = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const handleClick = (e, titleProps) => {\n        const { index } = titleProps;\n        const newIndex = activeIndex === index ? -1 : index;\n\n        setActiveIndex(newIndex);\n    };\n\n    return (\n        <Segment className=\"social links\">\n            <Header content=\"Social Links\" />\n            <Accordion styled>\n                {data.socialLinks.group.map((link, i) => (\n                    <div key={`social link ${i+1}`}>\n                        <Accordion.Title\n                            active={activeIndex === i}\n                            index={i}\n                            onClick={handleClick}\n                        >\n                            <Icon name=\"dropdown\" />\n                            {`Social Link ${i}`}\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === i}>\n                            <Segment>\n                                <pre>\n                                    <b>name:</b>{' '}\n                                    {editRightLink ? (\n                                        <Grid centered columns={2}>\n                                            <Grid.Row>\n                                                <RightLinkSearch\n                                                    dataGroup=\"socialLinks\"\n                                                    group=\"group\"\n                                                    field=\"name\"\n                                                    values={data}\n                                                    setValues={setData}\n                                                    collection={ICONS}\n                                                    position={i}\n                                                />\n                                            </Grid.Row>\n                                        </Grid>\n                                    ) : link.name ? (\n                                        link.name\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>link:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksStandardInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"link\"\n                                            values={data}\n                                            setValues={setData}\n                                            position={i}\n                                        />\n                                    ) : link.link ? (\n                                        <p>{`${link.link}`}</p>\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>color:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"color\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetColorOptions}\n                                            position={i}\n                                        />\n                                    ) : link.color ? (\n                                        link.color\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>surrounded:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"surrounded\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetBool}\n                                            position={i}\n                                        />\n                                    ) : link.surrounded ? (\n                                        `${link.surrounded}`\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>surroundedInColor:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"surroundedInColor\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetBool}\n                                            position={i}\n                                        />\n                                    ) : link.surroundedInColor ? (\n                                        `${link.surroundedInColor}`\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                {link.surroundedInColor ? (\n                                    <pre>\n                                        <b>secondaryColor:</b>{' '}\n                                        {editRightLink ? (\n                                            <SocialLinksSelectInput\n                                                dataGroup=\"socialLinks\"\n                                                group=\"group\"\n                                                field=\"secondaryColor\"\n                                                values={data}\n                                                setValues={setData}\n                                                options={presetColorOptions}\n                                                position={i}\n                                            />\n                                        ) : link.secondaryColor ? (\n                                            link.secondaryColor\n                                        ) : (\n                                            'empty'\n                                        )}\n                                    </pre>\n                                ) : (\n                                    ''\n                                )}\n                            </Segment>\n                        </Accordion.Content>\n                    </div>\n                ))}\n            </Accordion>\n            <AddLink\n                collection=\"socialLinks\"\n                data={data}\n                setData={setData}\n                linkGroup=\"\"\n            />\n        </Segment>\n    );\n};\n\nexport default SocialLinks;\n","import React from 'react';\nimport { Segment, Input, TextArea } from 'semantic-ui-react';\nimport AddLink from '../AddLink/AddLink';\n\n/* eslint no-unused-vars: 0 */\n/*  eslint no-nested-ternary: \"off\" */\nexport const EditRightLinkArrays = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleStandardInputChange = ({ value }, valueField, innerArrayPosition) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value[innerArrayPosition] };\n        item[valueField] = value;\n        items[dataGroup][group][position][field].value[innerArrayPosition] = item;\n        setValues({ ...items });\n    };\n\n    const handleCollectionChange = ({ value }, innerArrayPosition) => {\n        const items = { ...values };\n        let item = { ...items[dataGroup][group][position][field].value.collection.value[innerArrayPosition] };\n        item = value;\n        items[dataGroup][group][position][field].value.collection.value[innerArrayPosition] = item;\n        setValues({ ...items });\n    };\n\n    const editAdditionalLinks = () => <>\n        {Object.keys(values[dataGroup][group][position][field].value).map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>Link Name:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].name}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'name', i)\n                            }\n                        />\n                    </pre>\n                    <pre>\n                        <b>Link:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].link}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'link', i)\n                            }\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='addLink' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    const editBioLinks = () => <>\n        {Object.keys(values[dataGroup][group][position][field].value).map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>Header:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].header}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'header', i)\n                            }\n                        />\n                    </pre>\n                    <pre>\n                        <b>Body:</b>{' '}\n                        <TextArea  \n                            value={values[dataGroup][group][position][field].value[i].subHeader}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'subHeader', i)\n                            }\n                            rows={4}\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='bio' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    const editCollection = () => <>\n        {values[dataGroup][group][position][field].value.collection.value.map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>{`Image ${i+1}:`}</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value.collection.value[i]}\n                            onChange={(e, d) =>\n                                handleCollectionChange(d, i)\n                            }\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='collection' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    return values[dataGroup][group][position][field].arrayType === 'addLinks' ? editAdditionalLinks() : values[dataGroup][group][position][field].arrayType === 'bio' ? editBioLinks() : editCollection() \n}\n\nexport const RightLinksArrays = ({\n    RLArr\n}) => {\n    const additionalLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <Segment key={`RLArray ${i+1}`}>\n                    <pre>\n                        <b>Link Name:</b> {' '}\n                        {link.name !== '' ? \n                        <p>{`${link.name}`}</p> : 'empty'}\n                    </pre>\n                    <pre>\n                        <b>Link:</b> {' '}\n                        {link.link !== '' ? \n                        <p>{`${link.link}`}</p> : 'empty'}\n                    </pre>\n                </Segment>\n            )\n        )}\n    </>\n\n    const bioLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <Segment key={`RLBio ${i+1}`}>\n                    <pre>\n                        <b>Header:</b> {' '}\n                        {link.header !== '' ? \n                        <p>{`${link.header}`}</p> : 'empty'}\n                    </pre>\n                    <pre>\n                        <b>Body:</b> {' '}\n                        {link.subHeader !== '' ? \n                        <p>{`${link.subHeader}`}</p> : 'empty'}\n                    </pre>\n                </Segment>\n            )\n        )}\n    </>\n\n    const collectionLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <pre key={`RLCollection ${i+1}`}>\n                    <b>{`Image ${i+1}:`}</b> {' '}\n                    <p>{`${link}`}</p>\n                </pre>\n            )\n        )}\n    </>\n    \n    return RLArr.arrayType === 'addLinks' ? additionalLinks() : RLArr.arrayType === 'bio' ? bioLinks() : collectionLinks()\n}\n\n","\nimport React from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport { RightLinksArrays } from './RightLinkArrays';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinkObjectPreview = ({\n    RLObj\n}) => <>\n    {Object.keys(RLObj.value).map(\n        (objectKey, i) => (\n            <Segment key={`RLObjectPreview ${objectKey} ${i+1}`}>\n                {RLObj.value[objectKey].arrayType ? (\n                    <RightLinksArrays RLArr={RLObj.value[objectKey]} />\n                ) : (\n                <pre>\n                    <b>{`${objectKey}:`}</b> {' '}\n                    {   objectKey === 'speed' ? \n                        <p>{`${RLObj.value[objectKey].value.toString().slice(0, -3)} sec`}</p>:\n                        RLObj.value[objectKey].value !== '' ? \n                        <p>{`${RLObj.value[objectKey].value}`}</p> : 'empty'\n                    }\n                </pre>\n                )}\n            </Segment>\n        )\n    )}\n</>\n\nexport default RightLinkObjectPreview;\n","\nimport React from 'react';\nimport { Input, Segment, Select } from 'semantic-ui-react';\nimport { EditRightLinkArrays } from './RightLinkArrays';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinkObjects = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n\n    const presetMediaOptions = [\n        { key: 'still', text: 'still', value: 'still' },\n        { key: 'video', text: 'video', value: 'video' },\n        { key: 'slideshow', text: 'slideshow', value: 'slideshow' },\n    ];\n\n    const presetBoolOptions = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const presetSpeedOptions = [\n        { key: '1', text: '1 sec', value: 1000 },\n        { key: '2', text: '2 sec', value: 2000 },\n        { key: '3', text: '3 sec', value: 3000 },\n        { key: '4', text: '4 sec', value: 4000 },\n        { key: '5', text: '5 sec', value: 5000 },\n        { key: '6', text: '6 sec', value: 6000 },\n        { key: '7', text: '7 sec', value: 7000 },\n        { key: '8', text: '8 sec', value: 8000 },\n        { key: '9', text: '9 sec', value: 9000 },\n        { key: '10', text: '10 sec', value: 10000 },\n    ]\n\n    const handleStandardInputChange = ({ value }, valueField) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value };\n        item[valueField].value = value;\n        items[dataGroup][group][position][field].value = item;\n        setValues({ ...items });\n    };\n\n    const handleSelectChange = ({ value }, valueField) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value };\n        item[valueField].value = value;\n        // if (field === 'type') {\n        //     if (value === 'internal') {\n        //         item.internal.value = true;\n        //     } else {\n        //         item.internal.value = false;\n        //     }\n        // }\n        items[dataGroup][group][position][field].value = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <>\n            {Object.keys(values[dataGroup][group][position][field].value).map(\n                (objectKey, i) => values[dataGroup][group][position][field].value[\n                        objectKey\n                    ].type === 'text' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Input\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    onChange={(e, d) =>\n                                        handleStandardInputChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'bool' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value\n                                    }\n                                    options={presetBoolOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'mediaSelect' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    options={presetMediaOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'array' ? (\n                            <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                               <pre>\n                                <b>Collection:</b> {' '}\n                                <EditRightLinkArrays \n                                    dataGroup={dataGroup}\n                                    group={group}\n                                    field={field}\n                                    values={values}\n                                    setValues={setValues}\n                                    position={position}\n                                />\n                               </pre> \n                            </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                        objectKey\n                        ].type === 'number' ? (\n                            <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    options={presetSpeedOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) :\n                    (\n                        'Other Not Yet Implented'\n                    )\n            )))))}\n        </>\n    ); \n};\n\nexport default RightLinkObjects;\n","import React, { useState } from 'react';\nimport {\n    Segment,\n    Header,\n    Accordion,\n    Icon,\n    Label,\n    Divider,\n} from 'semantic-ui-react';\nimport {\n    RLGroupInput,\n    RLGroupSelectInput,\n    RightLinkStandardInput,\n    RightLinkSelectInput,\n} from '../CustomInput/CustomInputs';\nimport AddLink from '../AddLink/AddLink';\nimport RightLinkObjectPreview from './RightLinkObjectPreview';\nimport RightLinkObjects from './RightLinkObjects';\nimport { RightLinksArrays, EditRightLinkArrays } from './RightLinkArrays';\nimport './rightLinks.css';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinks = ({ editRightLink, data, setData }) => {\n    const [activeIndex, setActiveIndex] = useState();\n    const [showgroup, setShowGroup] = useState(false);\n    const [rightLinksFilter, setRightLinksFilters] = useState('');\n\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n    ];\n\n    const presetBoolOptions = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const presetSideOptions = [\n        { key: 'none', text: 'none', value: 'none' },\n        { key: 'left', text: 'left', value: 'left' },\n        { key: 'right', text: 'right', value: 'right' },\n    ];\n\n    const presetTypeOptions = [\n        { key: 'internal', text: 'internal', value: 'internal' },\n        { key: 'external', text: 'external', value: 'external' },\n        { key: 'item', text: 'item', value: 'item' },\n        {\n            key: 'still/external',\n            text: 'still/external',\n            value: 'still/external',\n        },\n        { key: 'slideshow', text: 'slideshow', value: 'slideshow' },\n        { key: 'bio', text: 'bio', value: 'bio' },\n    ];\n\n    const presetAdditionalStyles = [\n        { key: 'longText', text: 'longText', value: 'longText' },\n    ];\n    const handleClick = (e, titleProps) => {\n        const { index } = titleProps;\n        const newIndex = activeIndex === index ? -1 : index;\n\n        setActiveIndex(newIndex);\n    };\n\n    const handleGroupClick = (e, groupData) => {\n        setShowGroup(true);\n        setRightLinksFilters(`${groupData.children[1]}`);\n    };\n\n    return (\n        <Segment className=\"LinkGroup 1\">\n            <div>\n                {data.rightLinks.groups.map((group, i) => <Label\n                            key={`group label ${i+1}`}\n                            as=\"a\"\n                            image\n                            className=\"linkLabels\"\n                            color={group.color}\n                            onClick={handleGroupClick}\n                        >\n                            <Icon name=\"linkify\" />\n                            {group.name}\n                        </Label>\n                )}\n                <AddLink\n                    collection=\"rightLinksGroups\"\n                    data={data}\n                    setData={setData}\n                    linkGroup=\"\"\n                />\n            </div>\n            <Divider />\n            <Header content=\"Link Group\" />\n            {showgroup ? (\n                <>\n                    <Segment>\n                        <pre>\n                            <b>Group Name:</b>{' '}\n                            {/* need to add text length validation to this field */}\n                            {editRightLink ? (\n                                <RLGroupInput\n                                    dataGroup=\"rightLinks\"\n                                    group=\"groups\"\n                                    field=\"name\"\n                                    values={data.rightLinks.groups.filter(\n                                        (group) =>\n                                            group.name === rightLinksFilter\n                                    )}\n                                    data={data}\n                                    setData={setData}\n                                    setFilter={setRightLinksFilters}\n                                />\n                            ) : data.rightLinks.groups.filter(\n                                  (group) => group.name === rightLinksFilter\n                              )[0].name ? (\n                                <p>{`${data.rightLinks.groups.filter(\n                                    (group) => group.name === rightLinksFilter\n                                )[0].name}`}</p>\n                            ) : (\n                                'empty'\n                            )}\n                        </pre>\n                    </Segment>\n                    <Segment>\n                        <pre>\n                            <b>Group Color:</b>{' '}\n                            {editRightLink ? (\n                                <RLGroupSelectInput\n                                    dataGroup=\"rightLinks\"\n                                    group=\"groups\"\n                                    field=\"color\"\n                                    values={data.rightLinks.groups.filter(\n                                        (group) =>\n                                            group.name === rightLinksFilter\n                                    )}\n                                    options={presetColorOptions}\n                                    data={data}\n                                    setData={setData}\n                                />\n                            ) : data.rightLinks.groups.filter(\n                                  (group) => group.name === rightLinksFilter\n                              )[0].color ? (\n                                data.rightLinks.groups.filter(\n                                    (group) => group.name === rightLinksFilter\n                                )[0].color\n                            ) : (\n                                'empty'\n                            )}\n                        </pre>\n                    </Segment>\n                    <Accordion styled>\n                        {data.rightLinks.links.map((link, i) => \n                            link.group.value === rightLinksFilter ? (\n                                <div key={`RightLink-${i+1}`}>\n                                    <Accordion.Title\n                                        active={activeIndex === i}\n                                        index={i}\n                                        onClick={handleClick}\n                                    >\n                                        <Icon name=\"dropdown\" />\n                                        {`${link.name.value}`}\n                                    </Accordion.Title>\n                                    {Object.keys(link).map((key, j) => \n                                        ['group', 'internal'].includes(\n                                            key\n                                        ) ? (\n                                            ''\n                                        ) : (\n                                            <Accordion.Content\n                                                active={activeIndex === i}\n                                                key={`RightLink-content-${j+1}`}\n                                            >\n                                                <Segment>\n                                                    <pre>\n                                                        <b>{`${key}:`}</b>{' '}\n                                                        {editRightLink ? (\n                                                            link[key].type ===\n                                                            'text' ? (\n                                                                <RightLinkStandardInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'bool' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetBoolOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'typeSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetTypeOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'colorSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetColorOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'sideSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetSideOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'stylesSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetAdditionalStyles\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'obj' ? (\n                                                                <RightLinkObjects\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'array' ? (\n                                                                <EditRightLinkArrays \n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : (\n                                                                'field not valid'\n                                                            )\n                                                        ) : ['array'].includes(\n                                                              link[key].type\n                                                          ) ? (\n                                                            <RightLinksArrays RLArr={link[key]}/>\n                                                        ) : link[key].type ===\n                                                          'bool' ? (\n                                                            `${link[key].value}`\n                                                        ) : link[key].type ===\n                                                          'obj' ? (\n                                                            <RightLinkObjectPreview RLObj={link[key]} />\n                                                        ) : link[key].value ? (\n                                                            <p>{`${link[key].value}`}</p>\n                                                        ) : (\n                                                            'empty'\n                                                        )}\n                                                    </pre>\n                                                </Segment>\n                                            </Accordion.Content>\n                                        )\n                                    )}\n                                </div>\n                            ) : (\n                                ''\n                            )\n                        )}\n                    </Accordion>\n                </>\n            ) : (\n                'Please select one from above or add a new group for your Right-Links'\n            )}\n            <div>\n                <AddLink\n                    collection=\"rightLinks\"\n                    data={data}\n                    setData={setData}\n                    linkGroup={rightLinksFilter}\n                />\n            </div>\n        </Segment>\n    );\n};\n\nexport default RightLinks;\n","import React from 'react';\nimport { Tab, Menu, Label } from 'semantic-ui-react';\nimport ProfileSection from '../Profile/Profile';\nimport SocialLinks from '../SocialLinks/SocialLinks';\nimport RightLinks from '../RightLinks/RightLinks';\nimport './main.css';\n\nconst Main = ({ editRightLink, data, setData, trackedChanges }) => {\n    const panes = [\n        {\n            menuItem: 'Profile',\n            render: () => (\n                <Tab.Pane>\n                    <ProfileSection\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: 'Social Links',\n            render: () => (\n                <Tab.Pane>\n                    <SocialLinks\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: 'Links',\n            render: () => (\n                <Tab.Pane>\n                    <RightLinks\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: (\n                <Menu.Item as=\"a\" key=\"preview\">\n                    Preview\n                    {/* Eventually make this label track changes */}\n                    {trackedChanges > 0 ? (\n                        <Label color=\"green\" className=\"previewLabel\">\n                            {trackedChanges}\n                        </Label>\n                    ) : (\n                        ''\n                    )}\n                </Menu.Item>\n            ),\n            render: () => <Tab.Pane>{/* <Preview /> */}</Tab.Pane>,\n        },\n    ];\n\n    return (\n        <div className=\"containerSize mainContainer\">\n            <Tab\n                menu={{ fluid: true, vertical: true, tabular: true }}\n                panes={panes}\n            />\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport _ from 'lodash';\n// import * as Diff from 'diff';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\nimport { db } from '../../utils/auth/firebase';\nimport RightLinkCollectionModal from '../RightLinkCollectionModal/RightLinkCollectionModal';\nimport Header from '../Header/Header';\nimport RightLinkManagementOpt from '../RightLinkManagementOpt/RightLinkManagementOpt';\nimport Main from '../Main/Main';\nimport './Home.css';\n\nconst Home = () => {\n    const MAX_VERSIONS = 5;\n\n    const { currentUser } = useContext(FirebaseContext);\n    const [editRightLink, setEditRightLink] = useState(false);\n    const [saveRightLink, setSaveRightLink] = useState(true);\n    const [userDbDoc, setUserDbDoc] = useState('');\n    const [trackedChanges, setTrackedChanges] = useState(0);\n    const [isModalOpen, setIsModalOpen] = useState(true);\n    const [userRightLinkData, setUserRightLinkData] = useState([]);\n    const [selectedRightLink, setSelectedRightLink] = useState({});\n    const [data, setData] = useState({});\n\n    const handleEditClick = () => {\n        setEditRightLink((previous) => !previous);\n        setSaveRightLink((previous) => !previous);\n    };\n\n    const saveData = async () => {\n        const currentDate = new Date().toLocaleString();\n        const userRef = db.collection('users').doc(userDbDoc);\n\n        let dataToSave = [];\n        if (userRightLinkData.data && userRightLinkData.data.length > 0) {\n            const rightLinkExists = _.find(\n                userRightLinkData.data,\n                (x) => x.uuid === data.uuid\n            );\n            if (rightLinkExists) {\n                const fullUserRightLinkDataCopy = userRightLinkData.data;\n                for (let i = 0; i < fullUserRightLinkDataCopy.length; i += 1) {\n                    if (\n                        fullUserRightLinkDataCopy[i].uuid ===\n                        rightLinkExists.uuid\n                    ) {\n                        fullUserRightLinkDataCopy[i] = data;\n                    }\n                }\n                dataToSave = {\n                    ...userRightLinkData,\n                    data: fullUserRightLinkDataCopy,\n                };\n            } else {\n                const userRightLinkDataCopy = userRightLinkData.data;\n                userRightLinkDataCopy.push({ ...data });\n                dataToSave = {\n                    ...userRightLinkData,\n                    data: userRightLinkDataCopy,\n                };\n            }\n        } else {\n            dataToSave = [{ ...data }];\n        }\n\n        try {\n            db.runTransaction(async (transaction) => {\n                const doc = await transaction.get(userRef);\n\n                // doc doesn't exist; can't update\n                if (!doc.exists) return;\n                // update the users array after getting it from Firestore.\n                const newUserDataArray = doc.data();\n                const newVersion = {\n                    version: dataToSave.version ? dataToSave.version + 1 : 1,\n                    date: currentDate,\n                    data: dataToSave.data ? dataToSave.data : dataToSave,\n                };\n                if (newUserDataArray.data.length >= MAX_VERSIONS) {\n                    newUserDataArray.data.shift();\n                }\n                newUserDataArray.data.push(newVersion);\n\n                transaction.update(userRef, { ...newUserDataArray });\n            });\n        } catch (e) {\n            console.log('Transaction failed: ', e);\n        }\n\n        setTrackedChanges(trackedChanges + 1);\n    };\n    const handleSaveClick = () => {\n        setEditRightLink((previous) => !previous);\n        setSaveRightLink((previous) => !previous);\n        saveData();\n    };\n\n    useEffect(() => {\n        const fetch = () => {\n            db.collection('users')\n                .where('uid', '==', currentUser.uid)\n                .onSnapshot((snapshot) => {\n                    let currentData = 0;\n                    const items = snapshot.docs.map((doc) => ({\n                        id: doc.id,\n                        ...doc.data(),\n                    }));\n                    if (items[0] && items[0].data) {\n                        currentData = _.maxBy(items[0].data, 'version');\n                        setUserDbDoc(items[0].id);\n                    }\n\n                    setUserRightLinkData(\n                        currentData && currentData !== 0 ? currentData : []\n                    );\n                });\n        };\n        fetch();\n    }, []);\n    // const compareJSON = () => {\n    // const ret = {};\n    // const arr = [];\n\n    // const diff = Diff.diffJson(originalData, data);\n    // console.log('diff', diff);\n    // Object.keys(originalData).forEach((key) => {\n    //     if (\n    //         !Object.prototype.hasOwnProperty.call(data, key) ||\n    //         originalData[key] !== data[key]\n    //     ) {\n    //         if (\n    //             !Array.isArray(data[key]) ||\n    //             !(\n    //                 JSON.stringify(data[key]) ===\n    //                 JSON.stringify(originalData[key])\n    //             )\n    //         ) {\n    //             ret[key] = data[key];\n    //             arr.push(data[key]);\n    //         }\n    //     }\n    // });\n    // console.log('arr', arr.length);\n    // console.log('obj', ret);\n\n    // return ret;\n    // };\n\n    // useEffect(() => {\n    //     compareJSON();\n    // }, [data]);\n\n    return (\n        <Grid columns={2}>\n            {isModalOpen ? (\n                <RightLinkCollectionModal\n                    isModalOpen={isModalOpen}\n                    setIsModalOpen={setIsModalOpen}\n                    collection={userRightLinkData}\n                    setSelectedRightLink={setSelectedRightLink}\n                    setData={setData}\n                />\n            ) : (\n                <>\n                    <Grid.Row centered>\n                        <Header />\n                    </Grid.Row>\n                    <Grid.Row className=\"RLContentRight\">\n                        <RightLinkManagementOpt\n                            handleEditClick={handleEditClick}\n                            editRightLink={editRightLink}\n                            handleSaveClick={handleSaveClick}\n                            saveRightLink={saveRightLink}\n                        />\n                    </Grid.Row>\n                    <Grid.Row centered>\n                        <Main\n                            editRightLink={editRightLink}\n                            data={data}\n                            setData={setData}\n                            trackedChanges={trackedChanges}\n                            originalData={selectedRightLink}\n                        />\n                    </Grid.Row>\n                </>\n            )}\n        </Grid>\n    );\n};\n\nexport default Home;\n","import React, { useContext, useCallback } from 'react';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport firebaseApp, { signInWithGoogle } from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\nimport './login.css';\n\nfunction Login({ history }) {\n    const { currentUser } = useContext(FirebaseContext);\n\n    const handleLogin = useCallback(\n        async (event) => {\n            event.preventDefault();\n            const { email, password } = event.target.elements;\n            try {\n                await firebaseApp\n                    .auth()\n                    .signInWithEmailAndPassword(email.value, password.value);\n                history.push('/');\n            } catch (error) {\n                alert(error);\n            }\n        },\n        [history]\n    );\n\n    if (currentUser) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <div className=\"login\">\n            <form className=\"login__container\" onSubmit={handleLogin}>\n                <h1>Log in</h1>\n                <input\n                    className=\"login__textBox\"\n                    name=\"email\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                />\n                <input\n                    className=\"login__textBox\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n                <button className=\"login__btn\" type=\"submit\">\n                    Log in\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"login__btn login__google\"\n                    onClick={signInWithGoogle}\n                >\n                    Login with Google\n                </button>\n                <div>\n                    <Link to=\"/reset\">Forgot Password</Link>\n                </div>\n                <div>\n                    Don&apos;t have an account?{' '}\n                    <Link to=\"/register\">Register</Link> now.\n                </div>\n            </form>\n        </div>\n    );\n}\nexport default withRouter(Login);\n","import React, { useCallback } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport {\n    registerWithEmailAndPassword,\n    signInWithGoogle,\n} from '../../utils/auth/firebase';\nimport './register.css';\n\nfunction Register({ history }) {\n    const handleSignUp = useCallback(\n        async (event) => {\n            event.preventDefault();\n            const { name, email, password } = event.target.elements;\n            try {\n                await registerWithEmailAndPassword(\n                    name.value,\n                    email.value,\n                    password.value\n                );\n                history.push('/');\n            } catch (error) {\n                alert(error);\n            }\n        },\n        [history]\n    );\n    return (\n        <div className=\"register\">\n            <form className=\"register__container\" onSubmit={handleSignUp}>\n                <h1>Register</h1>\n                <input\n                    className=\"register__textBox\"\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Full Name\"\n                />\n                <input\n                    className=\"register__textBox\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                />\n                <input\n                    className=\"register__textBox\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n                <button className=\"register__btn\" type=\"submit\">\n                    Sign Up\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"login__btn login__google\"\n                    onClick={signInWithGoogle}\n                >\n                    Register with Google\n                </button>\n                <div>\n                    Already have an account? <Link to=\"/\">Login</Link> now.\n                </div>\n            </form>\n        </div>\n    );\n}\nexport default withRouter(Register);\n","import React, { useState, useContext } from 'react';\nimport { withRouter, Link, Redirect } from 'react-router-dom';\nimport { sendPasswordResetEmail } from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\nimport './reset.css';\n\nfunction Reset() {\n    const [email, setEmail] = useState('');\n    const { currentUser } = useContext(FirebaseContext);\n\n    if (currentUser) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <div className=\"reset\">\n            <div className=\"reset__container\">\n                <input\n                    type=\"text\"\n                    className=\"reset__textBox\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"E-mail Address\"\n                />\n                <button\n                    type=\"button\"\n                    className=\"reset__btn\"\n                    onClick={() => sendPasswordResetEmail(email)}\n                >\n                    Send password reset email\n                </button>\n                <div>\n                    Don&apos;t have an account?{' '}\n                    <Link to=\"/register\">Register</Link> now.\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default withRouter(Reset);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const { currentUser } = useContext(FirebaseContext);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                currentUser ? (\n                    <Component {...rest} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/login',\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","/* eslint-disable arrow-body-style */\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { CloudinaryContext } from 'cloudinary-react';\nimport { FirebaseProvider } from './utils/auth/FirebaseContext';\nimport Home from './components/Home/Home';\nimport 'semantic-ui-css/semantic.min.css';\nimport Login from './components/Login/Login';\nimport Register from './components/Login/Register';\nimport Reset from './components/Login/Reset';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport { CLOUD_NAME, UPLOAD_PRESET } from './config/config';\n\nconst App = () => {\n    return (\n        <FirebaseProvider>\n            <CloudinaryContext\n                cloudName={CLOUD_NAME}\n                uploadPreset={UPLOAD_PRESET}\n            >\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <PrivateRoute exact path=\"/\" component={Home} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/register\" component={Register} />\n                        <Route exact path=\"/reset\" component={Reset} />\n                    </Switch>\n                </Router>\n            </CloudinaryContext>\n        </FirebaseProvider>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}