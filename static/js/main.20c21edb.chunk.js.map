{"version":3,"sources":["utils/auth/firebase.js","utils/auth/FirebaseContext.js","assets/TheRightClickTransparent.png","components/Navbar/Navbar.js","components/Header/Header.js","components/ProfileButton/ProfileButton.js","components/RightLinkManagementOpt/RightLinkManagementOpt.js","components/CustomInput/CustomInputs.js","components/Profile/Profile.js","constants/icons.js","components/AddLink/AddLink.js","components/SocialLinks/SocialLinks.js","components/RightLinks/RightLinkArrays.js","components/RightLinks/RightLinkObjectPreview.js","components/RightLinks/RightLinkObjects.js","components/RightLinks/RightLinks.js","components/Main/Main.js","components/Home/Home.js","components/Login/Login.js","components/Login/Register.js","components/PrivateRoute/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseContext","createContext","FirebaseProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","auth","onAuthStateChanged","user","Provider","value","StickyBar","style","justifyContent","width","boxShadow","zIndex","padding","alignItems","background","textAlign","href","Image","src","Logo","size","centered","display","Header","Navbar","ProfileButton","useContext","Dropdown","button","icon","direction","className","Menu","Item","disabled","email","text","onClick","signOut","RightLinkManagementOpt","handleEditClick","editRightLink","handleSaveClick","saveRightLink","Button","labelPosition","color","Icon","name","equals","a","b","Date","getTime","prototype","keys","Object","length","every","k","StandardInput","field","values","setValues","dataGroup","Input","defaultValue","onChange","e","items","item","SelectInput","options","Select","RightLinkSearch","group","collection","position","searchValue","setSearchValue","Search","aligned","onResultSelect","result","title","iconName","onSearchChange","target","toLowerCase","results","filter","x","includes","RLGroupInput","data","setData","setFilter","prevGroupName","groupLinks","links","i","RLGroupSelectInput","SocialLinksStandardInput","SocialLinksSelectInput","RightLinkStandardInput","RightLinkSelectInput","internal","Profile","presetColorOptions","key","Segment","content","profile","titleColor","bgColor","rel","bgCustomColor","bgImage","bgImageLink","profilePicture","BRANDS","image","ICONS","AddLink","linkGroup","addSocialLink","link","secondaryColor","surrounded","surroundedInColor","addRightLinkGroup","addRightLink","type","linkSpaced","typeAction","featured","featuredText","featuredTimerDate","featuredTimerText","featuredColor","featuredAltStyle","pinned","mainMedia","additionalLinks","colorOveride","fontColor","colored","buttonColor","bannerSide","additionalStyle","modalAlternativeText","removed","bioContent","addAdditionalLinks","addBio","header","subHeader","socialLinksCopy","socialLinks","push","rightLinksCopy","rightLinks","rightLinkGroupsCopy","groups","linksCopy","bioCopy","collectionCopy","SocialLinks","activeIndex","setActiveIndex","presetBool","handleClick","titleProps","index","Accordion","styled","map","Title","active","Content","Grid","columns","Row","EditRightLinkArrays","handleStandardInputChange","valueField","innerArrayPosition","arrayType","arrayItem","d","TextArea","rows","handleCollectionChange","RightLinksArrays","RLArr","RightLinkObjectPreview","RLObj","objectKey","toString","slice","RightLinkObjects","presetMediaOptions","presetBoolOptions","presetSpeedOptions","handleSelectChange","RightLinks","showgroup","setShowGroup","rightLinksFilter","setRightLinksFilters","presetSideOptions","presetTypeOptions","presetAdditionalStyles","handleGroupClick","groupData","Label","as","Divider","j","Main","trackedChanges","panes","menuItem","render","Tab","Pane","menu","fluid","vertical","tabular","Home","setEditRightLink","setSaveRightLink","userData","setTrackedChanges","originalData","previous","withRouter","history","handleLogin","useCallback","event","preventDefault","elements","password","signInWithEmailAndPassword","alert","to","onSubmit","placeholder","handleSignUp","createUserWithEmailAndPassword","PrivateRoute","Component","component","rest","console","log","location","pathname","state","from","App","exact","path","Login","Register","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20c21edb.chunk.js","sourcesContent":["import app from 'firebase/compat/app';\nimport 'firebase/compat/database';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyA-gqCbtJqvU6oeW1TZaQ1J7ucRZnc11AY',\n    authDomain: 'trc-rightlink.firebaseapp.com',\n    databaseURL: 'https://trc-rightlink-default-rtdb.firebaseio.com',\n    projectId: 'trc-rightlink',\n    storageBucket: 'trc-rightlink.appspot.com',\n    messagingSenderId: '455875126701',\n    appId: '1:455875126701:web:d2c485ee27c96cd88fed24',\n    measurementId: 'G-7JZL642SPP',\n};\nconst firebaseApp = app.initializeApp(firebaseConfig);\n\nexport default firebaseApp;\n\n// const appAuth = app.initializeApp(firebaseConfig);\n// const auth = appAuth.auth();\n// const db = app.firestore();\n\n// const googleProvider = new app.auth.GoogleAuthProvider();\n\n// const signInWithGoogle = async () => {\n//     try {\n//         const res = await auth.signInWithPopup(googleProvider);\n//         const { user } = res;\n//         const query = await db\n//             .collection('users')\n//             .where('uid', '==', user.uid)\n//             .get();\n//         if (query.docs.length === 0) {\n//             await db.collection('users').add({\n//                 uid: user.uid,\n//                 name: user.displayName,\n//                 authProvider: 'google',\n//                 email: user.email,\n//             });\n//         }\n//         localStorage.setItem('TRC-User', JSON.stringify(user));\n//     } catch (err) {\n//         console.error(err);\n//         alert(err.message);\n//     }\n// };\n\n// const signInWithEmailAndPassword = async (email, password) => {\n//     try {\n//         const res = await auth.signInWithEmailAndPassword(email, password);\n//         const { user } = res;\n//         localStorage.setItem('TRC-User', JSON.stringify(user));\n//     } catch (err) {\n//         console.error(err);\n//         alert(err.message);\n//     }\n// };\n\n// const registerWithEmailAndPassword = async (name, email, password) => {\n//     try {\n//         const res = await auth.createUserWithEmailAndPassword(email, password);\n//         const { user } = res;\n//         await db.collection('users').add({\n//             uid: user.uid,\n//             name,\n//             authProvider: 'local',\n//             email,\n//         });\n//         localStorage.setItem('TRC-User', JSON.stringify(user));\n//     } catch (err) {\n//         console.error(err);\n//         alert(err.message);\n//     }\n// };\n\n// const sendPasswordResetEmail = async (email) => {\n//     try {\n//         await auth.sendPasswordResetEmail(email);\n//         alert('Password reset link sent!');\n//     } catch (err) {\n//         console.error(err);\n//         alert(err.message);\n//     }\n// };\n\n// const logout = async () => {\n//     await auth.signOut();\n//     localStorage.removeItem('TRC-User');\n// };\n\n// export {\n//     auth,\n//     db,\n//     signInWithGoogle,\n//     signInWithEmailAndPassword,\n//     registerWithEmailAndPassword,\n//     sendPasswordResetEmail,\n//     logout,\n// };\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { createContext, useEffect, useState } from 'react';\n// import { useAuthState } from 'react-firebase-hooks/auth';\nimport firebaseApp from './firebase';\n\nconst FirebaseContext = createContext(null);\n\n// const useAuth = () => useContext(FirebaseContext);\n\nconst FirebaseProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [pending, setPending] = useState(true);\n\n    useEffect(() => {\n        firebaseApp.auth().onAuthStateChanged((user) => {\n            setCurrentUser(user);\n            setPending(false);\n        });\n    }, []);\n\n    if (pending) {\n        return <>Loading...</>;\n    }\n\n    return (\n        <FirebaseContext.Provider value={{ currentUser }}>\n            {children}\n        </FirebaseContext.Provider>\n    );\n};\n\nexport { FirebaseContext, FirebaseProvider };\n","export default __webpack_public_path__ + \"static/media/TheRightClickTransparent.45a3cb44.png\";","import React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport Logo from '../../assets/TheRightClickTransparent.png';\n\nconst StickyBar = () => (\n    <div\n        style={{\n            justifyContent: 'space-between',\n            width: '100%',\n            boxShadow: '0 0 1rem 0 rgba(100,110,140,.4)',\n            zIndex: '2',\n            padding: '1em',\n            alignItems: 'center',\n            background: 'white',\n            textAlign: 'center',\n        }}\n    >\n        <a href=\"/\">\n            <Image src={Logo} size=\"medium\" centered />\n        </a>\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                width: '60%',\n            }}\n        >\n            {/* This is where we can put buttons for the sticky nav */}\n        </div>\n    </div>\n);\n\nexport default StickyBar;\n","import React from 'react';\nimport Navbar from '../Navbar/Navbar';\n\nconst Header = () => <Navbar />\n\nexport default Header;\n","/* eslint-disable arrow-body-style */\nimport React, { useContext } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport firebaseApp from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\n// import { useHistory } from 'react-router-dom';\n// import { useAuthState } from 'react-firebase-hooks/auth';\n// import { useAuth } from '../../utils/auth/FirebaseContext';\n// import { auth, logout } from '../../utils/auth/firebase';\n\nconst ProfileButton = () => {\n    const { currentUser } = useContext(FirebaseContext);\n    // const history = useHistory();\n    // const [user, loading] = useAuthState(auth);\n    // const { user, setUser } = useAuth();\n    // console.log('profile button user', user);\n\n    // const trigger = (\n    //     <Button icon>\n    //         <Icon name=\"user\" />\n    //     </Button>\n    // );\n    const signOut = () => {\n        firebaseApp.auth().signOut();\n        // logout();\n        // setUser(null);\n    };\n    // useEffect(() => {\n    //     if (loading) return;\n    //     if (!user) {\n    //         history.replace('/login');\n    //     }\n    // }, [user, loading]);\n\n    // eslint-disable-next-line no-nested-ternary\n    return (\n        <Dropdown button icon=\"user\" direction=\"left\" className=\"icon\">\n            <Dropdown.Menu>\n                <Dropdown.Item disabled>\n                    <span>\n                        <strong>{currentUser.email}</strong>\n                        {/* <strong>{currentUser.displayName.split(' ')[0]}</strong> */}\n                        {/* <strong>Test</strong> */}\n                    </span>\n                </Dropdown.Item>\n                <Dropdown.Item text=\"Sign Out\" onClick={signOut} />\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileButton;\n","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport ProfileButton from '../ProfileButton/ProfileButton';\n\nconst RightLinkManagementOpt = ({\n    handleEditClick,\n    editRightLink,\n    handleSaveClick,\n    saveRightLink,\n}) => (\n    <>\n        <Button\n            icon\n            labelPosition=\"left\"\n            color=\"blue\"\n            disabled={editRightLink}\n            onClick={handleEditClick}\n        >\n            <Icon name=\"edit outline\" />\n            Edit\n        </Button>\n        <Button\n            icon\n            labelPosition=\"right\"\n            color=\"green\"\n            disabled={saveRightLink}\n            onClick={handleSaveClick}\n        >\n            Save\n            <Icon name=\"save outline\" />\n        </Button>\n        <ProfileButton />\n        {/* <Button icon>\n            <ProfileButton />\n        </Button> */}\n    </>\n);\n\nexport default RightLinkManagementOpt;\n","import React, { useState } from 'react';\nimport { Input, Select, Search } from 'semantic-ui-react';\n\nconst equals = (a, b) => {\n    if (a === b) return true;\n\n    if (a instanceof Date && b instanceof Date)\n        return a.getTime() === b.getTime();\n\n    if (!a || !b || (typeof a !== 'object' && typeof b !== 'object'))\n        return a === b;\n\n    if (a.prototype !== b.prototype) return false;\n\n    const keys = Object.keys(a);\n    if (keys.length !== Object.keys(b).length) return false;\n\n    return keys.every((k) => equals(a[k], b[k]));\n};\n\nexport const StandardInput = ({ field, values, setValues, dataGroup }) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = value;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Input\n            defaultValue={values[dataGroup][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const SelectInput = ({\n    field,\n    values,\n    setValues,\n    options,\n    dataGroup,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = value;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkSearch = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    collection,\n    position,\n}) => {\n    const [searchValue, setSearchValue] = useState('');\n\n    const handleChange = (e) => {\n        setSearchValue(e.target.value.toLowerCase());\n    };\n\n    const handleSelect = (e, { result }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = result.title;\n        if (field === 'name') {\n            item.iconName = result.title;\n        }\n        items[dataGroup][group][position] = item;\n        setSearchValue(result.title);\n        setValues({ ...items });\n    };\n\n    return (\n        <Search\n            aligned=\"left\"\n            onResultSelect={handleSelect}\n            onSearchChange={handleChange}\n            results={collection.filter((x) => x.title.includes(searchValue))}\n            value={searchValue}\n        />\n    );\n};\n\nexport const RLGroupInput = ({\n    field,\n    data,\n    values,\n    setData,\n    dataGroup,\n    group,\n    setFilter,\n}) => {\n    const prevGroupName = values[0].name;\n\n    const handleChange = (e, { value }) => {\n        const items = { ...data };\n        const item = [...items[dataGroup][group]];\n        const groupLinks = [...items[dataGroup].links];\n        for (let i = 0; i < item.length; i += 1) {\n            if (equals(item[i], values[0])) {\n                item[i][field] = value;\n            }\n        }\n        for (let i = 0; i < groupLinks.length; i += 1) {\n            if (groupLinks[i].group.value === prevGroupName) {\n                groupLinks[i].group.value = value;\n            }\n        }\n        items[dataGroup][group] = item;\n        items[dataGroup].links = groupLinks;\n        setFilter(value);\n        setData({ ...items });\n    };\n\n    return (\n        <Input defaultValue={values[0][field] || ''} onChange={handleChange} />\n    );\n};\n\nexport const RLGroupSelectInput = ({\n    field,\n    values,\n    setData,\n    options,\n    dataGroup,\n    group,\n    data,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...data };\n        const item = [...items[dataGroup][group]];\n        for (let i = 0; i < item.length; i += 1) {\n            if (equals(item[i], values[0])) {\n                item[i][field] = value;\n            }\n        }\n        items[dataGroup][group] = item;\n        // setFilter(value);\n        setData({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[0][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const SocialLinksStandardInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = value;\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Input\n            defaultValue={values[dataGroup][group][position][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const SocialLinksSelectInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    options,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = value;\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][group][position][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkStandardInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field].value = value;\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Input\n            defaultValue={values[dataGroup][group][position][field].value || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkSelectInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    options,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field].value = value;\n        if (field === 'type') {\n            if (value === 'internal') {\n                item.internal.value = true;\n            } else {\n                item.internal.value = false;\n            }\n        }\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][group][position][field].value || ''}\n            onChange={handleChange}\n        />\n    );\n};\n","import React from 'react';\nimport { Segment, Header } from 'semantic-ui-react';\n// import { SwatchesPicker } from 'react-color';\nimport { StandardInput, SelectInput } from '../CustomInput/CustomInputs';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst Profile = ({ editRightLink, data, setData }) => {\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n        { key: 'custom', text: 'custom', value: 'custom' },\n    ];\n\n    const presetBool = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    // const initialVals = {\n    //     title: data.title.title,\n    //     titleColor: data.title.color,\n    //     backgroundImage: data.background.image,\n    //     backgroundImageLink: data.background.imageLink,\n    //     backgroudColor: data.background.color,\n    //     backgroundCustomColor: data.background.customColor,\n    //     profilePicture: data.profilePicture,\n    // };\n\n    // const [values, setValues] = useState(initialVals);\n\n    return (\n        <Segment className=\"Profile\">\n            <Header content=\"Profile\" />\n            <Segment>\n                <pre>\n                    <b>Title:</b>{' '}\n                    {editRightLink ? (\n                        <StandardInput\n                            dataGroup=\"profile\"\n                            field=\"title\"\n                            values={data}\n                            setValues={setData}\n                        />\n                    ) : data.profile.title ? (\n                        <p>{`${data.profile.title}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                <pre>\n                    <b>Title Color:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"titleColor\"\n                            values={data}\n                            setValues={setData}\n                            options={presetColorOptions}\n                        />\n                    ) : data.profile.titleColor ? (\n                        data.profile.titleColor\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n            </Segment>\n            <Segment>\n                <pre>\n                    <b>Background Color:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"bgColor\"\n                            values={data}\n                            setValues={setData}\n                            options={presetColorOptions}\n                        />\n                    ) : data.profile.bgColor ? (\n                        <p>{`${data.profile.bgColor}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                {data.profile.bgColor === 'custom' ? (\n                    <pre>\n                        <p>\n                            <b>Custom Background Color:</b>\n                            <br />\n                            <a\n                                href=\"https://mycolor.space/gradient3\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                Try a Gradiant?\n                                {/* add a hover text (tooltip) to say 'use this link and copy and paste exactly \"css code\" box' */}\n                            </a>\n                        </p>\n                        {editRightLink ? (\n                            <StandardInput\n                                dataGroup=\"profile\"\n                                field=\"bgCustomColor\"\n                                values={data}\n                                setValues={setData}\n                            />\n                        ) : data.profile.bgCustomColor ? (\n                            <p>{`${data.profile.bgCustomColor}`}</p>\n                        ) : (\n                            'empty'\n                        )}\n                    </pre>\n                ) : (\n                    ''\n                )}\n                <pre>\n                    <b>Background Image:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"bgImage\"\n                            values={data}\n                            setValues={setData}\n                            options={presetBool}\n                        />\n                    ) : data.profile.bgImage ? (\n                        <p>{`${data.profile.bgImage}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                {data.profile.bgImage ? (\n                    <pre>\n                        <b>Background Image Link:</b>{' '}\n                        {editRightLink ? (\n                            <StandardInput\n                                dataGroup=\"profile\"\n                                field=\"bgImageLink\"\n                                values={data}\n                                setValues={setData}\n                            />\n                        ) : data.profile.bgImageLink ? (\n                            <p>{`${data.profile.bgImageLink}`}</p>\n                        ) : (\n                            'empty'\n                        )}\n                    </pre>\n                ) : (\n                    ''\n                )}\n            </Segment>\n            <Segment>\n                <pre>\n                    <b>Profile Picture:</b>{' '}\n                    {editRightLink ? (\n                        <StandardInput\n                            dataGroup=\"profile\"\n                            field=\"profilePicture\"\n                            values={data}\n                            setValues={setData}\n                        />\n                    ) : data.profile.profilePicture ? (\n                        <p>{`${data.profile.profilePicture}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n            </Segment>\n        </Segment>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nexport const BRANDS = [\n    { title: 'amazon', image: <Icon name=\"amazon\" size=\"big\" /> },\n    { title: 'amazon pay', image: <Icon name=\"amazon pay\" size=\"big\" /> },\n    { title: 'android', image: <Icon name=\"android\" size=\"big\" /> },\n    { title: 'angellist', image: <Icon name=\"angellist\" size=\"big\" /> },\n    { title: 'app store', image: <Icon name=\"app store\" size=\"big\" /> },\n    {\n        title: 'app store ios',\n        image: <Icon name=\"app store ios\" size=\"big\" />,\n    },\n    { title: 'apple', image: <Icon name=\"apple\" size=\"big\" /> },\n    { title: 'apple pay', image: <Icon name=\"apple pay\" size=\"big\" /> },\n    { title: 'audible', image: <Icon name=\"audible\" size=\"big\" /> },\n    { title: 'aws', image: <Icon name=\"aws\" size=\"big\" /> },\n    { title: 'bandcamp', image: <Icon name=\"bandcamp\" size=\"big\" /> },\n    { title: 'behance', image: <Icon name=\"behance\" size=\"big\" /> },\n    {\n        title: 'behance square',\n        image: <Icon name=\"behance square\" size=\"big\" />,\n    },\n    { title: 'bimobject', image: <Icon name=\"bimobject\" size=\"big\" /> },\n    { title: 'bitbucket', image: <Icon name=\"bitbucket\" size=\"big\" /> },\n    { title: 'bitcoin', image: <Icon name=\"bitcoin\" size=\"big\" /> },\n    { title: 'bity', image: <Icon name=\"bity\" size=\"big\" /> },\n    { title: 'blackberry', image: <Icon name=\"blackberry\" size=\"big\" /> },\n    { title: 'blogger', image: <Icon name=\"blogger\" size=\"big\" /> },\n    { title: 'blogger b', image: <Icon name=\"blogger b\" size=\"big\" /> },\n    { title: 'bluetooth', image: <Icon name=\"bluetooth\" size=\"big\" /> },\n    { title: 'bluetooth b', image: <Icon name=\"bluetooth b\" size=\"big\" /> },\n    { title: 'btc', image: <Icon name=\"btc\" size=\"big\" /> },\n    {\n        title: 'cc amazon pay',\n        image: <Icon name=\"cc amazon pay\" size=\"big\" />,\n    },\n    { title: 'cc amex', image: <Icon name=\"cc amex\" size=\"big\" /> },\n    { title: 'cc apple pay', image: <Icon name=\"cc apple pay\" size=\"big\" /> },\n    {\n        title: 'cc diners club',\n        image: <Icon name=\"cc diners club\" size=\"big\" />,\n    },\n    { title: 'cc discover', image: <Icon name=\"cc discover\" size=\"big\" /> },\n    { title: 'cc jcb', image: <Icon name=\"cc jcb\" size=\"big\" /> },\n    {\n        title: 'cc mastercard',\n        image: <Icon name=\"cc mastercard\" size=\"big\" />,\n    },\n    { title: 'cc paypal', image: <Icon name=\"cc paypal\" size=\"big\" /> },\n    { title: 'cc stripe', image: <Icon name=\"cc stripe\" size=\"big\" /> },\n    { title: 'cc visa', image: <Icon name=\"cc visa\" size=\"big\" /> },\n    { title: 'chrome', image: <Icon name=\"chrome\" size=\"big\" /> },\n    { title: 'codepen', image: <Icon name=\"codepen\" size=\"big\" /> },\n    {\n        title: 'creative commons',\n        image: <Icon name=\"creative commons\" size=\"big\" />,\n    },\n    { title: 'deviantart', image: <Icon name=\"deviantart\" size=\"big\" /> },\n    { title: 'digg', image: <Icon name=\"digg\" size=\"big\" /> },\n    {\n        title: 'digital ocean',\n        image: <Icon name=\"digital ocean\" size=\"big\" />,\n    },\n    { title: 'discord', image: <Icon name=\"discord\" size=\"big\" /> },\n    { title: 'docker', image: <Icon name=\"docker\" size=\"big\" /> },\n    { title: 'dribbble', image: <Icon name=\"dribbble\" size=\"big\" /> },\n    {\n        title: 'dribbble square',\n        image: <Icon name=\"dribbble square\" size=\"big\" />,\n    },\n    { title: 'dropbox', image: <Icon name=\"dropbox\" size=\"big\" /> },\n    { title: 'drupal', image: <Icon name=\"drupal\" size=\"big\" /> },\n    { title: 'ember', image: <Icon name=\"ember\" size=\"big\" /> },\n    { title: 'empire', image: <Icon name=\"empire\" size=\"big\" /> },\n    { title: 'ethereum', image: <Icon name=\"ethereum\" size=\"big\" /> },\n    { title: 'etsy', image: <Icon name=\"etsy\" size=\"big\" /> },\n    { title: 'facebook', image: <Icon name=\"facebook\" size=\"big\" /> },\n    { title: 'facebook f', image: <Icon name=\"facebook f\" size=\"big\" /> },\n    {\n        title: 'facebook messenger',\n        image: <Icon name=\"facebook messenger\" size=\"big\" />,\n    },\n    {\n        title: 'facebook square',\n        image: <Icon name=\"facebook square\" size=\"big\" />,\n    },\n    { title: 'firefox', image: <Icon name=\"firefox\" size=\"big\" /> },\n    { title: 'flickr', image: <Icon name=\"flickr\" size=\"big\" /> },\n    { title: 'flipboard', image: <Icon name=\"flipboard\" size=\"big\" /> },\n    { title: 'foursquare', image: <Icon name=\"foursquare\" size=\"big\" /> },\n    {\n        title: 'free code camp',\n        image: <Icon name=\"free code camp\" size=\"big\" />,\n    },\n    { title: 'git', image: <Icon name=\"git\" size=\"big\" /> },\n    { title: 'git square', image: <Icon name=\"git square\" size=\"big\" /> },\n    { title: 'github', image: <Icon name=\"github\" size=\"big\" /> },\n    {\n        title: 'github alternate',\n        image: <Icon name=\"github alternate\" size=\"big\" />,\n    },\n    {\n        title: 'github square',\n        image: <Icon name=\"github square\" size=\"big\" />,\n    },\n    { title: 'gitkraken', image: <Icon name=\"gitkraken\" size=\"big\" /> },\n    { title: 'gitlab', image: <Icon name=\"gitlab\" size=\"big\" /> },\n    { title: 'goodreads', image: <Icon name=\"goodreads\" size=\"big\" /> },\n    { title: 'goodreads g', image: <Icon name=\"goodreads g\" size=\"big\" /> },\n    { title: 'google', image: <Icon name=\"google\" size=\"big\" /> },\n    { title: 'google drive', image: <Icon name=\"google drive\" size=\"big\" /> },\n    { title: 'google play', image: <Icon name=\"google play\" size=\"big\" /> },\n    { title: 'google plus', image: <Icon name=\"google plus\" size=\"big\" /> },\n    {\n        title: 'google plus g',\n        image: <Icon name=\"google plus g\" size=\"big\" />,\n    },\n    {\n        title: 'google plus square',\n        image: <Icon name=\"google plus square\" size=\"big\" />,\n    },\n    {\n        title: 'google wallet',\n        image: <Icon name=\"google wallet\" size=\"big\" />,\n    },\n    { title: 'hooli', image: <Icon name=\"hooli\" size=\"big\" /> },\n    { title: 'instagram', image: <Icon name=\"instagram\" size=\"big\" /> },\n    { title: 'itunes', image: <Icon name=\"itunes\" size=\"big\" /> },\n    { title: 'itunes note', image: <Icon name=\"itunes note\" size=\"big\" /> },\n    { title: 'jenkins', image: <Icon name=\"jenkins\" size=\"big\" /> },\n    { title: 'joomla', image: <Icon name=\"joomla\" size=\"big\" /> },\n    { title: 'jsfiddle', image: <Icon name=\"jsfiddle\" size=\"big\" /> },\n    { title: 'keycdn', image: <Icon name=\"keycdn\" size=\"big\" /> },\n    { title: 'kickstarter', image: <Icon name=\"kickstarter\" size=\"big\" /> },\n    {\n        title: 'kickstarter k',\n        image: <Icon name=\"kickstarter k\" size=\"big\" />,\n    },\n    { title: 'laravel', image: <Icon name=\"laravel\" size=\"big\" /> },\n    { title: 'linkedin', image: <Icon name=\"linkedin\" size=\"big\" /> },\n    { title: 'lyft', image: <Icon name=\"lyft\" size=\"big\" /> },\n    { title: 'magento', image: <Icon name=\"magento\" size=\"big\" /> },\n    { title: 'medium', image: <Icon name=\"medium\" size=\"big\" /> },\n    { title: 'medium m', image: <Icon name=\"medium m\" size=\"big\" /> },\n    { title: 'meetup', image: <Icon name=\"meetup\" size=\"big\" /> },\n    { title: 'microsoft', image: <Icon name=\"microsoft\" size=\"big\" /> },\n    { title: 'mix', image: <Icon name=\"mix\" size=\"big\" /> },\n    { title: 'mixcloud', image: <Icon name=\"mixcloud\" size=\"big\" /> },\n    { title: 'napster', image: <Icon name=\"napster\" size=\"big\" /> },\n    {\n        title: 'nintendo switch',\n        image: <Icon name=\"nintendo switch\" size=\"big\" />,\n    },\n    { title: 'npm', image: <Icon name=\"npm\" size=\"big\" /> },\n    { title: 'nutritionix', image: <Icon name=\"nutritionix\" size=\"big\" /> },\n    { title: 'patreon', image: <Icon name=\"patreon\" size=\"big\" /> },\n    { title: 'paypal', image: <Icon name=\"paypal\" size=\"big\" /> },\n    { title: 'periscope', image: <Icon name=\"periscope\" size=\"big\" /> },\n    { title: 'php', image: <Icon name=\"php\" size=\"big\" /> },\n    { title: 'pied piper', image: <Icon name=\"pied piper\" size=\"big\" /> },\n    {\n        title: 'pied piper alternate',\n        image: <Icon name=\"pied piper alternate\" size=\"big\" />,\n    },\n    {\n        title: 'pied piper pp',\n        image: <Icon name=\"pied piper pp\" size=\"big\" />,\n    },\n    { title: 'pinterest', image: <Icon name=\"pinterest\" size=\"big\" /> },\n    { title: 'pinterest p', image: <Icon name=\"pinterest p\" size=\"big\" /> },\n    {\n        title: 'pinterest square',\n        image: <Icon name=\"pinterest square\" size=\"big\" />,\n    },\n    { title: 'playstation', image: <Icon name=\"playstation\" size=\"big\" /> },\n    { title: 'quora', image: <Icon name=\"quora\" size=\"big\" /> },\n    { title: 'reddit', image: <Icon name=\"reddit\" size=\"big\" /> },\n    { title: 'reddit alien', image: <Icon name=\"reddit alien\" size=\"big\" /> },\n    {\n        title: 'reddit square',\n        image: <Icon name=\"reddit square\" size=\"big\" />,\n    },\n    { title: 'replyd', image: <Icon name=\"replyd\" size=\"big\" /> },\n    { title: 'rocketchat', image: <Icon name=\"rocketchat\" size=\"big\" /> },\n    { title: 'skype', image: <Icon name=\"skype\" size=\"big\" /> },\n    { title: 'slack', image: <Icon name=\"slack\" size=\"big\" /> },\n    { title: 'slack hash', image: <Icon name=\"slack hash\" size=\"big\" /> },\n    { title: 'slideshare', image: <Icon name=\"slideshare\" size=\"big\" /> },\n    { title: 'snapchat', image: <Icon name=\"snapchat\" size=\"big\" /> },\n    {\n        title: 'snapchat ghost',\n        image: <Icon name=\"snapchat ghost\" size=\"big\" />,\n    },\n    {\n        title: 'snapchat square',\n        image: <Icon name=\"snapchat square\" size=\"big\" />,\n    },\n    { title: 'soundcloud', image: <Icon name=\"soundcloud\" size=\"big\" /> },\n    { title: 'spotify', image: <Icon name=\"spotify\" size=\"big\" /> },\n    {\n        title: 'stack exchange',\n        image: <Icon name=\"stack exchange\" size=\"big\" />,\n    },\n    {\n        title: 'stack overflow',\n        image: <Icon name=\"stack overflow\" size=\"big\" />,\n    },\n    { title: 'staylinked', image: <Icon name=\"staylinked\" size=\"big\" /> },\n    { title: 'steam', image: <Icon name=\"steam\" size=\"big\" /> },\n    { title: 'steam square', image: <Icon name=\"steam square\" size=\"big\" /> },\n    { title: 'steam symbol', image: <Icon name=\"steam symbol\" size=\"big\" /> },\n    { title: 'stripe', image: <Icon name=\"stripe\" size=\"big\" /> },\n    { title: 'stripe s', image: <Icon name=\"stripe s\" size=\"big\" /> },\n    { title: 'stumbleupon', image: <Icon name=\"stumbleupon\" size=\"big\" /> },\n    {\n        title: 'stumbleupon circle',\n        image: <Icon name=\"stumbleupon circle\" size=\"big\" />,\n    },\n    { title: 'telegram', image: <Icon name=\"telegram\" size=\"big\" /> },\n    {\n        title: 'telegram plane',\n        image: <Icon name=\"telegram plane\" size=\"big\" />,\n    },\n    { title: 'trello', image: <Icon name=\"trello\" size=\"big\" /> },\n    { title: 'tripadvisor', image: <Icon name=\"tripadvisor\" size=\"big\" /> },\n    { title: 'tumblr', image: <Icon name=\"tumblr\" size=\"big\" /> },\n    {\n        title: 'tumblr square',\n        image: <Icon name=\"tumblr square\" size=\"big\" />,\n    },\n    { title: 'twitch', image: <Icon name=\"twitch\" size=\"big\" /> },\n    { title: 'twitter', image: <Icon name=\"twitter\" size=\"big\" /> },\n    {\n        title: 'twitter square',\n        image: <Icon name=\"twitter square\" size=\"big\" />,\n    },\n    { title: 'uber', image: <Icon name=\"uber\" size=\"big\" /> },\n    { title: 'vimeo', image: <Icon name=\"vimeo\" size=\"big\" /> },\n    { title: 'vimeo square', image: <Icon name=\"vimeo square\" size=\"big\" /> },\n    { title: 'vimeo v', image: <Icon name=\"vimeo v\" size=\"big\" /> },\n    { title: 'vine', image: <Icon name=\"vine\" size=\"big\" /> },\n    { title: 'vk', image: <Icon name=\"vk\" size=\"big\" /> },\n    { title: 'wechat', image: <Icon name=\"wechat\" size=\"big\" /> },\n    { title: 'weibo', image: <Icon name=\"weibo\" size=\"big\" /> },\n    { title: 'whatsapp', image: <Icon name=\"whatsapp\" size=\"big\" /> },\n    {\n        title: 'whatsapp square',\n        image: <Icon name=\"whatsapp square\" size=\"big\" />,\n    },\n    { title: 'wikipedia w', image: <Icon name=\"wikipedia w\" size=\"big\" /> },\n    { title: 'xbox', image: <Icon name=\"xbox\" size=\"big\" /> },\n    { title: 'y combinator', image: <Icon name=\"y combinator\" size=\"big\" /> },\n    { title: 'yahoo', image: <Icon name=\"yahoo\" size=\"big\" /> },\n    { title: 'yelp', image: <Icon name=\"yelp\" size=\"big\" /> },\n    { title: 'youtube', image: <Icon name=\"youtube\" size=\"big\" /> },\n    {\n        title: 'youtube square',\n        image: <Icon name=\"youtube square\" size=\"big\" />,\n    },\n];\n\nexport const ICONS = [...BRANDS];\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport './AddLink.css';\n\nconst AddLink = ({ collection, data, setData, linkGroup }) => {\n    const addSocialLink = {\n        name: '',\n        iconName: '',\n        link: '',\n        color: '',\n        secondaryColor: '',\n        surrounded: '',\n        surroundedInColor: '',\n    };\n\n    const addRightLinkGroup = {\n        name: 'New Group',\n        color: 'green',\n    };\n\n    const addRightLink = {\n        group: linkGroup,\n        name: {\n            type: 'text',\n            value: 'New Right Link',\n        },\n        link: {\n            type: 'text',\n            value: '',\n        },\n        linkSpaced: {\n            type: 'bool',\n            value: false,\n        },\n        type: {\n            type: 'typeSelect',\n            value: '',\n        },\n        typeAction: {\n            type: 'text',\n            value: '',\n        },\n        internal: {\n            type: 'bool',\n            value: false,\n        },\n        featured: {\n            type: 'bool',\n            value: false,\n        },\n        featuredText: {\n            type: 'text',\n            value: '',\n        },\n        featuredTimerDate: {\n            type: 'text',\n            value: '',\n        },\n        featuredTimerText: {\n            type: 'text',\n            value: '',\n        },\n        featuredColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        featuredAltStyle: {\n            type: 'text',\n            value: '',\n        },\n        pinned: {\n            type: 'bool',\n            value: false,\n        },\n        mainMedia: {\n            type: 'obj',\n            value: {},\n        },\n        additionalLinks: {\n            type: 'array',\n            value: [],\n        },\n        color: {\n            type: 'colorSelect',\n            value: '',\n        },\n        colorOveride: {\n            type: 'text',\n            value: '',\n        },\n        fontColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        colored: {\n            type: 'bool',\n            value: false,\n        },\n        buttonColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        bannerSide: {\n            type: 'sideSelect',\n            value: '',\n        },\n        additionalStyle: {\n            type: 'text',\n            value: 'longText',\n        },\n        modalAlternativeText: {\n            type: 'obj',\n            value: {\n                removed: false,\n                text: '',\n            },\n        },\n        bioContent: {\n            type: 'array',\n            value: [],\n        },\n    };\n\n    const addAdditionalLinks = {\n        name: '',\n        link: ''\n    }\n\n    const addBio = {\n        header: '',\n        subHeader: ''\n    }\n\n    // need to return empty, if edit mode return \n    const addCollection = '';\n\n    const handleClick = () => {\n        if (collection === 'socialLinks') {\n            const socialLinksCopy = data.socialLinks.group;\n            socialLinksCopy.push(addSocialLink);\n            setData({ ...data, [data.socialLinks.group]: [socialLinksCopy] });\n        }\n        if (collection === 'rightLinks') {\n            const rightLinksCopy = data.rightLinks.links;\n            rightLinksCopy.push(addRightLink);\n            setData({\n                ...data,\n                [data.rightLinks.links]: rightLinksCopy,\n            });\n        }\n        if (collection === 'rightLinksGroups') {\n            const rightLinkGroupsCopy = data.rightLinks.groups;\n            rightLinkGroupsCopy.push(addRightLinkGroup);\n            setData({ ...data, [data.rightLinks.groups]: rightLinkGroupsCopy });\n        }\n        if (collection === 'addLink') {\n            const linksCopy = data.rightLinks.links[linkGroup].additionalLinks.value;\n            linksCopy.push(addAdditionalLinks);\n            setData({ ...data, [data.rightLinks.links[linkGroup].additionalLinks.value]: linksCopy})\n        }\n        if (collection === 'bio') {\n            const bioCopy = data.rightLinks.links[linkGroup].bioContent.value;\n            bioCopy.push(addBio);\n            setData({ ...data, [data.rightLinks.links[linkGroup].bioContent.value]: bioCopy})\n        }\n        if (collection === 'collection') {\n            const collectionCopy = data.rightLinks.links[linkGroup].mainMedia.value.collection.value;\n            collectionCopy.push(addCollection);\n            setData({ ...data, [data.rightLinks.links[linkGroup].mainMedia.value.collection.value]: collectionCopy})\n        }\n    };\n\n    return (\n        <Icon\n            color=\"green\"\n            name=\"add square\"\n            size=\"big\"\n            className=\"custom\"\n            link\n            onClick={handleClick}\n        />\n    );\n};\n\nexport default AddLink;\n","import React, { useState } from 'react';\nimport { Segment, Header, Accordion, Icon, Grid } from 'semantic-ui-react';\nimport {\n    SocialLinksStandardInput,\n    SocialLinksSelectInput,\n    RightLinkSearch,\n} from '../CustomInput/CustomInputs';\nimport { ICONS } from '../../constants/icons';\nimport AddLink from '../AddLink/AddLink';\nimport './socialLinks.css';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst SocialLinks = ({ editRightLink, data, setData }) => {\n    const [activeIndex, setActiveIndex] = useState();\n\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n    ];\n\n    const presetBool = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const handleClick = (e, titleProps) => {\n        const { index } = titleProps;\n        const newIndex = activeIndex === index ? -1 : index;\n\n        setActiveIndex(newIndex);\n    };\n\n    return (\n        <Segment className=\"social links\">\n            <Header content=\"Social Links\" />\n            <Accordion styled>\n                {data.socialLinks.group.map((link, i) => (\n                    <div key={`social link ${i+1}`}>\n                        <Accordion.Title\n                            active={activeIndex === i}\n                            index={i}\n                            onClick={handleClick}\n                        >\n                            <Icon name=\"dropdown\" />\n                            {`Social Link ${i}`}\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === i}>\n                            <Segment>\n                                <pre>\n                                    <b>name:</b>{' '}\n                                    {editRightLink ? (\n                                        <Grid centered columns={2}>\n                                            <Grid.Row>\n                                                <RightLinkSearch\n                                                    dataGroup=\"socialLinks\"\n                                                    group=\"group\"\n                                                    field=\"name\"\n                                                    values={data}\n                                                    setValues={setData}\n                                                    collection={ICONS}\n                                                    position={i}\n                                                />\n                                            </Grid.Row>\n                                        </Grid>\n                                    ) : link.name ? (\n                                        link.name\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>link:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksStandardInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"link\"\n                                            values={data}\n                                            setValues={setData}\n                                            position={i}\n                                        />\n                                    ) : link.link ? (\n                                        <p>{`${link.link}`}</p>\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>color:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"color\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetColorOptions}\n                                            position={i}\n                                        />\n                                    ) : link.color ? (\n                                        link.color\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>surrounded:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"surrounded\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetBool}\n                                            position={i}\n                                        />\n                                    ) : link.surrounded ? (\n                                        `${link.surrounded}`\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>surroundedInColor:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"surroundedInColor\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetBool}\n                                            position={i}\n                                        />\n                                    ) : link.surroundedInColor ? (\n                                        `${link.surroundedInColor}`\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                {link.surroundedInColor ? (\n                                    <pre>\n                                        <b>secondaryColor:</b>{' '}\n                                        {editRightLink ? (\n                                            <SocialLinksSelectInput\n                                                dataGroup=\"socialLinks\"\n                                                group=\"group\"\n                                                field=\"secondaryColor\"\n                                                values={data}\n                                                setValues={setData}\n                                                options={presetColorOptions}\n                                                position={i}\n                                            />\n                                        ) : link.secondaryColor ? (\n                                            link.secondaryColor\n                                        ) : (\n                                            'empty'\n                                        )}\n                                    </pre>\n                                ) : (\n                                    ''\n                                )}\n                            </Segment>\n                        </Accordion.Content>\n                    </div>\n                ))}\n            </Accordion>\n            <AddLink\n                collection=\"socialLinks\"\n                data={data}\n                setData={setData}\n                linkGroup=\"\"\n            />\n        </Segment>\n    );\n};\n\nexport default SocialLinks;\n","import React from 'react';\nimport { Segment, Input, TextArea } from 'semantic-ui-react';\nimport AddLink from '../AddLink/AddLink';\n\n/* eslint no-unused-vars: 0 */\n/*  eslint no-nested-ternary: \"off\" */\nexport const EditRightLinkArrays = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleStandardInputChange = ({ value }, valueField, innerArrayPosition) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value[innerArrayPosition] };\n        item[valueField] = value;\n        items[dataGroup][group][position][field].value[innerArrayPosition] = item;\n        setValues({ ...items });\n    };\n\n    const handleCollectionChange = ({ value }, innerArrayPosition) => {\n        const items = { ...values };\n        let item = { ...items[dataGroup][group][position][field].value.collection.value[innerArrayPosition] };\n        item = value;\n        items[dataGroup][group][position][field].value.collection.value[innerArrayPosition] = item;\n        setValues({ ...items });\n    };\n\n    const editAdditionalLinks = () => <>\n        {Object.keys(values[dataGroup][group][position][field].value).map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>Link Name:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].name}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'name', i)\n                            }\n                        />\n                    </pre>\n                    <pre>\n                        <b>Link:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].link}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'link', i)\n                            }\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='addLink' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    const editBioLinks = () => <>\n        {Object.keys(values[dataGroup][group][position][field].value).map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>Header:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].header}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'header', i)\n                            }\n                        />\n                    </pre>\n                    <pre>\n                        <b>Body:</b>{' '}\n                        <TextArea  \n                            value={values[dataGroup][group][position][field].value[i].subHeader}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'subHeader', i)\n                            }\n                            rows={4}\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='bio' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    const editCollection = () => <>\n        {values[dataGroup][group][position][field].value.collection.value.map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>{`Image ${i+1}:`}</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value.collection.value[i]}\n                            onChange={(e, d) =>\n                                handleCollectionChange(d, i)\n                            }\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='collection' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    return values[dataGroup][group][position][field].arrayType === 'addLinks' ? editAdditionalLinks() : values[dataGroup][group][position][field].arrayType === 'bio' ? editBioLinks() : editCollection() \n}\n\nexport const RightLinksArrays = ({\n    RLArr\n}) => {\n    const additionalLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <Segment key={`RLArray ${i+1}`}>\n                    <pre>\n                        <b>Link Name:</b> {' '}\n                        {link.name !== '' ? \n                        <p>{`${link.name}`}</p> : 'empty'}\n                    </pre>\n                    <pre>\n                        <b>Link:</b> {' '}\n                        {link.link !== '' ? \n                        <p>{`${link.link}`}</p> : 'empty'}\n                    </pre>\n                </Segment>\n            )\n        )}\n    </>\n\n    const bioLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <Segment key={`RLBio ${i+1}`}>\n                    <pre>\n                        <b>Header:</b> {' '}\n                        {link.header !== '' ? \n                        <p>{`${link.header}`}</p> : 'empty'}\n                    </pre>\n                    <pre>\n                        <b>Body:</b> {' '}\n                        {link.subHeader !== '' ? \n                        <p>{`${link.subHeader}`}</p> : 'empty'}\n                    </pre>\n                </Segment>\n            )\n        )}\n    </>\n\n    const collectionLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <pre key={`RLCollection ${i+1}`}>\n                    <b>{`Image ${i+1}:`}</b> {' '}\n                    <p>{`${link}`}</p>\n                </pre>\n            )\n        )}\n    </>\n    \n    return RLArr.arrayType === 'addLinks' ? additionalLinks() : RLArr.arrayType === 'bio' ? bioLinks() : collectionLinks()\n}\n\n","\nimport React from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport { RightLinksArrays } from './RightLinkArrays';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinkObjectPreview = ({\n    RLObj\n}) => <>\n    {Object.keys(RLObj.value).map(\n        (objectKey, i) => (\n            <Segment key={`RLObjectPreview ${objectKey} ${i+1}`}>\n                {RLObj.value[objectKey].arrayType ? (\n                    <RightLinksArrays RLArr={RLObj.value[objectKey]} />\n                ) : (\n                <pre>\n                    <b>{`${objectKey}:`}</b> {' '}\n                    {   objectKey === 'speed' ? \n                        <p>{`${RLObj.value[objectKey].value.toString().slice(0, -3)} sec`}</p>:\n                        RLObj.value[objectKey].value !== '' ? \n                        <p>{`${RLObj.value[objectKey].value}`}</p> : 'empty'\n                    }\n                </pre>\n                )}\n            </Segment>\n        )\n    )}\n</>\n\nexport default RightLinkObjectPreview;\n","\nimport React from 'react';\nimport { Input, Segment, Select } from 'semantic-ui-react';\nimport { EditRightLinkArrays } from './RightLinkArrays';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinkObjects = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n\n    const presetMediaOptions = [\n        { key: 'still', text: 'still', value: 'still' },\n        { key: 'video', text: 'video', value: 'video' },\n        { key: 'slideshow', text: 'slideshow', value: 'slideshow' },\n    ];\n\n    const presetBoolOptions = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const presetSpeedOptions = [\n        { key: '1', text: '1 sec', value: 1000 },\n        { key: '2', text: '2 sec', value: 2000 },\n        { key: '3', text: '3 sec', value: 3000 },\n        { key: '4', text: '4 sec', value: 4000 },\n        { key: '5', text: '5 sec', value: 5000 },\n        { key: '6', text: '6 sec', value: 6000 },\n        { key: '7', text: '7 sec', value: 7000 },\n        { key: '8', text: '8 sec', value: 8000 },\n        { key: '9', text: '9 sec', value: 9000 },\n        { key: '10', text: '10 sec', value: 10000 },\n    ]\n\n    const handleStandardInputChange = ({ value }, valueField) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value };\n        item[valueField].value = value;\n        items[dataGroup][group][position][field].value = item;\n        setValues({ ...items });\n    };\n\n    const handleSelectChange = ({ value }, valueField) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value };\n        item[valueField].value = value;\n        // if (field === 'type') {\n        //     if (value === 'internal') {\n        //         item.internal.value = true;\n        //     } else {\n        //         item.internal.value = false;\n        //     }\n        // }\n        items[dataGroup][group][position][field].value = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <>\n            {Object.keys(values[dataGroup][group][position][field].value).map(\n                (objectKey, i) => values[dataGroup][group][position][field].value[\n                        objectKey\n                    ].type === 'text' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Input\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    onChange={(e, d) =>\n                                        handleStandardInputChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'bool' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value\n                                    }\n                                    options={presetBoolOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'mediaSelect' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    options={presetMediaOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'array' ? (\n                            <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                               <pre>\n                                <b>Collection:</b> {' '}\n                                <EditRightLinkArrays \n                                    dataGroup={dataGroup}\n                                    group={group}\n                                    field={field}\n                                    values={values}\n                                    setValues={setValues}\n                                    position={position}\n                                />\n                               </pre> \n                            </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                        objectKey\n                        ].type === 'number' ? (\n                            <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    options={presetSpeedOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) :\n                    (\n                        'Other Not Yet Implented'\n                    )\n            )))))}\n        </>\n    ); \n};\n\nexport default RightLinkObjects;\n","import React, { useState } from 'react';\nimport {\n    Segment,\n    Header,\n    Accordion,\n    Icon,\n    Label,\n    Divider,\n} from 'semantic-ui-react';\nimport {\n    RLGroupInput,\n    RLGroupSelectInput,\n    RightLinkStandardInput,\n    RightLinkSelectInput,\n} from '../CustomInput/CustomInputs';\nimport AddLink from '../AddLink/AddLink';\nimport RightLinkObjectPreview from './RightLinkObjectPreview';\nimport RightLinkObjects from './RightLinkObjects';\nimport { RightLinksArrays, EditRightLinkArrays } from './RightLinkArrays';\nimport './rightLinks.css';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinks = ({ editRightLink, data, setData }) => {\n    const [activeIndex, setActiveIndex] = useState();\n    const [showgroup, setShowGroup] = useState(false);\n    const [rightLinksFilter, setRightLinksFilters] = useState('');\n\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n    ];\n\n    const presetBoolOptions = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const presetSideOptions = [\n        { key: 'none', text: 'none', value: 'none' },\n        { key: 'left', text: 'left', value: 'left' },\n        { key: 'right', text: 'right', value: 'right' },\n    ];\n\n    const presetTypeOptions = [\n        { key: 'internal', text: 'internal', value: 'internal' },\n        { key: 'external', text: 'external', value: 'external' },\n        { key: 'item', text: 'item', value: 'item' },\n        {\n            key: 'still/external',\n            text: 'still/external',\n            value: 'still/external',\n        },\n        { key: 'slideshow', text: 'slideshow', value: 'slideshow' },\n        { key: 'bio', text: 'bio', value: 'bio' },\n    ];\n\n    const presetAdditionalStyles = [\n        { key: 'longText', text: 'longText', value: 'longText' },\n    ];\n    const handleClick = (e, titleProps) => {\n        const { index } = titleProps;\n        const newIndex = activeIndex === index ? -1 : index;\n\n        setActiveIndex(newIndex);\n    };\n\n    const handleGroupClick = (e, groupData) => {\n        setShowGroup(true);\n        setRightLinksFilters(`${groupData.children[1]}`);\n    };\n\n    return (\n        <Segment className=\"LinkGroup 1\">\n            <div>\n                {data.rightLinks.groups.map((group, i) => <Label\n                            key={`group label ${i+1}`}\n                            as=\"a\"\n                            image\n                            className=\"linkLabels\"\n                            color={group.color}\n                            onClick={handleGroupClick}\n                        >\n                            <Icon name=\"linkify\" />\n                            {group.name}\n                        </Label>\n                )}\n                <AddLink\n                    collection=\"rightLinksGroups\"\n                    data={data}\n                    setData={setData}\n                    linkGroup=\"\"\n                />\n            </div>\n            <Divider />\n            <Header content=\"Link Group\" />\n            {showgroup ? (\n                <>\n                    <Segment>\n                        <pre>\n                            <b>Group Name:</b>{' '}\n                            {/* need to add text length validation to this field */}\n                            {editRightLink ? (\n                                <RLGroupInput\n                                    dataGroup=\"rightLinks\"\n                                    group=\"groups\"\n                                    field=\"name\"\n                                    values={data.rightLinks.groups.filter(\n                                        (group) =>\n                                            group.name === rightLinksFilter\n                                    )}\n                                    data={data}\n                                    setData={setData}\n                                    setFilter={setRightLinksFilters}\n                                />\n                            ) : data.rightLinks.groups.filter(\n                                  (group) => group.name === rightLinksFilter\n                              )[0].name ? (\n                                <p>{`${data.rightLinks.groups.filter(\n                                    (group) => group.name === rightLinksFilter\n                                )[0].name}`}</p>\n                            ) : (\n                                'empty'\n                            )}\n                        </pre>\n                    </Segment>\n                    <Segment>\n                        <pre>\n                            <b>Group Color:</b>{' '}\n                            {editRightLink ? (\n                                <RLGroupSelectInput\n                                    dataGroup=\"rightLinks\"\n                                    group=\"groups\"\n                                    field=\"color\"\n                                    values={data.rightLinks.groups.filter(\n                                        (group) =>\n                                            group.name === rightLinksFilter\n                                    )}\n                                    options={presetColorOptions}\n                                    data={data}\n                                    setData={setData}\n                                />\n                            ) : data.rightLinks.groups.filter(\n                                  (group) => group.name === rightLinksFilter\n                              )[0].color ? (\n                                data.rightLinks.groups.filter(\n                                    (group) => group.name === rightLinksFilter\n                                )[0].color\n                            ) : (\n                                'empty'\n                            )}\n                        </pre>\n                    </Segment>\n                    <Accordion styled>\n                        {data.rightLinks.links.map((link, i) => \n                            link.group.value === rightLinksFilter ? (\n                                <div key={`RightLink-${i+1}`}>\n                                    <Accordion.Title\n                                        active={activeIndex === i}\n                                        index={i}\n                                        onClick={handleClick}\n                                    >\n                                        <Icon name=\"dropdown\" />\n                                        {`${link.name.value}`}\n                                    </Accordion.Title>\n                                    {Object.keys(link).map((key, j) => \n                                        ['group', 'internal'].includes(\n                                            key\n                                        ) ? (\n                                            ''\n                                        ) : (\n                                            <Accordion.Content\n                                                active={activeIndex === i}\n                                                key={`RightLink-content-${j+1}`}\n                                            >\n                                                <Segment>\n                                                    <pre>\n                                                        <b>{`${key}:`}</b>{' '}\n                                                        {editRightLink ? (\n                                                            link[key].type ===\n                                                            'text' ? (\n                                                                <RightLinkStandardInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'bool' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetBoolOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'typeSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetTypeOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'colorSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetColorOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'sideSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetSideOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'stylesSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetAdditionalStyles\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'obj' ? (\n                                                                <RightLinkObjects\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'array' ? (\n                                                                <EditRightLinkArrays \n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : (\n                                                                'field not valid'\n                                                            )\n                                                        ) : ['array'].includes(\n                                                              link[key].type\n                                                          ) ? (\n                                                            <RightLinksArrays RLArr={link[key]}/>\n                                                        ) : link[key].type ===\n                                                          'bool' ? (\n                                                            `${link[key].value}`\n                                                        ) : link[key].type ===\n                                                          'obj' ? (\n                                                            <RightLinkObjectPreview RLObj={link[key]} />\n                                                        ) : link[key].value ? (\n                                                            <p>{`${link[key].value}`}</p>\n                                                        ) : (\n                                                            'empty'\n                                                        )}\n                                                    </pre>\n                                                </Segment>\n                                            </Accordion.Content>\n                                        )\n                                    )}\n                                </div>\n                            ) : (\n                                ''\n                            )\n                        )}\n                    </Accordion>\n                </>\n            ) : (\n                'Please select one from above or add a new group for your Right-Links'\n            )}\n            <div>\n                <AddLink\n                    collection=\"rightLinks\"\n                    data={data}\n                    setData={setData}\n                    linkGroup={rightLinksFilter}\n                />\n            </div>\n        </Segment>\n    );\n};\n\nexport default RightLinks;\n","import React from 'react';\nimport { Tab, Menu, Label } from 'semantic-ui-react';\nimport ProfileSection from '../Profile/Profile';\nimport SocialLinks from '../SocialLinks/SocialLinks';\nimport RightLinks from '../RightLinks/RightLinks';\nimport './main.css';\n\nconst Main = ({ editRightLink, data, setData, trackedChanges }) => {\n    const panes = [\n        {\n            menuItem: 'Profile',\n            render: () => (\n                <Tab.Pane>\n                    <ProfileSection\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: 'Social Links',\n            render: () => (\n                <Tab.Pane>\n                    <SocialLinks\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: 'Links',\n            render: () => (\n                <Tab.Pane>\n                    <RightLinks\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: (\n                <Menu.Item as=\"a\" key=\"preview\">\n                    Preview\n                    {/* Eventually make this label track changes */}\n                    {trackedChanges > 0 ? (\n                        <Label color=\"green\" className=\"previewLabel\">\n                            {trackedChanges}\n                        </Label>\n                    ) : (\n                        ''\n                    )}\n                </Menu.Item>\n            ),\n            render: () => <Tab.Pane>{/* <Preview /> */}</Tab.Pane>,\n        },\n    ];\n\n    return (\n        <div className=\"containerSize mainContainer\">\n            <Tab\n                menu={{ fluid: true, vertical: true, tabular: true }}\n                panes={panes}\n            />\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\n// import * as Diff from 'diff';\n// import firebaseApp from './firebase';\nimport Header from '../Header/Header';\nimport RightLinkManagementOpt from '../RightLinkManagementOpt/RightLinkManagementOpt';\nimport Main from '../Main/Main';\nimport userData from '../../assets/data.json';\nimport './Home.css';\n\nconst Home = () => {\n    const [editRightLink, setEditRightLink] = useState(false);\n    const [saveRightLink, setSaveRightLink] = useState(true);\n    const [data, setData] = useState(userData);\n    const [trackedChanges, setTrackedChanges] = useState(0);\n    const originalData = userData;\n\n    const handleEditClick = () => {\n        setEditRightLink((previous) => !previous);\n        setSaveRightLink((previous) => !previous);\n    };\n\n    const saveData = () => {\n        // setEditRightLink((previous) => !previous);\n        // setSaveRightLink((previous) => !previous);\n        setTrackedChanges(trackedChanges + 1);\n    };\n    const handleSaveClick = () => {\n        setEditRightLink((previous) => !previous);\n        setSaveRightLink((previous) => !previous);\n        saveData();\n    };\n\n    // const compareJSON = () => {\n    // const ret = {};\n    // const arr = [];\n\n    // const diff = Diff.diffJson(originalData, data);\n    // console.log('diff', diff);\n    // Object.keys(originalData).forEach((key) => {\n    //     if (\n    //         !Object.prototype.hasOwnProperty.call(data, key) ||\n    //         originalData[key] !== data[key]\n    //     ) {\n    //         if (\n    //             !Array.isArray(data[key]) ||\n    //             !(\n    //                 JSON.stringify(data[key]) ===\n    //                 JSON.stringify(originalData[key])\n    //             )\n    //         ) {\n    //             ret[key] = data[key];\n    //             arr.push(data[key]);\n    //         }\n    //     }\n    // });\n    // console.log('arr', arr.length);\n    // console.log('obj', ret);\n\n    // return ret;\n    // };\n\n    // useEffect(() => {\n    //     compareJSON();\n    // }, [data]);\n\n    return (\n        <Grid columns={2}>\n            <Grid.Row centered>\n                <Header />\n            </Grid.Row>\n            <Grid.Row className=\"RLContentRight\">\n                <RightLinkManagementOpt\n                    handleEditClick={handleEditClick}\n                    editRightLink={editRightLink}\n                    handleSaveClick={handleSaveClick}\n                    saveRightLink={saveRightLink}\n                />\n            </Grid.Row>\n            <Grid.Row centered>\n                <Main\n                    editRightLink={editRightLink}\n                    data={data}\n                    setData={setData}\n                    trackedChanges={trackedChanges}\n                    originalData={originalData}\n                />\n            </Grid.Row>\n        </Grid>\n    );\n};\n\nexport default Home;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useContext, useCallback } from 'react';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\n// import { useAuthState } from 'react-firebase-hooks/auth';\nimport firebaseApp from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\n// import {\n//     auth,\n//     signInWithEmailAndPassword,\n//     signInWithGoogle,\n// } from '../../utils/auth/firebase';\nimport './login.css';\n\nfunction Login({ history }) {\n    // const [email, setEmail] = useState('');\n    // const [password, setPassword] = useState('');\n    const { currentUser } = useContext(FirebaseContext);\n\n    const handleLogin = useCallback(\n        async (event) => {\n            event.preventDefault();\n            const { email, password } = event.target.elements;\n            try {\n                await firebaseApp\n                    .auth()\n                    .signInWithEmailAndPassword(email.value, password.value);\n                history.push('right-link/');\n            } catch (error) {\n                alert(error);\n            }\n        },\n        [history]\n    );\n\n    if (currentUser) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <div className=\"login\">\n            {/* <div className=\"login__container\"> */}\n            <form className=\"login__container\" onSubmit={handleLogin}>\n                <h1>Log in</h1>\n                <input\n                    className=\"login__textBox\"\n                    name=\"email\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                />\n                <input\n                    className=\"login__textBox\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n                <button className=\"login__btn\" type=\"submit\">\n                    Log in\n                </button>\n                <div>\n                    Don&apos;t have an account?{' '}\n                    <Link to=\"/register\">Register</Link> now.\n                </div>\n            </form>\n            {/* </div> */}\n        </div>\n    );\n    // const [user, loading] = useAuthState(auth);\n    // const history = useHistory();\n    // useEffect(() => {\n    //     if (loading) {\n    //         // maybe trigger a loading screen\n    //         return;\n    //     }\n    //     if (user) {\n    //         // console.log('user', user);\n    //         history.replace('/');\n    //     }\n    // }, [user, loading]);\n    // return (\n    //     <div className=\"login\">\n    //         <div className=\"login__container\">\n    //             <input\n    //                 type=\"text\"\n    //                 className=\"login__textBox\"\n    //                 value={email}\n    //                 onChange={(e) => setEmail(e.target.value)}\n    //                 placeholder=\"E-mail Address\"\n    //             />\n    //             <input\n    //                 type=\"password\"\n    //                 className=\"login__textBox\"\n    //                 value={password}\n    //                 onChange={(e) => setPassword(e.target.value)}\n    //                 placeholder=\"Password\"\n    //             />\n    //             <button\n    //                 type=\"button\"\n    //                 className=\"login__btn\"\n    //                 onClick={() => signInWithEmailAndPassword(email, password)}\n    //             >\n    //                 Login\n    //             </button>\n    //             <button\n    //                 type=\"button\"\n    //                 className=\"login__btn\"\n    //                 onClick={handleLogin}\n    //             >\n    //                 Login\n    //             </button>\n    //             <button\n    //                 type=\"button\"\n    //                 className=\"login__btn login__google\"\n    //                 onClick={signInWithGoogle}\n    //             >\n    //                 Login with Google\n    //             </button>\n    //             <div>\n    //                 <Link to=\"/reset\">Forgot Password</Link>\n    //             </div>\n    //             <div>\n    //                 Don&apos;t have an account?{' '}\n    //                 <Link to=\"/register\">Register</Link> now.\n    //             </div>\n    //         </div>\n    //     </div>\n    // );\n}\nexport default withRouter(Login);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useCallback } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n// import { useAuthState } from 'react-firebase-hooks/auth';\n// import { Link, useHistory } from 'react-router-dom';\n// import {\n//     auth,\n//     registerWithEmailAndPassword,\n//     signInWithGoogle,\n// } from '../../utils/auth/firebase';\nimport firebaseApp from '../../utils/auth/firebase';\nimport './register.css';\n\nfunction Register({ history }) {\n    const handleSignUp = useCallback(\n        async (event) => {\n            event.preventDefault();\n            const { email, password } = event.target.elements;\n            try {\n                await firebaseApp\n                    .auth()\n                    .createUserWithEmailAndPassword(\n                        email.value,\n                        password.value\n                    );\n                history.push('right-link/');\n            } catch (error) {\n                alert(error);\n            }\n        },\n        [history]\n    );\n    return (\n        <div className=\"register\">\n            <form className=\"register__container\" onSubmit={handleSignUp}>\n                <h1>Register</h1>\n                <input\n                    className=\"register__textBox\"\n                    name=\"text\"\n                    type=\"text\"\n                    placeholder=\"Full Name\"\n                />\n                <input\n                    className=\"register__textBox\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                />\n                <input\n                    className=\"register__textBox\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n                <button className=\"register__btn\" type=\"submit\">\n                    Sign Up\n                </button>\n                <div>\n                    Already have an account? <Link to=\"/\">Login</Link> now.\n                </div>\n            </form>\n        </div>\n    );\n    // const [email, setEmail] = useState('');\n    // const [password, setPassword] = useState('');\n    // const [name, setName] = useState('');\n    // const [user, loading] = useAuthState(auth);\n    // const history = useHistory();\n    // const register = () => {\n    //     if (!name) alert('Please enter name');\n    //     registerWithEmailAndPassword(name, email, password);\n    // };\n    // useEffect(() => {\n    //     if (loading) return;\n    //     if (user) history.replace('/');\n    // }, [user, loading]);\n    // return (\n    //     <div className=\"register\">\n    //         <div className=\"register__container\">\n    //             <input\n    //                 type=\"text\"\n    //                 className=\"register__textBox\"\n    //                 value={name}\n    //                 onChange={(e) => setName(e.target.value)}\n    //                 placeholder=\"Full Name\"\n    //             />\n    //             <input\n    //                 type=\"text\"\n    //                 className=\"register__textBox\"\n    //                 value={email}\n    //                 onChange={(e) => setEmail(e.target.value)}\n    //                 placeholder=\"E-mail Address\"\n    //             />\n    //             <input\n    //                 type=\"password\"\n    //                 className=\"register__textBox\"\n    //                 value={password}\n    //                 onChange={(e) => setPassword(e.target.value)}\n    //                 placeholder=\"Password\"\n    //             />\n    //             <button\n    //                 type=\"button\"\n    //                 className=\"register__btn\"\n    //                 onClick={register}\n    //             >\n    //                 Register\n    //             </button>\n    //             <button\n    //                 type=\"button\"\n    //                 className=\"register__btn\"\n    //                 onClick={handleSignUp}\n    //             >\n    //                 Register\n    //             </button>\n    //             <button\n    //                 type=\"button\"\n    //                 className=\"register__btn register__google\"\n    //                 onClick={signInWithGoogle}\n    //             >\n    //                 Register with Google\n    //             </button>\n    //             <div>\n    //                 Already have an account? <Link to=\"/\">Login</Link> now.\n    //             </div>\n    //         </div>\n    //     </div>\n    // );\n}\nexport default withRouter(Register);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    // const { user } = useAuth();\n    // const [user] = useAuthState(auth);\n    const { currentUser } = useContext(FirebaseContext);\n    console.log('p route usr', currentUser);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                currentUser ? (\n                    <Component {...rest} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/login',\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","/* eslint-disable arrow-body-style */\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { FirebaseProvider } from './utils/auth/FirebaseContext';\nimport Home from './components/Home/Home';\nimport 'semantic-ui-css/semantic.min.css';\nimport Login from './components/Login/Login';\nimport Register from './components/Login/Register';\n// import Reset from './components/Login/Reset';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\n\nconst App = () => {\n    return (\n        <FirebaseProvider>\n            <Router>\n                <Switch>\n                    <PrivateRoute exact path=\"/right-link/\" component={Home} />\n                    <Route exact path=\"/right-link/login\" component={Login} />\n                    <Route\n                        exact\n                        path=\"/right-link/register\"\n                        component={Register}\n                    />\n                    {/* <Route exact path=\"/reset\" component={Reset} /> */}\n                </Switch>\n            </Router>\n        </FirebaseProvider>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}