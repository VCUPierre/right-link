{"version":3,"sources":["utils/auth/firebase.js","utils/auth/FirebaseContext.js","components/Delete/Delete.js","components/RightLinkCollectionModal/RightLinkCollectionModal.js","assets/TheRightClickTransparent.png","components/Navbar/Navbar.js","components/Header/Header.js","components/ProfileButton/ProfileButton.js","components/RightLinkManagementOpt/RightLinkManagementOpt.js","config/config.js","utils/api.js","components/CustomInput/CustomInputs.js","components/Profile/Profile.js","constants/icons.js","components/AddLink/AddLink.js","components/SocialLinks/SocialLinks.js","components/RightLinks/RightLinkArrays.js","components/RightLinks/RightLinkObjectPreview.js","components/RightLinks/RightLinkObjects.js","components/RightLinks/RightLinks.js","components/Main/Main.js","components/PublishRightLinkModal/PublishRightLinkModal.js","components/Home/Home.js","components/Login/Login.js","components/Login/Register.js","components/Login/Reset.js","components/PrivateRoute/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","collection","where","uid","get","docs","length","add","name","displayName","authProvider","email","data","localStorage","setItem","JSON","stringify","console","error","alert","message","registerWithEmailAndPassword","password","createUserWithEmailAndPassword","sendPasswordResetEmail","FirebaseContext","createContext","FirebaseProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","onAuthStateChanged","Provider","value","Delete","setData","selected","handleClick","Icon","color","size","link","onClick","RightLinkCollectionModal","isModalOpen","setIsModalOpen","setSelectedOriginalRightLinkData","setPublishRightLink","deleteData","initialRightLink","profile","title","titleColor","profilePicture","logo","bgImage","bgImageLink","bgColor","bgCustomColor","socialLinks","group","rightLinks","groups","links","selection","action","confirm","userData","rightLinkDataCopy","dataWithoutSelected","filter","dataCopy","uuid","item","type","element","selectionClone","_","cloneDeep","publish","uniqueId","uuidv4","selectionCopy","prev","Modal","centered","open","onClose","closeOnDimmerClick","Header","Content","List","divided","verticalAlign","map","rightLink","i","Item","className","floated","StickyBar","style","justifyContent","width","boxShadow","zIndex","padding","alignItems","background","textAlign","href","Image","src","Logo","display","Navbar","ProfileButton","disableToggle","useContext","signOut","Dropdown","button","icon","direction","Menu","disabled","text","RightLinkManagementOpt","handleEditClick","editRightLink","handleSaveClick","saveRightLink","handlePublishClick","publishRightLink","handleCancelClick","disableToggledBanner","Button","labelPosition","CLOUD_NAME","UPLOAD_PRESET","UPLOAD_API","axios","post","equals","b","Date","getTime","prototype","keys","Object","every","k","StandardInput","field","values","setValues","dataGroup","handleUpload","e","userFolder","parse","getItem","formData","FormData","append","target","files","API","imageURL","items","secure_url","includes","Input","id","onChange","defaultValue","SelectInput","options","Select","RightLinkSearch","position","searchValue","setSearchValue","Search","aligned","onResultSelect","result","iconName","onSearchChange","toLowerCase","results","x","RLGroupInput","setFilter","prevGroupName","groupLinks","RLGroupSelectInput","SocialLinksStandardInput","SocialLinksSelectInput","RightLinkStandardInput","RightLinkSelectInput","internal","Profile","presetColorOptions","key","Segment","content","rel","inline","BRANDS","image","ICONS","AddLink","linkGroup","addSocialLink","secondaryColor","surrounded","surroundedInColor","addRightLinkGroup","addRightLink","linkSpaced","typeAction","featured","featuredText","featuredTimerDate","featuredTimerText","featuredColor","featuredAltStyle","pinned","mainMedia","mediaText","speed","arrayType","additionalLinks","colorOveride","fontColor","colored","buttonColor","bannerSide","additionalStyle","modalAlternativeText","removed","bioContent","addAdditionalLinks","addBio","header","subHeader","socialLinksCopy","push","rightLinksCopy","rightLinkGroupsCopy","linksCopy","bioCopy","collectionCopy","SocialLinks","activeIndex","setActiveIndex","presetBool","titleProps","index","Accordion","styled","Title","active","Grid","columns","Row","EditRightLinkArrays","handleStandardInputChange","valueField","innerArrayPosition","arrayItem","d","TextArea","rows","handleCollectionChange","RightLinksArrays","RLArr","RightLinkObjectPreview","RLObj","objectKey","toString","slice","RightLinkObjects","presetMediaOptions","presetBoolOptions","presetSpeedOptions","handleSelectChange","RightLinks","showgroup","setShowGroup","rightLinksFilter","setRightLinksFilter","presetSideOptions","presetTypeOptions","presetAdditionalStyles","handleGroupClick","groupData","Label","as","Divider","j","Main","panes","menuItem","render","Tab","Pane","menu","fluid","vertical","tabular","PublishRightLinkModal","Actions","previous","Home","setEditRightLink","setSaveRightLink","userDbDoc","setUserDbDoc","isLoginModalOpen","setIsLoginModalOpen","isPublishModalOpen","setIsPublishModalOpen","userRightLinkData","setUserRightLinkData","selectedOriginalRightLinkData","setDisableToggledBanner","doesTitleExist","trim","formatDataToSave","dataToSave","dataToFormat","rightLinkExists","find","fullUserRightLinkDataCopy","userRightLinkDataCopy","deleteFromData","currentDate","toLocaleString","userRef","doc","dateReadyForUpdate","runTransaction","transaction","exists","newUserDataArray","newVersion","version","date","shift","update","log","saveData","onSnapshot","snapshot","currentData","maxBy","Message","info","isEqual","withRouter","history","handleLogin","useCallback","event","preventDefault","elements","signInWithEmailAndPassword","to","onSubmit","placeholder","handleSignUp","setEmail","PrivateRoute","Component","component","rest","location","pathname","state","from","App","cloudName","uploadPreset","basename","exact","path","Login","Register","Reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2617467f.chunk.js","sourcesContent":["/* eslint-disable no-alert */\n/* eslint-disable no-console */\nimport app from 'firebase/compat/app';\nimport 'firebase/compat/database';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\nconst firebaseApp = app.initializeApp(firebaseConfig);\n\nexport default firebaseApp;\n\n// const appAuth = app.initializeApp(firebaseConfig);\nconst auth = firebaseApp.auth();\nconst db = app.firestore();\n\nconst googleProvider = new app.auth.GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n    try {\n        const res = await auth.signInWithPopup(googleProvider);\n        const { user } = res;\n        const query = await db\n            .collection('users')\n            .where('uid', '==', user.uid)\n            .get();\n        if (query.docs.length === 0) {\n            await db.collection('users').add({\n                uid: user.uid,\n                name: user.displayName,\n                authProvider: 'google',\n                email: user.email,\n                data: [],\n            });\n        }\n        localStorage.setItem('TRC-User', JSON.stringify(user));\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst signInWithEmailAndPassword = async (email, password) => {\n    try {\n        const res = await auth.signInWithEmailAndPassword(email, password);\n        const { user } = res;\n        localStorage.setItem('TRC-User', JSON.stringify(user));\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n    try {\n        const res = await auth.createUserWithEmailAndPassword(email, password);\n        const { user } = res;\n        await db.collection('users').add({\n            uid: user.uid,\n            name,\n            authProvider: 'local',\n            email,\n            data: [],\n        });\n        localStorage.setItem('TRC-User', JSON.stringify(user));\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst sendPasswordResetEmail = async (email) => {\n    try {\n        await auth.sendPasswordResetEmail(email);\n        alert('Password reset link sent!');\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst logout = async () => {\n    await auth.signOut();\n    localStorage.removeItem('TRC-User');\n};\n\nexport {\n    // auth,\n    db,\n    signInWithGoogle,\n    signInWithEmailAndPassword,\n    registerWithEmailAndPassword,\n    sendPasswordResetEmail,\n    logout,\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport firebaseApp from './firebase';\n\nconst FirebaseContext = createContext(null);\n\nconst FirebaseProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [pending, setPending] = useState(true);\n\n    useEffect(() => {\n        firebaseApp.auth().onAuthStateChanged((user) => {\n            setCurrentUser(user);\n            setPending(false);\n        });\n    }, []);\n\n    if (pending) {\n        return <>Loading...</>;\n    }\n\n    return (\n        <FirebaseContext.Provider value={{ currentUser }}>\n            {children}\n        </FirebaseContext.Provider>\n    );\n};\n\nexport { FirebaseContext, FirebaseProvider };\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nconst Delete = ({\n    // collection,\n    data,\n    setData,\n    selected,\n    handleClick,\n}) => {\n    // eslint-disable-next-line no-unused-vars\n    const handleDeleteClick = () => {\n        console.log('data', data, 'selected', selected);\n        // eslint-disable-next-line no-restricted-globals\n        if (confirm('Are you sure you want to delete?')) {\n            const userData = [...data];\n            const rightLinkDataCopy = userData.data;\n            const dataWithoutSelected = rightLinkDataCopy.filter(\n                (dataCopy) => dataCopy.uuid !== selected.uuid\n            );\n            userData.data = dataWithoutSelected;\n            console.log('removed selected', userData);\n            setData(userData);\n        }\n    };\n\n    return (\n        <Icon\n            color=\"red\"\n            name=\"trash alternate\"\n            size=\"large\"\n            link\n            onClick={() => handleClick(selected, 'delete click')}\n        />\n    );\n};\n\nexport default Delete;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport _ from 'lodash';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Modal, List, Icon } from 'semantic-ui-react';\nimport Delete from '../Delete/Delete';\nimport './collectionStyle.css';\n\nconst RightLinkCollectionModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    collection,\n    setSelectedOriginalRightLinkData,\n    setData,\n    setPublishRightLink,\n    deleteData,\n}) => {\n    const initialRightLink = {\n        profile: {\n            title: '',\n            titleColor: '',\n            profilePicture: '',\n            logo: 'colored',\n            bgImage: false,\n            bgImageLink: '',\n            bgColor: '',\n            bgCustomColor: '',\n        },\n        socialLinks: {\n            group: [],\n        },\n        rightLinks: {\n            groups: [],\n            links: [],\n        },\n    };\n\n    const handleClick = async (selection, action) => {\n        // alert(`${action}`);\n        if (action === 'delete click') {\n            // eslint-disable-next-line no-restricted-globals\n            if (confirm('Are you sure you want to delete?')) {\n                const userData = { ...collection };\n                const rightLinkDataCopy = userData.data;\n                const dataWithoutSelected = rightLinkDataCopy.filter(\n                    (dataCopy) => dataCopy.uuid !== selection.uuid\n                );\n                userData.data = dataWithoutSelected;\n                setData(userData);\n                await deleteData({\n                    item: {\n                        type: 'rightLink',\n                        element: selection.profile.title,\n                    },\n                });\n            }\n        } else {\n            const selectionClone = _.cloneDeep(selection);\n\n            if (selection.uuid) {\n                setData(selection);\n                setSelectedOriginalRightLinkData(selectionClone);\n                setPublishRightLink(selection.publish);\n            } else {\n                const uniqueId = uuidv4();\n                setData({ uuid: uniqueId, ...selection });\n                const selectionCopy = { uuid: uniqueId, ...selectionClone };\n                setSelectedOriginalRightLinkData(selectionCopy);\n            }\n            setIsModalOpen((prev) => !prev);\n        }\n    };\n\n    return (\n        <Modal\n            centered\n            size=\"small\"\n            open={isModalOpen}\n            onClose={() => setIsModalOpen(false)}\n            closeOnDimmerClick={false}\n        >\n            <Modal.Header>Choose a Right Link or Create a new one</Modal.Header>\n            <Modal.Content>\n                <List divided selection verticalAlign=\"middle\">\n                    {collection && collection.length !== 0\n                        ? collection.data.map((rightLink, i) => (\n                              <>\n                                  {rightLink.profile ? (\n                                      <List.Item\n                                          key={`list-item${i + 1}`}\n                                          className=\"centeredListItem\"\n                                      >\n                                          <List.Content\n                                              verticalAlign=\"bottom\"\n                                              onClick={() =>\n                                                  handleClick(\n                                                      rightLink,\n                                                      'reg click'\n                                                  )\n                                              }\n                                          >\n                                              {rightLink.profile.title}\n                                          </List.Content>\n                                          <List.Content floated=\"right\">\n                                              <Delete\n                                                  collection=\"link\"\n                                                  data={collection}\n                                                  selected={rightLink}\n                                                  setData={setData}\n                                                  handleClick={handleClick}\n                                              />\n                                          </List.Content>\n                                      </List.Item>\n                                  ) : (\n                                      ''\n                                  )}\n                              </>\n                          ))\n                        : ''}\n                </List>\n                <div className=\"centeredListItem\">\n                    <Icon\n                        color=\"green\"\n                        name=\"add square\"\n                        size=\"big\"\n                        className=\"custom\"\n                        link\n                        onClick={() => handleClick(initialRightLink)}\n                    />\n                </div>\n            </Modal.Content>\n        </Modal>\n    );\n};\n\nexport default RightLinkCollectionModal;\n","export default __webpack_public_path__ + \"static/media/TheRightClickTransparent.45a3cb44.png\";","import React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport Logo from '../../assets/TheRightClickTransparent.png';\n\nconst StickyBar = () => (\n    <div\n        style={{\n            justifyContent: 'space-between',\n            width: '100%',\n            boxShadow: '0 0 1rem 0 rgba(100,110,140,.4)',\n            zIndex: '2',\n            padding: '1em',\n            alignItems: 'center',\n            background: 'white',\n            textAlign: 'center',\n        }}\n    >\n        <a href=\"/\">\n            <Image src={Logo} size=\"medium\" centered />\n        </a>\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                width: '60%',\n            }}\n        />\n    </div>\n);\n\nexport default StickyBar;\n","import React from 'react';\nimport Navbar from '../Navbar/Navbar';\n\nconst Header = () => <Navbar />\n\nexport default Header;\n","/* eslint-disable arrow-body-style */\nimport React, { useContext } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport firebaseApp from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\n\nconst ProfileButton = ({ disableToggle }) => {\n    const { currentUser } = useContext(FirebaseContext);\n\n    const signOut = () => {\n        firebaseApp.auth().signOut();\n    };\n\n    return (\n        <Dropdown button icon=\"user\" direction=\"left\" className=\"icon\">\n            <Dropdown.Menu>\n                <Dropdown.Item disabled>\n                    <span>\n                        <strong>{currentUser.email}</strong>\n                        {/* <strong>{currentUser.displayName.split(' ')[0]}</strong> */}\n                    </span>\n                </Dropdown.Item>\n                <Dropdown.Item onClick={disableToggle}>\n                    {/* <Checkbox\n                        onChange={disableToggle}\n                        checked={disableToggledBanner}\n                    />{' '} */}\n                    Disable Current right-link\n                </Dropdown.Item>\n                <Dropdown.Item\n                    text=\"Switch to right-link 1\"\n                    onClick={signOut}\n                />\n                <Dropdown.Item\n                    text=\"Switch to right-link 2\"\n                    onClick={signOut}\n                />\n                <Dropdown.Item\n                    text=\"Switch to right-link 3\"\n                    onClick={signOut}\n                />\n                <Dropdown.Item text=\"Sign Out\" onClick={signOut} />\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileButton;\n","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport ProfileButton from '../ProfileButton/ProfileButton';\n\nconst RightLinkManagementOpt = ({\n    handleEditClick,\n    editRightLink,\n    handleSaveClick,\n    saveRightLink,\n    handlePublishClick,\n    publishRightLink,\n    handleCancelClick,\n    disableToggledBanner,\n    disableToggle,\n}) => (\n    <>\n        <Button\n            icon\n            labelPosition=\"left\"\n            color=\"blue\"\n            disabled={editRightLink}\n            onClick={handleEditClick}\n        >\n            <Icon name=\"edit outline\" />\n            Edit\n        </Button>\n        {editRightLink ? (\n            <Button\n                icon\n                labelPosition=\"left\"\n                color=\"red\"\n                disabled={!editRightLink}\n                onClick={handleCancelClick}\n            >\n                Cancel\n                <Icon name=\"cancel\" />\n            </Button>\n        ) : (\n            ''\n        )}\n        {editRightLink ? (\n            <Button\n                icon\n                labelPosition=\"right\"\n                color=\"green\"\n                disabled={saveRightLink}\n                onClick={handleSaveClick}\n            >\n                Save\n                <Icon name=\"save outline\" />\n            </Button>\n        ) : (\n            ''\n        )}\n        {saveRightLink && !publishRightLink ? (\n            <Button\n                icon\n                labelPosition=\"right\"\n                color=\"violet\"\n                disabled={publishRightLink}\n                onClick={handlePublishClick}\n            >\n                Publish\n                <Icon name=\"paper plane outline\" />\n            </Button>\n        ) : (\n            ''\n        )}\n        <ProfileButton\n            disableToggle={disableToggle}\n            disableToggledBanner={disableToggledBanner}\n        />\n    </>\n);\n\nexport default RightLinkManagementOpt;\n","export const CLOUD_NAME = process.env.REACT_APP_CLOUDINARY_CLOUD_NAME;\nexport const UPLOAD_PRESET =\n    process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET_NAME;\nexport const UPLOAD_API = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/upload`;\n","import axios from 'axios';\nimport { UPLOAD_API } from '../config/config';\n\nexport default {\n    uploadImage: (data) => axios.post(UPLOAD_API, data),\n};\n","import React, { useState } from 'react';\nimport { Input, Select, Search } from 'semantic-ui-react';\nimport API from '../../utils/api';\nimport { UPLOAD_PRESET } from '../../config/config';\n\nconst equals = (a, b) => {\n    if (a === b) return true;\n\n    if (a instanceof Date && b instanceof Date)\n        return a.getTime() === b.getTime();\n\n    if (!a || !b || (typeof a !== 'object' && typeof b !== 'object'))\n        return a === b;\n\n    if (a.prototype !== b.prototype) return false;\n\n    const keys = Object.keys(a);\n    if (keys.length !== Object.keys(b).length) return false;\n\n    return keys.every((k) => equals(a[k], b[k]));\n};\n\nexport const StandardInput = ({ field, values, setValues, dataGroup }) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = value;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    const handleUpload = async (e) => {\n        const userFolder = JSON.parse(localStorage.getItem('TRC-User')).email;\n        const formData = new FormData();\n        formData.append('file', e.target.files[0]);\n        formData.append('upload_preset', UPLOAD_PRESET);\n        formData.append('folder', userFolder);\n\n        const imageURL = await API.uploadImage(formData);\n\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = imageURL.data.secure_url;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <>\n            {['profilePicture', 'bgImageLink'].includes(field) ? (\n                <Input\n                    type=\"file\"\n                    id={field}\n                    name={field}\n                    onChange={handleUpload}\n                />\n            ) : (\n                <Input\n                    defaultValue={values[dataGroup][field] || ''}\n                    onChange={handleChange}\n                />\n            )}\n        </>\n    );\n};\n\nexport const SelectInput = ({\n    field,\n    values,\n    setValues,\n    options,\n    dataGroup,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = value;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkSearch = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    collection,\n    position,\n}) => {\n    const [searchValue, setSearchValue] = useState('');\n\n    const handleChange = (e) => {\n        setSearchValue(e.target.value.toLowerCase());\n    };\n\n    const handleSelect = (e, { result }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = result.title;\n        if (field === 'name') {\n            item.iconName = result.title;\n        }\n        items[dataGroup][group][position] = item;\n        setSearchValue(result.title);\n        setValues({ ...items });\n    };\n\n    return (\n        <Search\n            aligned=\"left\"\n            onResultSelect={handleSelect}\n            onSearchChange={handleChange}\n            results={collection.filter((x) => x.title.includes(searchValue))}\n            value={searchValue}\n        />\n    );\n};\n\nexport const RLGroupInput = ({\n    field,\n    data,\n    values,\n    setData,\n    dataGroup,\n    group,\n    setFilter,\n}) => {\n    const prevGroupName = values[0].name;\n\n    const handleChange = (e, { value }) => {\n        const items = { ...data };\n        const item = [...items[dataGroup][group]];\n        const groupLinks = [...items[dataGroup].links];\n        for (let i = 0; i < item.length; i += 1) {\n            if (equals(item[i], values[0])) {\n                item[i][field] = value;\n            }\n        }\n        for (let i = 0; i < groupLinks.length; i += 1) {\n            if (groupLinks[i].group.value === prevGroupName) {\n                groupLinks[i].group.value = value;\n            }\n        }\n        items[dataGroup][group] = item;\n        items[dataGroup].links = groupLinks;\n        setFilter(value);\n        setData({ ...items });\n    };\n\n    return (\n        <Input defaultValue={values[0][field] || ''} onChange={handleChange} />\n    );\n};\n\nexport const RLGroupSelectInput = ({\n    field,\n    values,\n    setData,\n    options,\n    dataGroup,\n    group,\n    data,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...data };\n        const item = [...items[dataGroup][group]];\n        for (let i = 0; i < item.length; i += 1) {\n            if (equals(item[i], values[0])) {\n                item[i][field] = value;\n            }\n        }\n        items[dataGroup][group] = item;\n        // setFilter(value);\n        setData({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[0][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const SocialLinksStandardInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = value;\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Input\n            defaultValue={values[dataGroup][group][position][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const SocialLinksSelectInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    options,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = value;\n        items[dataGroup][group][position] = item;\n        setValues(items);\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][group][position][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkStandardInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field].value = value;\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Input\n            defaultValue={values[dataGroup][group][position][field].value || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkSelectInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    options,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field].value = value;\n        if (field === 'type') {\n            if (value === 'internal') {\n                item.internal.value = true;\n            } else {\n                item.internal.value = false;\n            }\n        }\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][group][position][field].value || ''}\n            onChange={handleChange}\n        />\n    );\n};\n","import React from 'react';\nimport { Segment, Header, Image } from 'semantic-ui-react';\nimport { StandardInput, SelectInput } from '../CustomInput/CustomInputs';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst Profile = ({ editRightLink, data, setData }) => {\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n        { key: 'custom', text: 'custom', value: 'custom' },\n    ];\n\n    const presetBool = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    return (\n        <Segment className=\"Profile\">\n            <Header content=\"Profile\" />\n            <Segment>\n                <pre>\n                    <b>Title:</b>{' '}\n                    {editRightLink ? (\n                        <StandardInput\n                            dataGroup=\"profile\"\n                            field=\"title\"\n                            values={data}\n                            setValues={setData}\n                        />\n                    ) : data.profile.title ? (\n                        <p>{`${data.profile.title}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                <pre>\n                    <b>Title Color:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"titleColor\"\n                            values={data}\n                            setValues={setData}\n                            options={presetColorOptions}\n                        />\n                    ) : data.profile.titleColor ? (\n                        data.profile.titleColor\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n            </Segment>\n            <Segment>\n                <pre>\n                    <b>Background Color:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"bgColor\"\n                            values={data}\n                            setValues={setData}\n                            options={presetColorOptions}\n                        />\n                    ) : data.profile.bgColor ? (\n                        <p>{`${data.profile.bgColor}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                {data.profile.bgColor === 'custom' ? (\n                    <pre>\n                        <p>\n                            <b>Custom Background Color:</b>\n                            <br />\n                            <a\n                                href=\"https://mycolor.space/gradient3\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                Try a Gradiant?\n                                {/* add a hover text (tooltip) to say 'use this link and copy and paste exactly \"css code\" box' */}\n                            </a>\n                        </p>\n                        {editRightLink ? (\n                            <StandardInput\n                                dataGroup=\"profile\"\n                                field=\"bgCustomColor\"\n                                values={data}\n                                setValues={setData}\n                            />\n                        ) : data.profile.bgCustomColor ? (\n                            <p>{`${data.profile.bgCustomColor}`}</p>\n                        ) : (\n                            'empty'\n                        )}\n                    </pre>\n                ) : (\n                    ''\n                )}\n                <pre>\n                    <b>Background Image:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"bgImage\"\n                            values={data}\n                            setValues={setData}\n                            options={presetBool}\n                        />\n                    ) : data.profile.bgImage ? (\n                        <p>{`${data.profile.bgImage}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                {data.profile.bgImage ? (\n                    <pre>\n                        <b>Background Image Link:</b>{' '}\n                        {editRightLink ? (\n                            <StandardInput\n                                dataGroup=\"profile\"\n                                field=\"bgImageLink\"\n                                values={data}\n                                setValues={setData}\n                            />\n                        ) : data.profile.bgImageLink ? (\n                            <Image\n                                src={data.profile.bgImageLink}\n                                size=\"small\"\n                                inline\n                            />\n                        ) : (\n                            'empty'\n                        )}\n                    </pre>\n                ) : (\n                    ''\n                )}\n            </Segment>\n            <Segment>\n                <pre>\n                    <b>Profile Picture:</b>{' '}\n                    {editRightLink ? (\n                        <StandardInput\n                            dataGroup=\"profile\"\n                            field=\"profilePicture\"\n                            values={data}\n                            setValues={setData}\n                        />\n                    ) : data.profile.profilePicture ? (\n                        <Image\n                            src={data.profile.profilePicture}\n                            size=\"small\"\n                            inline\n                        />\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n            </Segment>\n        </Segment>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nexport const BRANDS = [\n    { title: 'amazon', image: <Icon name=\"amazon\" size=\"big\" /> },\n    { title: 'amazon pay', image: <Icon name=\"amazon pay\" size=\"big\" /> },\n    { title: 'android', image: <Icon name=\"android\" size=\"big\" /> },\n    { title: 'angellist', image: <Icon name=\"angellist\" size=\"big\" /> },\n    { title: 'app store', image: <Icon name=\"app store\" size=\"big\" /> },\n    {\n        title: 'app store ios',\n        image: <Icon name=\"app store ios\" size=\"big\" />,\n    },\n    { title: 'apple', image: <Icon name=\"apple\" size=\"big\" /> },\n    { title: 'apple pay', image: <Icon name=\"apple pay\" size=\"big\" /> },\n    { title: 'audible', image: <Icon name=\"audible\" size=\"big\" /> },\n    { title: 'aws', image: <Icon name=\"aws\" size=\"big\" /> },\n    { title: 'bandcamp', image: <Icon name=\"bandcamp\" size=\"big\" /> },\n    { title: 'behance', image: <Icon name=\"behance\" size=\"big\" /> },\n    {\n        title: 'behance square',\n        image: <Icon name=\"behance square\" size=\"big\" />,\n    },\n    { title: 'bimobject', image: <Icon name=\"bimobject\" size=\"big\" /> },\n    { title: 'bitbucket', image: <Icon name=\"bitbucket\" size=\"big\" /> },\n    { title: 'bitcoin', image: <Icon name=\"bitcoin\" size=\"big\" /> },\n    { title: 'bity', image: <Icon name=\"bity\" size=\"big\" /> },\n    { title: 'blackberry', image: <Icon name=\"blackberry\" size=\"big\" /> },\n    { title: 'blogger', image: <Icon name=\"blogger\" size=\"big\" /> },\n    { title: 'blogger b', image: <Icon name=\"blogger b\" size=\"big\" /> },\n    { title: 'bluetooth', image: <Icon name=\"bluetooth\" size=\"big\" /> },\n    { title: 'bluetooth b', image: <Icon name=\"bluetooth b\" size=\"big\" /> },\n    { title: 'btc', image: <Icon name=\"btc\" size=\"big\" /> },\n    {\n        title: 'cc amazon pay',\n        image: <Icon name=\"cc amazon pay\" size=\"big\" />,\n    },\n    { title: 'cc amex', image: <Icon name=\"cc amex\" size=\"big\" /> },\n    { title: 'cc apple pay', image: <Icon name=\"cc apple pay\" size=\"big\" /> },\n    {\n        title: 'cc diners club',\n        image: <Icon name=\"cc diners club\" size=\"big\" />,\n    },\n    { title: 'cc discover', image: <Icon name=\"cc discover\" size=\"big\" /> },\n    { title: 'cc jcb', image: <Icon name=\"cc jcb\" size=\"big\" /> },\n    {\n        title: 'cc mastercard',\n        image: <Icon name=\"cc mastercard\" size=\"big\" />,\n    },\n    { title: 'cc paypal', image: <Icon name=\"cc paypal\" size=\"big\" /> },\n    { title: 'cc stripe', image: <Icon name=\"cc stripe\" size=\"big\" /> },\n    { title: 'cc visa', image: <Icon name=\"cc visa\" size=\"big\" /> },\n    { title: 'chrome', image: <Icon name=\"chrome\" size=\"big\" /> },\n    { title: 'codepen', image: <Icon name=\"codepen\" size=\"big\" /> },\n    {\n        title: 'creative commons',\n        image: <Icon name=\"creative commons\" size=\"big\" />,\n    },\n    { title: 'deviantart', image: <Icon name=\"deviantart\" size=\"big\" /> },\n    { title: 'digg', image: <Icon name=\"digg\" size=\"big\" /> },\n    {\n        title: 'digital ocean',\n        image: <Icon name=\"digital ocean\" size=\"big\" />,\n    },\n    { title: 'discord', image: <Icon name=\"discord\" size=\"big\" /> },\n    { title: 'docker', image: <Icon name=\"docker\" size=\"big\" /> },\n    { title: 'dribbble', image: <Icon name=\"dribbble\" size=\"big\" /> },\n    {\n        title: 'dribbble square',\n        image: <Icon name=\"dribbble square\" size=\"big\" />,\n    },\n    { title: 'dropbox', image: <Icon name=\"dropbox\" size=\"big\" /> },\n    { title: 'drupal', image: <Icon name=\"drupal\" size=\"big\" /> },\n    { title: 'ember', image: <Icon name=\"ember\" size=\"big\" /> },\n    { title: 'empire', image: <Icon name=\"empire\" size=\"big\" /> },\n    { title: 'ethereum', image: <Icon name=\"ethereum\" size=\"big\" /> },\n    { title: 'etsy', image: <Icon name=\"etsy\" size=\"big\" /> },\n    { title: 'facebook', image: <Icon name=\"facebook\" size=\"big\" /> },\n    { title: 'facebook f', image: <Icon name=\"facebook f\" size=\"big\" /> },\n    {\n        title: 'facebook messenger',\n        image: <Icon name=\"facebook messenger\" size=\"big\" />,\n    },\n    {\n        title: 'facebook square',\n        image: <Icon name=\"facebook square\" size=\"big\" />,\n    },\n    { title: 'firefox', image: <Icon name=\"firefox\" size=\"big\" /> },\n    { title: 'flickr', image: <Icon name=\"flickr\" size=\"big\" /> },\n    { title: 'flipboard', image: <Icon name=\"flipboard\" size=\"big\" /> },\n    { title: 'foursquare', image: <Icon name=\"foursquare\" size=\"big\" /> },\n    {\n        title: 'free code camp',\n        image: <Icon name=\"free code camp\" size=\"big\" />,\n    },\n    { title: 'git', image: <Icon name=\"git\" size=\"big\" /> },\n    { title: 'git square', image: <Icon name=\"git square\" size=\"big\" /> },\n    { title: 'github', image: <Icon name=\"github\" size=\"big\" /> },\n    {\n        title: 'github alternate',\n        image: <Icon name=\"github alternate\" size=\"big\" />,\n    },\n    {\n        title: 'github square',\n        image: <Icon name=\"github square\" size=\"big\" />,\n    },\n    { title: 'gitkraken', image: <Icon name=\"gitkraken\" size=\"big\" /> },\n    { title: 'gitlab', image: <Icon name=\"gitlab\" size=\"big\" /> },\n    { title: 'goodreads', image: <Icon name=\"goodreads\" size=\"big\" /> },\n    { title: 'goodreads g', image: <Icon name=\"goodreads g\" size=\"big\" /> },\n    { title: 'google', image: <Icon name=\"google\" size=\"big\" /> },\n    { title: 'google drive', image: <Icon name=\"google drive\" size=\"big\" /> },\n    { title: 'google play', image: <Icon name=\"google play\" size=\"big\" /> },\n    { title: 'google plus', image: <Icon name=\"google plus\" size=\"big\" /> },\n    {\n        title: 'google plus g',\n        image: <Icon name=\"google plus g\" size=\"big\" />,\n    },\n    {\n        title: 'google plus square',\n        image: <Icon name=\"google plus square\" size=\"big\" />,\n    },\n    {\n        title: 'google wallet',\n        image: <Icon name=\"google wallet\" size=\"big\" />,\n    },\n    { title: 'hooli', image: <Icon name=\"hooli\" size=\"big\" /> },\n    { title: 'instagram', image: <Icon name=\"instagram\" size=\"big\" /> },\n    { title: 'itunes', image: <Icon name=\"itunes\" size=\"big\" /> },\n    { title: 'itunes note', image: <Icon name=\"itunes note\" size=\"big\" /> },\n    { title: 'jenkins', image: <Icon name=\"jenkins\" size=\"big\" /> },\n    { title: 'joomla', image: <Icon name=\"joomla\" size=\"big\" /> },\n    { title: 'jsfiddle', image: <Icon name=\"jsfiddle\" size=\"big\" /> },\n    { title: 'keycdn', image: <Icon name=\"keycdn\" size=\"big\" /> },\n    { title: 'kickstarter', image: <Icon name=\"kickstarter\" size=\"big\" /> },\n    {\n        title: 'kickstarter k',\n        image: <Icon name=\"kickstarter k\" size=\"big\" />,\n    },\n    { title: 'laravel', image: <Icon name=\"laravel\" size=\"big\" /> },\n    { title: 'linkedin', image: <Icon name=\"linkedin\" size=\"big\" /> },\n    { title: 'lyft', image: <Icon name=\"lyft\" size=\"big\" /> },\n    { title: 'magento', image: <Icon name=\"magento\" size=\"big\" /> },\n    { title: 'medium', image: <Icon name=\"medium\" size=\"big\" /> },\n    { title: 'medium m', image: <Icon name=\"medium m\" size=\"big\" /> },\n    { title: 'meetup', image: <Icon name=\"meetup\" size=\"big\" /> },\n    { title: 'microsoft', image: <Icon name=\"microsoft\" size=\"big\" /> },\n    { title: 'mix', image: <Icon name=\"mix\" size=\"big\" /> },\n    { title: 'mixcloud', image: <Icon name=\"mixcloud\" size=\"big\" /> },\n    { title: 'napster', image: <Icon name=\"napster\" size=\"big\" /> },\n    {\n        title: 'nintendo switch',\n        image: <Icon name=\"nintendo switch\" size=\"big\" />,\n    },\n    { title: 'npm', image: <Icon name=\"npm\" size=\"big\" /> },\n    { title: 'nutritionix', image: <Icon name=\"nutritionix\" size=\"big\" /> },\n    { title: 'patreon', image: <Icon name=\"patreon\" size=\"big\" /> },\n    { title: 'paypal', image: <Icon name=\"paypal\" size=\"big\" /> },\n    { title: 'periscope', image: <Icon name=\"periscope\" size=\"big\" /> },\n    { title: 'php', image: <Icon name=\"php\" size=\"big\" /> },\n    { title: 'pied piper', image: <Icon name=\"pied piper\" size=\"big\" /> },\n    {\n        title: 'pied piper alternate',\n        image: <Icon name=\"pied piper alternate\" size=\"big\" />,\n    },\n    {\n        title: 'pied piper pp',\n        image: <Icon name=\"pied piper pp\" size=\"big\" />,\n    },\n    { title: 'pinterest', image: <Icon name=\"pinterest\" size=\"big\" /> },\n    { title: 'pinterest p', image: <Icon name=\"pinterest p\" size=\"big\" /> },\n    {\n        title: 'pinterest square',\n        image: <Icon name=\"pinterest square\" size=\"big\" />,\n    },\n    { title: 'playstation', image: <Icon name=\"playstation\" size=\"big\" /> },\n    { title: 'quora', image: <Icon name=\"quora\" size=\"big\" /> },\n    { title: 'reddit', image: <Icon name=\"reddit\" size=\"big\" /> },\n    { title: 'reddit alien', image: <Icon name=\"reddit alien\" size=\"big\" /> },\n    {\n        title: 'reddit square',\n        image: <Icon name=\"reddit square\" size=\"big\" />,\n    },\n    { title: 'replyd', image: <Icon name=\"replyd\" size=\"big\" /> },\n    { title: 'rocketchat', image: <Icon name=\"rocketchat\" size=\"big\" /> },\n    { title: 'skype', image: <Icon name=\"skype\" size=\"big\" /> },\n    { title: 'slack', image: <Icon name=\"slack\" size=\"big\" /> },\n    { title: 'slack hash', image: <Icon name=\"slack hash\" size=\"big\" /> },\n    { title: 'slideshare', image: <Icon name=\"slideshare\" size=\"big\" /> },\n    { title: 'snapchat', image: <Icon name=\"snapchat\" size=\"big\" /> },\n    {\n        title: 'snapchat ghost',\n        image: <Icon name=\"snapchat ghost\" size=\"big\" />,\n    },\n    {\n        title: 'snapchat square',\n        image: <Icon name=\"snapchat square\" size=\"big\" />,\n    },\n    { title: 'soundcloud', image: <Icon name=\"soundcloud\" size=\"big\" /> },\n    { title: 'spotify', image: <Icon name=\"spotify\" size=\"big\" /> },\n    {\n        title: 'stack exchange',\n        image: <Icon name=\"stack exchange\" size=\"big\" />,\n    },\n    {\n        title: 'stack overflow',\n        image: <Icon name=\"stack overflow\" size=\"big\" />,\n    },\n    { title: 'staylinked', image: <Icon name=\"staylinked\" size=\"big\" /> },\n    { title: 'steam', image: <Icon name=\"steam\" size=\"big\" /> },\n    { title: 'steam square', image: <Icon name=\"steam square\" size=\"big\" /> },\n    { title: 'steam symbol', image: <Icon name=\"steam symbol\" size=\"big\" /> },\n    { title: 'stripe', image: <Icon name=\"stripe\" size=\"big\" /> },\n    { title: 'stripe s', image: <Icon name=\"stripe s\" size=\"big\" /> },\n    { title: 'stumbleupon', image: <Icon name=\"stumbleupon\" size=\"big\" /> },\n    {\n        title: 'stumbleupon circle',\n        image: <Icon name=\"stumbleupon circle\" size=\"big\" />,\n    },\n    { title: 'telegram', image: <Icon name=\"telegram\" size=\"big\" /> },\n    {\n        title: 'telegram plane',\n        image: <Icon name=\"telegram plane\" size=\"big\" />,\n    },\n    { title: 'trello', image: <Icon name=\"trello\" size=\"big\" /> },\n    { title: 'tripadvisor', image: <Icon name=\"tripadvisor\" size=\"big\" /> },\n    { title: 'tumblr', image: <Icon name=\"tumblr\" size=\"big\" /> },\n    {\n        title: 'tumblr square',\n        image: <Icon name=\"tumblr square\" size=\"big\" />,\n    },\n    { title: 'twitch', image: <Icon name=\"twitch\" size=\"big\" /> },\n    { title: 'twitter', image: <Icon name=\"twitter\" size=\"big\" /> },\n    {\n        title: 'twitter square',\n        image: <Icon name=\"twitter square\" size=\"big\" />,\n    },\n    { title: 'uber', image: <Icon name=\"uber\" size=\"big\" /> },\n    { title: 'vimeo', image: <Icon name=\"vimeo\" size=\"big\" /> },\n    { title: 'vimeo square', image: <Icon name=\"vimeo square\" size=\"big\" /> },\n    { title: 'vimeo v', image: <Icon name=\"vimeo v\" size=\"big\" /> },\n    { title: 'vine', image: <Icon name=\"vine\" size=\"big\" /> },\n    { title: 'vk', image: <Icon name=\"vk\" size=\"big\" /> },\n    { title: 'wechat', image: <Icon name=\"wechat\" size=\"big\" /> },\n    { title: 'weibo', image: <Icon name=\"weibo\" size=\"big\" /> },\n    { title: 'whatsapp', image: <Icon name=\"whatsapp\" size=\"big\" /> },\n    {\n        title: 'whatsapp square',\n        image: <Icon name=\"whatsapp square\" size=\"big\" />,\n    },\n    { title: 'wikipedia w', image: <Icon name=\"wikipedia w\" size=\"big\" /> },\n    { title: 'xbox', image: <Icon name=\"xbox\" size=\"big\" /> },\n    { title: 'y combinator', image: <Icon name=\"y combinator\" size=\"big\" /> },\n    { title: 'yahoo', image: <Icon name=\"yahoo\" size=\"big\" /> },\n    { title: 'yelp', image: <Icon name=\"yelp\" size=\"big\" /> },\n    { title: 'youtube', image: <Icon name=\"youtube\" size=\"big\" /> },\n    {\n        title: 'youtube square',\n        image: <Icon name=\"youtube square\" size=\"big\" />,\n    },\n];\n\nexport const ICONS = [...BRANDS];\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport './AddLink.css';\n\nconst AddLink = ({ collection, data, setData, linkGroup }) => {\n    const addSocialLink = {\n        name: '',\n        iconName: '',\n        link: '',\n        color: '',\n        secondaryColor: '',\n        surrounded: '',\n        surroundedInColor: '',\n    };\n\n    const addRightLinkGroup = {\n        name: 'New Group',\n        color: 'green',\n    };\n\n    const addRightLink = {\n        group: linkGroup,\n        name: {\n            type: 'text',\n            value: 'New Right Link',\n        },\n        link: {\n            type: 'text',\n            value: '',\n        },\n        linkSpaced: {\n            type: 'bool',\n            value: false,\n        },\n        type: {\n            type: 'typeSelect',\n            value: '',\n        },\n        typeAction: {\n            type: 'text',\n            value: '',\n        },\n        internal: {\n            type: 'bool',\n            value: false,\n        },\n        featured: {\n            type: 'bool',\n            value: false,\n        },\n        featuredText: {\n            type: 'text',\n            value: '',\n        },\n        featuredTimerDate: {\n            type: 'text',\n            value: '',\n        },\n        featuredTimerText: {\n            type: 'text',\n            value: '',\n        },\n        featuredColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        featuredAltStyle: {\n            type: 'text',\n            value: '',\n        },\n        pinned: {\n            type: 'bool',\n            value: false,\n        },\n        mainMedia: {\n            type: 'obj',\n            value: {\n                type: {\n                    type: 'mediaSelect',\n                    value: '',\n                },\n                mediaText: {\n                    type: 'text',\n                    value: '',\n                },\n                speed: {\n                    type: 'number',\n                    value: 1000,\n                },\n                collection: {\n                    type: 'array',\n                    arrayType: 'collection',\n                    value: [],\n                },\n            },\n        },\n        additionalLinks: {\n            type: 'array',\n            arrayType: 'addLinks',\n            value: [],\n        },\n        color: {\n            type: 'colorSelect',\n            value: '',\n        },\n        colorOveride: {\n            type: 'text',\n            value: '',\n        },\n        fontColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        colored: {\n            type: 'bool',\n            value: false,\n        },\n        buttonColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        bannerSide: {\n            type: 'sideSelect',\n            value: '',\n        },\n        additionalStyle: {\n            type: 'text',\n            value: 'longText',\n        },\n        modalAlternativeText: {\n            type: 'obj',\n            value: {\n                removed: {\n                    type: 'bool',\n                    value: false,\n                },\n                text: {\n                    type: 'text',\n                    value: '',\n                },\n            },\n        },\n        bioContent: {\n            type: 'array',\n            arrayType: 'bio',\n            value: [],\n        },\n    };\n\n    const addAdditionalLinks = {\n        name: '',\n        link: '',\n    };\n\n    const addBio = {\n        header: '',\n        subHeader: '',\n    };\n\n    // need to return empty, if edit mode return\n    const addCollection = '';\n\n    const handleClick = () => {\n        if (collection === 'socialLinks') {\n            const items = { ...data };\n            const item = { ...items.socialLinks };\n            const socialLinksCopy = item.group;\n            socialLinksCopy.push(addSocialLink);\n            items.socialLinks.group = socialLinksCopy;\n            setData(items);\n        }\n        if (collection === 'rightLinks') {\n            const items = { ...data };\n            const item = { ...items.rightLinks };\n            const rightLinksCopy = item.links;\n            rightLinksCopy.push(addRightLink);\n            items.rightLinks.links = rightLinksCopy;\n            setData(items);\n        }\n        if (collection === 'rightLinksGroups') {\n            const items = { ...data };\n            const item = { ...items.rightLinks };\n            const rightLinkGroupsCopy = item.groups;\n            rightLinkGroupsCopy.push(addRightLinkGroup);\n            items.rightLinks.groups = rightLinkGroupsCopy;\n            setData(items);\n        }\n        if (collection === 'addLink') {\n            const linksCopy =\n                data.rightLinks.links[linkGroup].additionalLinks.value;\n            linksCopy.push(addAdditionalLinks);\n            setData({\n                ...data,\n                [data.rightLinks.links[linkGroup].additionalLinks.value]:\n                    linksCopy,\n            });\n        }\n        if (collection === 'bio') {\n            const bioCopy = data.rightLinks.links[linkGroup].bioContent.value;\n            bioCopy.push(addBio);\n            setData({\n                ...data,\n                [data.rightLinks.links[linkGroup].bioContent.value]: bioCopy,\n            });\n        }\n        if (collection === 'collection') {\n            const collectionCopy =\n                data.rightLinks.links[linkGroup].mainMedia.value.collection\n                    .value;\n            collectionCopy.push(addCollection);\n            setData({\n                ...data,\n                [data.rightLinks.links[linkGroup].mainMedia.value.collection\n                    .value]: collectionCopy,\n            });\n        }\n    };\n\n    return (\n        <Icon\n            color=\"green\"\n            name=\"add square\"\n            size=\"big\"\n            className=\"custom\"\n            link\n            onClick={handleClick}\n        />\n    );\n};\n\nexport default AddLink;\n","import React, { useState } from 'react';\nimport { Segment, Header, Accordion, Icon, Grid } from 'semantic-ui-react';\nimport {\n    SocialLinksStandardInput,\n    SocialLinksSelectInput,\n    RightLinkSearch,\n} from '../CustomInput/CustomInputs';\nimport { ICONS } from '../../constants/icons';\nimport AddLink from '../AddLink/AddLink';\nimport './socialLinks.css';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst SocialLinks = ({ editRightLink, data, setData }) => {\n    const [activeIndex, setActiveIndex] = useState();\n\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n    ];\n\n    const presetBool = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const handleClick = (e, titleProps) => {\n        const { index } = titleProps;\n        const newIndex = activeIndex === index ? -1 : index;\n\n        setActiveIndex(newIndex);\n    };\n\n    return (\n        <Segment className=\"social links\">\n            <Header content=\"Social Links\" />\n            <Accordion styled>\n                {data.socialLinks.group.map((link, i) => (\n                    <div key={`social link ${i+1}`}>\n                        <Accordion.Title\n                            active={activeIndex === i}\n                            index={i}\n                            onClick={handleClick}\n                        >\n                            <Icon name=\"dropdown\" />\n                            {`Social Link ${i}`}\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === i}>\n                            <Segment>\n                                <pre>\n                                    <b>name:</b>{' '}\n                                    {editRightLink ? (\n                                        <Grid centered columns={2}>\n                                            <Grid.Row>\n                                                <RightLinkSearch\n                                                    dataGroup=\"socialLinks\"\n                                                    group=\"group\"\n                                                    field=\"name\"\n                                                    values={data}\n                                                    setValues={setData}\n                                                    collection={ICONS}\n                                                    position={i}\n                                                />\n                                            </Grid.Row>\n                                        </Grid>\n                                    ) : link.name ? (\n                                        link.name\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>link:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksStandardInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"link\"\n                                            values={data}\n                                            setValues={setData}\n                                            position={i}\n                                        />\n                                    ) : link.link ? (\n                                        <p>{`${link.link}`}</p>\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>color:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"color\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetColorOptions}\n                                            position={i}\n                                        />\n                                    ) : link.color ? (\n                                        link.color\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>surrounded:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"surrounded\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetBool}\n                                            position={i}\n                                        />\n                                    ) : link.surrounded ? (\n                                        `${link.surrounded}`\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>surroundedInColor:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"surroundedInColor\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetBool}\n                                            position={i}\n                                        />\n                                    ) : link.surroundedInColor ? (\n                                        `${link.surroundedInColor}`\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                {link.surroundedInColor ? (\n                                    <pre>\n                                        <b>secondaryColor:</b>{' '}\n                                        {editRightLink ? (\n                                            <SocialLinksSelectInput\n                                                dataGroup=\"socialLinks\"\n                                                group=\"group\"\n                                                field=\"secondaryColor\"\n                                                values={data}\n                                                setValues={setData}\n                                                options={presetColorOptions}\n                                                position={i}\n                                            />\n                                        ) : link.secondaryColor ? (\n                                            link.secondaryColor\n                                        ) : (\n                                            'empty'\n                                        )}\n                                    </pre>\n                                ) : (\n                                    ''\n                                )}\n                            </Segment>\n                        </Accordion.Content>\n                    </div>\n                ))}\n            </Accordion>\n            <AddLink\n                collection=\"socialLinks\"\n                data={data}\n                setData={setData}\n                linkGroup=\"\"\n            />\n        </Segment>\n    );\n};\n\nexport default SocialLinks;\n","import React from 'react';\nimport { Segment, Input, TextArea } from 'semantic-ui-react';\nimport AddLink from '../AddLink/AddLink';\n\n/* eslint no-unused-vars: 0 */\n/*  eslint no-nested-ternary: \"off\" */\nexport const EditRightLinkArrays = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleStandardInputChange = ({ value }, valueField, innerArrayPosition) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value[innerArrayPosition] };\n        item[valueField] = value;\n        items[dataGroup][group][position][field].value[innerArrayPosition] = item;\n        setValues({ ...items });\n    };\n\n    const handleCollectionChange = ({ value }, innerArrayPosition) => {\n        const items = { ...values };\n        let item = { ...items[dataGroup][group][position][field].value.collection.value[innerArrayPosition] };\n        item = value;\n        items[dataGroup][group][position][field].value.collection.value[innerArrayPosition] = item;\n        setValues({ ...items });\n    };\n\n    const editAdditionalLinks = () => <>\n        {Object.keys(values[dataGroup][group][position][field].value).map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>Link Name:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].name}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'name', i)\n                            }\n                        />\n                    </pre>\n                    <pre>\n                        <b>Link:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].link}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'link', i)\n                            }\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='addLink' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    const editBioLinks = () => <>\n        {Object.keys(values[dataGroup][group][position][field].value).map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>Header:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].header}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'header', i)\n                            }\n                        />\n                    </pre>\n                    <pre>\n                        <b>Body:</b>{' '}\n                        <TextArea  \n                            value={values[dataGroup][group][position][field].value[i].subHeader}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'subHeader', i)\n                            }\n                            rows={4}\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='bio' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    const editCollection = () => <>\n        {values[dataGroup][group][position][field].value.collection.value.map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>{`Image ${i+1}:`}</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value.collection.value[i]}\n                            onChange={(e, d) =>\n                                handleCollectionChange(d, i)\n                            }\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='collection' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    return values[dataGroup][group][position][field].arrayType === 'addLinks' ? editAdditionalLinks() : values[dataGroup][group][position][field].arrayType === 'bio' ? editBioLinks() : editCollection() \n}\n\nexport const RightLinksArrays = ({\n    RLArr\n}) => {\n    const additionalLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <Segment key={`RLArray ${i+1}`}>\n                    <pre>\n                        <b>Link Name:</b> {' '}\n                        {link.name !== '' ? \n                        <p>{`${link.name}`}</p> : 'empty'}\n                    </pre>\n                    <pre>\n                        <b>Link:</b> {' '}\n                        {link.link !== '' ? \n                        <p>{`${link.link}`}</p> : 'empty'}\n                    </pre>\n                </Segment>\n            )\n        )}\n    </>\n\n    const bioLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <Segment key={`RLBio ${i+1}`}>\n                    <pre>\n                        <b>Header:</b> {' '}\n                        {link.header !== '' ? \n                        <p>{`${link.header}`}</p> : 'empty'}\n                    </pre>\n                    <pre>\n                        <b>Body:</b> {' '}\n                        {link.subHeader !== '' ? \n                        <p>{`${link.subHeader}`}</p> : 'empty'}\n                    </pre>\n                </Segment>\n            )\n        )}\n    </>\n\n    const collectionLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <pre key={`RLCollection ${i+1}`}>\n                    <b>{`Image ${i+1}:`}</b> {' '}\n                    <p>{`${link}`}</p>\n                </pre>\n            )\n        )}\n    </>\n    \n    return RLArr.arrayType === 'addLinks' ? additionalLinks() : RLArr.arrayType === 'bio' ? bioLinks() : collectionLinks()\n}\n\n","\nimport React from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport { RightLinksArrays } from './RightLinkArrays';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinkObjectPreview = ({\n    RLObj\n}) => <>\n    {Object.keys(RLObj.value).map(\n        (objectKey, i) => (\n            <Segment key={`RLObjectPreview ${objectKey} ${i+1}`}>\n                {RLObj.value[objectKey].arrayType ? (\n                    <RightLinksArrays RLArr={RLObj.value[objectKey]} />\n                ) : (\n                <pre>\n                    <b>{`${objectKey}:`}</b> {' '}\n                    {   objectKey === 'speed' ? \n                        <p>{`${RLObj.value[objectKey].value.toString().slice(0, -3)} sec`}</p>:\n                        RLObj.value[objectKey].value !== '' ? \n                        <p>{`${RLObj.value[objectKey].value}`}</p> : 'empty'\n                    }\n                </pre>\n                )}\n            </Segment>\n        )\n    )}\n</>\n\nexport default RightLinkObjectPreview;\n","\nimport React from 'react';\nimport { Input, Segment, Select } from 'semantic-ui-react';\nimport { EditRightLinkArrays } from './RightLinkArrays';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinkObjects = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n\n    const presetMediaOptions = [\n        { key: 'still', text: 'still', value: 'still' },\n        { key: 'video', text: 'video', value: 'video' },\n        { key: 'slideshow', text: 'slideshow', value: 'slideshow' },\n    ];\n\n    const presetBoolOptions = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const presetSpeedOptions = [\n        { key: '1', text: '1 sec', value: 1000 },\n        { key: '2', text: '2 sec', value: 2000 },\n        { key: '3', text: '3 sec', value: 3000 },\n        { key: '4', text: '4 sec', value: 4000 },\n        { key: '5', text: '5 sec', value: 5000 },\n        { key: '6', text: '6 sec', value: 6000 },\n        { key: '7', text: '7 sec', value: 7000 },\n        { key: '8', text: '8 sec', value: 8000 },\n        { key: '9', text: '9 sec', value: 9000 },\n        { key: '10', text: '10 sec', value: 10000 },\n    ]\n\n    const handleStandardInputChange = ({ value }, valueField) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value };\n        item[valueField].value = value;\n        items[dataGroup][group][position][field].value = item;\n        setValues({ ...items });\n    };\n\n    const handleSelectChange = ({ value }, valueField) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value };\n        item[valueField].value = value;\n        // if (field === 'type') {\n        //     if (value === 'internal') {\n        //         item.internal.value = true;\n        //     } else {\n        //         item.internal.value = false;\n        //     }\n        // }\n        items[dataGroup][group][position][field].value = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <>\n            {Object.keys(values[dataGroup][group][position][field].value).map(\n                (objectKey, i) => values[dataGroup][group][position][field].value[\n                        objectKey\n                    ].type === 'text' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Input\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    onChange={(e, d) =>\n                                        handleStandardInputChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'bool' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value\n                                    }\n                                    options={presetBoolOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'mediaSelect' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    options={presetMediaOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'array' ? (\n                            <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                               <pre>\n                                <b>Collection:</b> {' '}\n                                <EditRightLinkArrays \n                                    dataGroup={dataGroup}\n                                    group={group}\n                                    field={field}\n                                    values={values}\n                                    setValues={setValues}\n                                    position={position}\n                                />\n                               </pre> \n                            </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                        objectKey\n                        ].type === 'number' ? (\n                            <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    options={presetSpeedOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) :\n                    (\n                        'Other Not Yet Implented'\n                    )\n            )))))}\n        </>\n    ); \n};\n\nexport default RightLinkObjects;\n","import React, { useState } from 'react';\nimport {\n    Segment,\n    Header,\n    Accordion,\n    Icon,\n    Label,\n    Divider,\n} from 'semantic-ui-react';\nimport {\n    RLGroupInput,\n    RLGroupSelectInput,\n    RightLinkStandardInput,\n    RightLinkSelectInput,\n} from '../CustomInput/CustomInputs';\nimport AddLink from '../AddLink/AddLink';\nimport RightLinkObjectPreview from './RightLinkObjectPreview';\nimport RightLinkObjects from './RightLinkObjects';\nimport { RightLinksArrays, EditRightLinkArrays } from './RightLinkArrays';\nimport './rightLinks.css';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinks = ({ editRightLink, data, setData }) => {\n    const [activeIndex, setActiveIndex] = useState();\n    const [showgroup, setShowGroup] = useState(false);\n    const [rightLinksFilter, setRightLinksFilter] = useState('');\n\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n    ];\n\n    const presetBoolOptions = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const presetSideOptions = [\n        { key: 'none', text: 'none', value: 'none' },\n        { key: 'left', text: 'left', value: 'left' },\n        { key: 'right', text: 'right', value: 'right' },\n    ];\n\n    const presetTypeOptions = [\n        { key: 'internal', text: 'internal', value: 'internal' },\n        { key: 'external', text: 'external', value: 'external' },\n        { key: 'item', text: 'item', value: 'item' },\n        {\n            key: 'still/external',\n            text: 'still/external',\n            value: 'still/external',\n        },\n        { key: 'slideshow', text: 'slideshow', value: 'slideshow' },\n        { key: 'bio', text: 'bio', value: 'bio' },\n    ];\n\n    const presetAdditionalStyles = [\n        { key: 'longText', text: 'longText', value: 'longText' },\n    ];\n    const handleClick = (e, titleProps) => {\n        const { index } = titleProps;\n        const newIndex = activeIndex === index ? -1 : index;\n\n        setActiveIndex(newIndex);\n    };\n\n    const handleGroupClick = (e, groupData) => {\n        setShowGroup(true);\n        setRightLinksFilter(`${groupData.children[1]}`);\n    };\n\n    return (\n        <Segment className=\"LinkGroup 1\">\n            <div>\n                {data.rightLinks.groups.map((group, i) => (\n                    <Label\n                        key={`group label ${i + 1}`}\n                        as=\"a\"\n                        image\n                        className=\"linkLabels\"\n                        color={group.color}\n                        onClick={handleGroupClick}\n                    >\n                        <Icon name=\"linkify\" />\n                        {group.name}\n                    </Label>\n                ))}\n                <AddLink\n                    collection=\"rightLinksGroups\"\n                    data={data}\n                    setData={setData}\n                    linkGroup=\"\"\n                />\n            </div>\n            <Divider />\n            <Header content=\"Link Group\" />\n            {showgroup ? (\n                <>\n                    <Segment>\n                        <pre>\n                            <b>Group Name:</b>{' '}\n                            {/* need to add text length validation to this field */}\n                            {editRightLink ? (\n                                <RLGroupInput\n                                    dataGroup=\"rightLinks\"\n                                    group=\"groups\"\n                                    field=\"name\"\n                                    values={data.rightLinks.groups.filter(\n                                        (group) =>\n                                            group.name === rightLinksFilter\n                                    )}\n                                    data={data}\n                                    setData={setData}\n                                    setFilter={setRightLinksFilter}\n                                />\n                            ) : data.rightLinks.groups.filter(\n                                  (group) => group.name === rightLinksFilter\n                              )[0].name ? (\n                                <p>{`${\n                                    data.rightLinks.groups.filter(\n                                        (group) =>\n                                            group.name === rightLinksFilter\n                                    )[0].name\n                                }`}</p>\n                            ) : (\n                                'empty'\n                            )}\n                        </pre>\n                    </Segment>\n                    <Segment>\n                        <pre>\n                            <b>Group Color:</b>{' '}\n                            {editRightLink ? (\n                                <RLGroupSelectInput\n                                    dataGroup=\"rightLinks\"\n                                    group=\"groups\"\n                                    field=\"color\"\n                                    values={data.rightLinks.groups.filter(\n                                        (group) =>\n                                            group.name === rightLinksFilter\n                                    )}\n                                    options={presetColorOptions}\n                                    data={data}\n                                    setData={setData}\n                                />\n                            ) : data.rightLinks.groups.filter(\n                                  (group) => group.name === rightLinksFilter\n                              )[0].color ? (\n                                data.rightLinks.groups.filter(\n                                    (group) => group.name === rightLinksFilter\n                                )[0].color\n                            ) : (\n                                'empty'\n                            )}\n                        </pre>\n                    </Segment>\n                    <Accordion styled>\n                        {data.rightLinks.links.map((link, i) =>\n                            link.group === rightLinksFilter ? (\n                                <div key={`RightLink-${i + 1}`}>\n                                    <Accordion.Title\n                                        active={activeIndex === i}\n                                        index={i}\n                                        onClick={handleClick}\n                                    >\n                                        <Icon name=\"dropdown\" />\n                                        {`${link.name.value}`}\n                                    </Accordion.Title>\n                                    {Object.keys(link).map((key, j) =>\n                                        ['group', 'internal'].includes(key) ? (\n                                            ''\n                                        ) : (\n                                            <Accordion.Content\n                                                active={activeIndex === i}\n                                                key={`RightLink-content-${\n                                                    j + 1\n                                                }`}\n                                            >\n                                                <Segment>\n                                                    <pre>\n                                                        <b>{`${key}:`}</b>{' '}\n                                                        {editRightLink ? (\n                                                            link[key].type ===\n                                                            'text' ? (\n                                                                <RightLinkStandardInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'bool' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetBoolOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'typeSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetTypeOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'colorSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetColorOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'sideSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetSideOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'stylesSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetAdditionalStyles\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'obj' ? (\n                                                                <RightLinkObjects\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'array' ? (\n                                                                <EditRightLinkArrays\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : (\n                                                                'field not valid'\n                                                            )\n                                                        ) : ['array'].includes(\n                                                              link[key].type\n                                                          ) ? (\n                                                            <RightLinksArrays\n                                                                RLArr={\n                                                                    link[key]\n                                                                }\n                                                            />\n                                                        ) : link[key].type ===\n                                                          'bool' ? (\n                                                            `${link[key].value}`\n                                                        ) : link[key].type ===\n                                                          'obj' ? (\n                                                            <RightLinkObjectPreview\n                                                                RLObj={\n                                                                    link[key]\n                                                                }\n                                                            />\n                                                        ) : link[key].value ? (\n                                                            <p>{`${link[key].value}`}</p>\n                                                        ) : (\n                                                            'empty'\n                                                        )}\n                                                    </pre>\n                                                </Segment>\n                                            </Accordion.Content>\n                                        )\n                                    )}\n                                </div>\n                            ) : (\n                                ''\n                            )\n                        )}\n                    </Accordion>\n                </>\n            ) : (\n                'Please select one from above or add a new group for your Right-Links'\n            )}\n            <div>\n                {/* {console.log(data)} */}\n                <AddLink\n                    collection=\"rightLinks\"\n                    data={data}\n                    setData={setData}\n                    linkGroup={rightLinksFilter}\n                />\n            </div>\n        </Segment>\n    );\n};\n\nexport default RightLinks;\n","import React from 'react';\nimport { Tab, Menu } from 'semantic-ui-react';\nimport ProfileSection from '../Profile/Profile';\nimport SocialLinks from '../SocialLinks/SocialLinks';\nimport RightLinks from '../RightLinks/RightLinks';\nimport './main.css';\n\nconst Main = ({ editRightLink, data, setData }) => {\n    const panes = [\n        {\n            menuItem: 'Profile',\n            render: () => (\n                <Tab.Pane>\n                    <ProfileSection\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: 'Social Links',\n            render: () => (\n                <Tab.Pane>\n                    <SocialLinks\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: 'Links',\n            render: () => (\n                <Tab.Pane>\n                    <RightLinks\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: (\n                <Menu.Item as=\"a\" key=\"preview\">\n                    Preview\n                    {/* Eventually make this label track changes */}\n                </Menu.Item>\n            ),\n            render: () => <Tab.Pane>{/* <Preview /> */}</Tab.Pane>,\n        },\n    ];\n\n    return (\n        <div className=\"containerSize mainContainer\">\n            <Tab\n                menu={{ fluid: true, vertical: true, tabular: true }}\n                panes={panes}\n            />\n        </div>\n    );\n};\n\nexport default Main;\n","/* eslint-disable arrow-body-style */\nimport React from 'react';\nimport { Modal, Icon, Button } from 'semantic-ui-react';\nimport './Style.css';\n\nconst PublishRightLinkModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    handlePublishClick,\n}) => {\n    const handleNopeClick = () => {\n        setIsModalOpen((previous) => !previous);\n    };\n\n    const handlePublishModalClick = () => {\n        handlePublishClick();\n        setIsModalOpen((previous) => !previous);\n    };\n\n    return (\n        <Modal centered size=\"small\" open={isModalOpen}>\n            <Modal.Header>Should we update your Right-link?</Modal.Header>\n            <Modal.Actions>\n                <Button color=\"red\" onClick={handleNopeClick}>\n                    Nope\n                </Button>\n                <Button\n                    icon\n                    labelPosition=\"right\"\n                    color=\"violet\"\n                    onClick={handlePublishModalClick}\n                >\n                    Yes, Publish Now\n                    <Icon name=\"paper plane outline\" />\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    );\n};\n\nexport default PublishRightLinkModal;\n","/* eslint-disable no-console */\n/* eslint-disable no-alert */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Grid, Message } from 'semantic-ui-react';\nimport _ from 'lodash';\n// import * as Diff from 'diff';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\nimport { db } from '../../utils/auth/firebase';\nimport RightLinkCollectionModal from '../RightLinkCollectionModal/RightLinkCollectionModal';\nimport Header from '../Header/Header';\nimport RightLinkManagementOpt from '../RightLinkManagementOpt/RightLinkManagementOpt';\nimport Main from '../Main/Main';\nimport './Home.css';\nimport PublishRightLinkModal from '../PublishRightLinkModal/PublishRightLinkModal';\n\nconst Home = () => {\n    const MAX_VERSIONS = 5;\n\n    const { currentUser } = useContext(FirebaseContext);\n    // edit save and publish states control if the button is disabled or not\n    const [editRightLink, setEditRightLink] = useState(false);\n    const [saveRightLink, setSaveRightLink] = useState(true);\n    const [publishRightLink, setPublishRightLink] = useState(true);\n    // holds users db doc after signin\n    const [userDbDoc, setUserDbDoc] = useState('');\n    const [isLoginModalOpen, setIsLoginModalOpen] = useState(true);\n    const [isPublishModalOpen, setIsPublishModalOpen] = useState(false);\n    const [userRightLinkData, setUserRightLinkData] = useState([]);\n    const [selectedOriginalRightLinkData, setSelectedOriginalRightLinkData] =\n        useState({});\n    const [data, setData] = useState({});\n    const [disableToggledBanner, setDisableToggledBanner] = useState(false);\n\n    const doesTitleExist = () => {\n        if (data.profile.title.trim() === '') {\n            return false;\n        }\n        return true;\n    };\n\n    const formatDataToSave = (action) => {\n        let dataToSave = [];\n        let dataToFormat = {\n            ...data,\n        };\n\n        if (action === 'save') {\n            dataToFormat = {\n                ...dataToFormat,\n                publish: false,\n            };\n        }\n        if (action === 'publish') {\n            dataToFormat = {\n                ...dataToFormat,\n                publish: true,\n            };\n        }\n\n        if (userRightLinkData.data && userRightLinkData.data.length > 0) {\n            const rightLinkExists = _.find(\n                userRightLinkData.data,\n                (x) => x.uuid === dataToFormat.uuid\n            );\n            if (rightLinkExists) {\n                const fullUserRightLinkDataCopy = userRightLinkData.data;\n                for (let i = 0; i < fullUserRightLinkDataCopy.length; i += 1) {\n                    if (\n                        fullUserRightLinkDataCopy[i].uuid ===\n                        rightLinkExists.uuid\n                    ) {\n                        fullUserRightLinkDataCopy[i] = dataToFormat;\n                    }\n                }\n                dataToSave = {\n                    ...userRightLinkData,\n                    data: fullUserRightLinkDataCopy,\n                };\n            } else {\n                const userRightLinkDataCopy = userRightLinkData.data;\n                userRightLinkDataCopy.push({ ...dataToFormat });\n                dataToSave = {\n                    ...userRightLinkData,\n                    data: userRightLinkDataCopy,\n                };\n            }\n        } else {\n            dataToSave = [{ ...dataToFormat }];\n        }\n\n        return dataToSave;\n    };\n\n    const deleteFromData = ({ item, dataToSave }) => {\n        if (item.type === 'rightLink') {\n            return dataToSave.data.filter((rightLink) => {\n                return (\n                    rightLink.profile?.title !== item.element &&\n                    rightLink.profile\n                );\n            });\n        }\n        return false;\n    };\n\n    const deleteData = async ({ item }) => {\n        const currentDate = new Date().toLocaleString();\n        const userRef = db.collection('users').doc(userDbDoc);\n\n        const dataToSave = formatDataToSave('delete');\n\n        const dateReadyForUpdate = deleteFromData({ item, dataToSave });\n\n        if (!dateReadyForUpdate) {\n            return;\n        }\n        dataToSave.data = dateReadyForUpdate;\n\n        try {\n            db.runTransaction(async (transaction) => {\n                const doc = await transaction.get(userRef);\n\n                // doc doesn't exist; can't update\n                if (!doc.exists) return;\n                // update the users array after getting it from Firestore.\n                const newUserDataArray = doc.data();\n                const newVersion = {\n                    version: dataToSave.version ? dataToSave.version + 1 : 1,\n                    date: currentDate,\n                    data: dataToSave.data ? dataToSave.data : dataToSave,\n                };\n                if (newUserDataArray.data.length >= MAX_VERSIONS) {\n                    newUserDataArray.data.shift();\n                }\n                newUserDataArray.data.push(newVersion);\n                transaction.update(userRef, { ...newUserDataArray });\n            });\n            // .then(window.location.reload());\n        } catch (e) {\n            console.log('Transaction failed: ', e);\n        }\n    };\n\n    const saveData = async () => {\n        const currentDate = new Date().toLocaleString();\n        const userRef = db.collection('users').doc(userDbDoc);\n\n        if (doesTitleExist()) {\n            const dataToSave = formatDataToSave('save');\n\n            try {\n                db.runTransaction(async (transaction) => {\n                    const doc = await transaction.get(userRef);\n\n                    // doc doesn't exist; can't update\n                    if (!doc.exists) return;\n                    // update the users array after getting it from Firestore.\n                    const newUserDataArray = doc.data();\n                    const newVersion = {\n                        version: dataToSave.version\n                            ? dataToSave.version + 1\n                            : 1,\n                        date: currentDate,\n                        data: dataToSave.data ? dataToSave.data : dataToSave,\n                    };\n                    if (newUserDataArray.data.length >= MAX_VERSIONS) {\n                        newUserDataArray.data.shift();\n                    }\n                    newUserDataArray.data.push(newVersion);\n\n                    transaction.update(userRef, { ...newUserDataArray });\n                });\n            } catch (e) {\n                console.log('Transaction failed: ', e);\n            }\n        } else {\n            alert(\n                'Data has not been saved due to missing title. Please add a title (Profile -> Title)'\n            );\n        }\n    };\n\n    const handleSaveClick = () => {\n        if (_.isEqual(selectedOriginalRightLinkData, data)) {\n            alert('No changes detected, everything is up to date!');\n        } else if (doesTitleExist()) {\n            setEditRightLink((previous) => !previous);\n            setSaveRightLink((previous) => !previous);\n            saveData();\n            setIsPublishModalOpen((previous) => !previous);\n            setPublishRightLink((previous) => !previous);\n        } else {\n            alert(\n                'Data has not been saved due to missing title. Please add a title (Profile -> Title)'\n            );\n        }\n    };\n\n    const handleEditClick = () => {\n        setEditRightLink((previous) => !previous);\n        setSaveRightLink((previous) => !previous);\n    };\n\n    const handleCancelClick = () => {\n        setEditRightLink((previous) => !previous);\n        setSaveRightLink((previous) => !previous);\n    };\n\n    const handlePublishClick = () => {\n        setPublishRightLink(true);\n\n        const currentDate = new Date().toLocaleString();\n        const userRef = db.collection('users').doc(userDbDoc);\n\n        if (doesTitleExist()) {\n            const dataToSave = formatDataToSave('publish');\n\n            try {\n                db.runTransaction(async (transaction) => {\n                    const doc = await transaction.get(userRef);\n\n                    // doc doesn't exist; can't update\n                    if (!doc.exists) return;\n                    // update the users array after getting it from Firestore.\n                    const newUserDataArray = doc.data();\n                    const newVersion = {\n                        version: dataToSave.version\n                            ? dataToSave.version + 1\n                            : 1,\n                        date: currentDate,\n                        data: dataToSave.data ? dataToSave.data : dataToSave,\n                    };\n                    if (newUserDataArray.data.length >= MAX_VERSIONS) {\n                        newUserDataArray.data.shift();\n                    }\n                    newUserDataArray.data.push(newVersion);\n\n                    transaction.update(userRef, { ...newUserDataArray });\n                });\n            } catch (e) {\n                console.log('Transaction failed: ', e);\n            }\n            alert('Your Right-Link has been published!');\n        } else {\n            alert(\n                'Data has not been Published due to missing title. Please add a title (Profile -> Title)'\n            );\n        }\n    };\n\n    const disableToggle = () => {\n        setDisableToggledBanner((previous) => !previous);\n    };\n\n    useEffect(() => {\n        const fetch = () => {\n            db.collection('users')\n                .where('uid', '==', currentUser.uid)\n                .onSnapshot((snapshot) => {\n                    let currentData = 0;\n                    const items = snapshot.docs.map((doc) => ({\n                        id: doc.id,\n                        ...doc.data(),\n                    }));\n                    if (items[0] && items[0].data) {\n                        currentData = _.maxBy(items[0].data, 'version');\n                        setUserDbDoc(items[0].id);\n                    }\n\n                    setUserRightLinkData(\n                        currentData && currentData !== 0 ? currentData : []\n                    );\n                });\n        };\n        fetch();\n    }, []);\n\n    return (\n        <Grid columns={2}>\n            {isLoginModalOpen ? (\n                <RightLinkCollectionModal\n                    isModalOpen={isLoginModalOpen}\n                    setIsModalOpen={setIsLoginModalOpen}\n                    collection={userRightLinkData}\n                    setSelectedOriginalRightLinkData={\n                        setSelectedOriginalRightLinkData\n                    }\n                    setData={setData}\n                    setPublishRightLink={setPublishRightLink}\n                    deleteData={deleteData}\n                />\n            ) : (\n                <>\n                    <Grid.Row centered>\n                        <Header />\n                    </Grid.Row>\n                    {disableToggledBanner ? (\n                        <Grid.Row centered className=\"p-0\">\n                            <Message info size=\"small\">\n                                <Message.Header>\n                                    This Right-Link is currently Disabled\n                                </Message.Header>\n                            </Message>\n                        </Grid.Row>\n                    ) : (\n                        ''\n                    )}\n                    <Grid.Row className=\"RLContentRight\">\n                        <RightLinkManagementOpt\n                            handleEditClick={handleEditClick}\n                            editRightLink={editRightLink}\n                            handleSaveClick={handleSaveClick}\n                            saveRightLink={saveRightLink}\n                            handlePublishClick={handlePublishClick}\n                            publishRightLink={publishRightLink}\n                            handleCancelClick={handleCancelClick}\n                            disableToggledBanner={disableToggledBanner}\n                            disableToggle={disableToggle}\n                        />\n                    </Grid.Row>\n                    <Grid.Row centered>\n                        <Main\n                            editRightLink={editRightLink}\n                            data={data}\n                            setData={setData}\n                        />\n                    </Grid.Row>\n                </>\n            )}\n            {isPublishModalOpen ? (\n                <PublishRightLinkModal\n                    isModalOpen={isPublishModalOpen}\n                    setIsModalOpen={setIsPublishModalOpen}\n                    handlePublishClick={handlePublishClick}\n                />\n            ) : (\n                ''\n            )}\n        </Grid>\n    );\n};\n\nexport default Home;\n","import React, { useContext, useCallback } from 'react';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport firebaseApp, { signInWithGoogle } from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\nimport Header from '../Header/Header';\nimport './login.css';\n\nfunction Login({ history }) {\n    const { currentUser } = useContext(FirebaseContext);\n\n    const handleLogin = useCallback(\n        async (event) => {\n            event.preventDefault();\n            const { email, password } = event.target.elements;\n            try {\n                await firebaseApp\n                    .auth()\n                    .signInWithEmailAndPassword(email.value, password.value);\n                history.push('/');\n            } catch (error) {\n                alert(error);\n            }\n        },\n        [history]\n    );\n\n    if (currentUser) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <>\n        <Header />\n        <div className=\"login\">\n            <form className=\"login__container\" onSubmit={handleLogin}>\n                <h1>Log in</h1>\n                <input\n                    className=\"login__textBox\"\n                    name=\"email\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                />\n                <input\n                    className=\"login__textBox\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n                <button className=\"login__btn\" type=\"submit\">\n                    Log in\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"login__btn login__google\"\n                    onClick={signInWithGoogle}\n                >\n                    Login with Google\n                </button>\n                <div>\n                    <Link to=\"/reset\">Forgot Password</Link>\n                </div>\n                <div>\n                    Don&apos;t have an account?{' '}\n                    <Link to=\"/register\">Register</Link> now.\n                </div>\n            </form>\n        </div>\n        </>\n    );\n}\nexport default withRouter(Login);\n","import React, { useCallback } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport {\n    registerWithEmailAndPassword,\n    signInWithGoogle,\n} from '../../utils/auth/firebase';\nimport Header from '../Header/Header';\nimport './register.css';\n\nfunction Register({ history }) {\n    const handleSignUp = useCallback(\n        async (event) => {\n            event.preventDefault();\n            const { name, email, password } = event.target.elements;\n            try {\n                await registerWithEmailAndPassword(\n                    name.value,\n                    email.value,\n                    password.value\n                );\n                history.push('/');\n            } catch (error) {\n                alert(error);\n            }\n        },\n        [history]\n    );\n    return (\n        <>\n        <Header />\n        <div className=\"register\">\n            <form className=\"register__container\" onSubmit={handleSignUp}>\n                <h1>Register</h1>\n                <input\n                    className=\"register__textBox\"\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Full Name\"\n                />\n                <input\n                    className=\"register__textBox\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                />\n                <input\n                    className=\"register__textBox\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n                <button className=\"register__btn\" type=\"submit\">\n                    Sign Up\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"login__btn login__google\"\n                    onClick={signInWithGoogle}\n                >\n                    Register with Google\n                </button>\n                <div>\n                    Already have an account? <Link to=\"/\">Login</Link> now.\n                </div>\n            </form>\n        </div>\n        </>\n    );\n}\nexport default withRouter(Register);\n","import React, { useState, useContext } from 'react';\nimport { withRouter, Link, Redirect } from 'react-router-dom';\nimport { sendPasswordResetEmail } from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\nimport Header from '../Header/Header';\nimport './reset.css';\n\nfunction Reset() {\n    const [email, setEmail] = useState('');\n    const { currentUser } = useContext(FirebaseContext);\n\n    if (currentUser) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <>\n        <Header />\n        <div className=\"reset\">\n            <div className=\"reset__container\">\n                <input\n                    type=\"text\"\n                    className=\"reset__textBox\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"E-mail Address\"\n                />\n                <button\n                    type=\"button\"\n                    className=\"reset__btn\"\n                    onClick={() => sendPasswordResetEmail(email)}\n                >\n                    Send password reset email\n                </button>\n                <div>\n                    Don&apos;t have an account?{' '}\n                    <Link to=\"/register\">Register</Link> now.\n                </div>\n            </div>\n        </div>\n        </>\n    );\n}\nexport default withRouter(Reset);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const { currentUser } = useContext(FirebaseContext);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                currentUser ? (\n                    <Component {...rest} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/login',\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { CloudinaryContext } from 'cloudinary-react';\nimport { FirebaseProvider } from './utils/auth/FirebaseContext';\nimport Home from './components/Home/Home';\nimport 'semantic-ui-css/semantic.min.css';\nimport Login from './components/Login/Login';\nimport Register from './components/Login/Register';\nimport Reset from './components/Login/Reset';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport { CLOUD_NAME, UPLOAD_PRESET } from './config/config';\n\nconst App = () => {\n    return (\n        <FirebaseProvider>\n            <CloudinaryContext\n                cloudName={CLOUD_NAME}\n                uploadPreset={UPLOAD_PRESET}\n            >\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <PrivateRoute exact path=\"/\" component={Home} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/register\" component={Register} />\n                        <Route exact path=\"/reset\" component={Reset} />\n                    </Switch>\n                </Router>\n            </CloudinaryContext>\n        </FirebaseProvider>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}