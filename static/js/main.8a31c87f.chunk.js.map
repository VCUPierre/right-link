{"version":3,"sources":["utils/auth/firebase.js","utils/auth/FirebaseContext.js","components/RightLinkCollectionModal/RightLinkCollectionModal.js","assets/TheRightClickTransparent.png","components/Navbar/Navbar.js","components/Header/Header.js","components/ProfileButton/ProfileButton.js","components/RightLinkManagementOpt/RightLinkManagementOpt.js","config/config.js","utils/api.js","components/CustomInput/CustomInputs.js","components/Profile/Profile.js","constants/icons.js","components/AddLink/AddLink.js","components/SocialLinks/SocialLinks.js","components/RightLinks/RightLinkArrays.js","components/RightLinks/RightLinkObjectPreview.js","components/RightLinks/RightLinkObjects.js","components/RightLinks/RightLinks.js","components/Main/Main.js","components/PublishRightLinkModal/PublishRightLinkModal.js","components/Home/Home.js","components/Login/Login.js","components/Login/Register.js","components/Login/Reset.js","components/PrivateRoute/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","collection","where","uid","get","docs","length","add","name","displayName","authProvider","email","data","localStorage","setItem","JSON","stringify","console","error","alert","message","registerWithEmailAndPassword","password","createUserWithEmailAndPassword","sendPasswordResetEmail","FirebaseContext","createContext","FirebaseProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","onAuthStateChanged","Provider","value","RightLinkCollectionModal","isModalOpen","setIsModalOpen","setSelectedOriginalRightLinkData","setData","setPublishRightLink","initialRightLink","profile","title","titleColor","profilePicture","logo","bgImage","bgImageLink","bgColor","bgCustomColor","socialLinks","group","rightLinks","groups","links","handleClick","selection","selectionClone","_","cloneDeep","uuid","publish","uniqueId","uuidv4","selectionCopy","prev","Modal","centered","size","open","onClose","Header","Content","List","divided","verticalAlign","map","rightLink","i","Item","className","onClick","Icon","color","link","StickyBar","style","justifyContent","width","boxShadow","zIndex","padding","alignItems","background","textAlign","href","Image","src","Logo","display","Navbar","ProfileButton","disableToggle","disableToggledBanner","useContext","Dropdown","button","icon","direction","Menu","disabled","Checkbox","onChange","checked","text","signOut","RightLinkManagementOpt","handleEditClick","editRightLink","handleSaveClick","saveRightLink","handlePublishClick","publishRightLink","handleCancelClick","Button","labelPosition","CLOUD_NAME","UPLOAD_PRESET","UPLOAD_API","axios","post","equals","b","Date","getTime","prototype","keys","Object","every","k","StandardInput","field","values","setValues","dataGroup","handleUpload","e","userFolder","parse","getItem","formData","FormData","append","target","files","API","imageURL","items","item","secure_url","includes","Input","type","id","defaultValue","SelectInput","options","Select","RightLinkSearch","position","searchValue","setSearchValue","Search","aligned","onResultSelect","result","iconName","onSearchChange","toLowerCase","results","filter","x","RLGroupInput","setFilter","prevGroupName","groupLinks","RLGroupSelectInput","SocialLinksStandardInput","SocialLinksSelectInput","RightLinkStandardInput","RightLinkSelectInput","internal","Profile","presetColorOptions","key","Segment","content","rel","inline","BRANDS","image","ICONS","AddLink","linkGroup","addSocialLink","secondaryColor","surrounded","surroundedInColor","addRightLinkGroup","addRightLink","linkSpaced","typeAction","featured","featuredText","featuredTimerDate","featuredTimerText","featuredColor","featuredAltStyle","pinned","mainMedia","mediaText","speed","arrayType","additionalLinks","colorOveride","fontColor","colored","buttonColor","bannerSide","additionalStyle","modalAlternativeText","removed","bioContent","addAdditionalLinks","addBio","header","subHeader","socialLinksCopy","push","rightLinksCopy","rightLinkGroupsCopy","linksCopy","bioCopy","collectionCopy","SocialLinks","activeIndex","setActiveIndex","presetBool","titleProps","index","Accordion","styled","Title","active","Grid","columns","Row","EditRightLinkArrays","handleStandardInputChange","valueField","innerArrayPosition","arrayItem","d","TextArea","rows","handleCollectionChange","RightLinksArrays","RLArr","RightLinkObjectPreview","RLObj","objectKey","toString","slice","RightLinkObjects","presetMediaOptions","presetBoolOptions","presetSpeedOptions","handleSelectChange","RightLinks","showgroup","setShowGroup","rightLinksFilter","setRightLinksFilter","presetSideOptions","presetTypeOptions","presetAdditionalStyles","handleGroupClick","groupData","Label","as","Divider","j","Main","panes","menuItem","render","Tab","Pane","menu","fluid","vertical","tabular","PublishRightLinkModal","Actions","previous","Home","setEditRightLink","setSaveRightLink","userDbDoc","setUserDbDoc","isLoginModalOpen","setIsLoginModalOpen","isPublishModalOpen","setIsPublishModalOpen","userRightLinkData","setUserRightLinkData","selectedOriginalRightLinkData","setDisableToggledBanner","doesTitleExist","trim","formatDataToSave","action","dataToSave","dataToFormat","rightLinkExists","find","fullUserRightLinkDataCopy","userRightLinkDataCopy","saveData","currentDate","toLocaleString","userRef","doc","runTransaction","transaction","exists","newUserDataArray","newVersion","version","date","shift","update","log","onSnapshot","snapshot","currentData","maxBy","Message","info","isEqual","withRouter","history","handleLogin","useCallback","event","preventDefault","elements","signInWithEmailAndPassword","to","onSubmit","placeholder","handleSignUp","setEmail","PrivateRoute","Component","component","rest","location","pathname","state","from","App","cloudName","uploadPreset","basename","exact","path","Login","Register","Reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a31c87f.chunk.js","sourcesContent":["/* eslint-disable no-alert */\n/* eslint-disable no-console */\nimport app from 'firebase/compat/app';\nimport 'firebase/compat/database';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\nconst firebaseApp = app.initializeApp(firebaseConfig);\n\nexport default firebaseApp;\n\n// const appAuth = app.initializeApp(firebaseConfig);\nconst auth = firebaseApp.auth();\nconst db = app.firestore();\n\nconst googleProvider = new app.auth.GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n    try {\n        const res = await auth.signInWithPopup(googleProvider);\n        const { user } = res;\n        const query = await db\n            .collection('users')\n            .where('uid', '==', user.uid)\n            .get();\n        if (query.docs.length === 0) {\n            await db.collection('users').add({\n                uid: user.uid,\n                name: user.displayName,\n                authProvider: 'google',\n                email: user.email,\n                data: [],\n            });\n        }\n        localStorage.setItem('TRC-User', JSON.stringify(user));\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst signInWithEmailAndPassword = async (email, password) => {\n    try {\n        const res = await auth.signInWithEmailAndPassword(email, password);\n        const { user } = res;\n        localStorage.setItem('TRC-User', JSON.stringify(user));\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n    try {\n        const res = await auth.createUserWithEmailAndPassword(email, password);\n        const { user } = res;\n        await db.collection('users').add({\n            uid: user.uid,\n            name,\n            authProvider: 'local',\n            email,\n            data: [],\n        });\n        localStorage.setItem('TRC-User', JSON.stringify(user));\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst sendPasswordResetEmail = async (email) => {\n    try {\n        await auth.sendPasswordResetEmail(email);\n        alert('Password reset link sent!');\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst logout = async () => {\n    await auth.signOut();\n    localStorage.removeItem('TRC-User');\n};\n\nexport {\n    // auth,\n    db,\n    signInWithGoogle,\n    signInWithEmailAndPassword,\n    registerWithEmailAndPassword,\n    sendPasswordResetEmail,\n    logout,\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport firebaseApp from './firebase';\n\nconst FirebaseContext = createContext(null);\n\nconst FirebaseProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [pending, setPending] = useState(true);\n\n    useEffect(() => {\n        firebaseApp.auth().onAuthStateChanged((user) => {\n            setCurrentUser(user);\n            setPending(false);\n        });\n    }, []);\n\n    if (pending) {\n        return <>Loading...</>;\n    }\n\n    return (\n        <FirebaseContext.Provider value={{ currentUser }}>\n            {children}\n        </FirebaseContext.Provider>\n    );\n};\n\nexport { FirebaseContext, FirebaseProvider };\n","import React from 'react';\nimport _ from 'lodash';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Modal, List, Icon } from 'semantic-ui-react';\nimport './collectionStyle.css';\n\nconst RightLinkCollectionModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    collection,\n    setSelectedOriginalRightLinkData,\n    setData,\n    setPublishRightLink,\n}) => {\n    const initialRightLink = {\n        profile: {\n            title: '',\n            titleColor: '',\n            profilePicture: '',\n            logo: 'colored',\n            bgImage: false,\n            bgImageLink: '',\n            bgColor: '',\n            bgCustomColor: '',\n        },\n        socialLinks: {\n            group: [],\n        },\n        rightLinks: {\n            groups: [],\n            links: [],\n        },\n    };\n\n    const handleClick = (selection) => {\n        const selectionClone = _.cloneDeep(selection);\n\n        if (selection.uuid) {\n            setData(selection);\n            setSelectedOriginalRightLinkData(selectionClone);\n            setPublishRightLink(selection.publish);\n        } else {\n            const uniqueId = uuidv4();\n            setData({ uuid: uniqueId, ...selection });\n            const selectionCopy = { uuid: uniqueId, ...selectionClone };\n            setSelectedOriginalRightLinkData(selectionCopy);\n        }\n        setIsModalOpen((prev) => !prev);\n    };\n\n    return (\n        <Modal\n            centered\n            size=\"small\"\n            open={isModalOpen}\n            onClose={() => setIsModalOpen(false)}\n        >\n            <Modal.Header>Choose a Right Link or Create a new one</Modal.Header>\n            <Modal.Content>\n                <List divided selection verticalAlign=\"middle\">\n                    {collection && collection.length !== 0\n                        ? collection.data.map((rightLink, i) => (\n                              <List.Item\n                                  key={`list-item${i + 1}`}\n                                  className=\"centeredListItem\"\n                                  onClick={() => handleClick(rightLink)}\n                              >\n                                  <List.Content>\n                                      {rightLink.profile.title}\n                                  </List.Content>\n                              </List.Item>\n                          ))\n                        : ''}\n                </List>\n                <div className=\"centeredListItem\">\n                    <Icon\n                        color=\"green\"\n                        name=\"add square\"\n                        size=\"big\"\n                        className=\"custom\"\n                        link\n                        onClick={() => handleClick(initialRightLink)}\n                    />\n                </div>\n            </Modal.Content>\n        </Modal>\n    );\n};\n\nexport default RightLinkCollectionModal;\n","export default __webpack_public_path__ + \"static/media/TheRightClickTransparent.45a3cb44.png\";","import React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport Logo from '../../assets/TheRightClickTransparent.png';\n\nconst StickyBar = () => (\n    <div\n        style={{\n            justifyContent: 'space-between',\n            width: '100%',\n            boxShadow: '0 0 1rem 0 rgba(100,110,140,.4)',\n            zIndex: '2',\n            padding: '1em',\n            alignItems: 'center',\n            background: 'white',\n            textAlign: 'center',\n        }}\n    >\n        <a href=\"/\">\n            <Image src={Logo} size=\"medium\" centered />\n        </a>\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                width: '60%',\n            }}\n        />\n    </div>\n);\n\nexport default StickyBar;\n","import React from 'react';\nimport Navbar from '../Navbar/Navbar';\n\nconst Header = () => <Navbar />\n\nexport default Header;\n","/* eslint-disable arrow-body-style */\nimport React, { useContext } from 'react';\nimport { Dropdown, Checkbox } from 'semantic-ui-react';\nimport firebaseApp from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\n\nconst ProfileButton = ({ disableToggle, disableToggledBanner }) => {\n    const { currentUser } = useContext(FirebaseContext);\n\n    const signOut = () => {\n        firebaseApp.auth().signOut();\n    };\n\n    return (\n        <Dropdown button icon=\"user\" direction=\"left\" className=\"icon\">\n            <Dropdown.Menu>\n                <Dropdown.Item disabled>\n                    <span>\n                        <strong>{currentUser.email}</strong>\n                        {/* <strong>{currentUser.displayName.split(' ')[0]}</strong> */}\n                    </span>\n                </Dropdown.Item>\n                <Dropdown.Item onClick={disableToggle}>\n                    <Checkbox\n                        onChange={disableToggle}\n                        checked={disableToggledBanner}\n                    />{' '}\n                    Disable right-link\n                </Dropdown.Item>\n                <Dropdown.Item text=\"Sign Out\" onClick={signOut} />\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileButton;\n","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport ProfileButton from '../ProfileButton/ProfileButton';\n\nconst RightLinkManagementOpt = ({\n    handleEditClick,\n    editRightLink,\n    handleSaveClick,\n    saveRightLink,\n    handlePublishClick,\n    publishRightLink,\n    handleCancelClick,\n    disableToggledBanner,\n    disableToggle,\n}) => (\n    <>\n        <Button\n            icon\n            labelPosition=\"left\"\n            color=\"blue\"\n            disabled={editRightLink}\n            onClick={handleEditClick}\n        >\n            <Icon name=\"edit outline\" />\n            Edit\n        </Button>\n        {editRightLink ? (\n            <Button\n                icon\n                labelPosition=\"left\"\n                color=\"red\"\n                disabled={!editRightLink}\n                onClick={handleCancelClick}\n            >\n                Cancel\n                <Icon name=\"cancel\" />\n            </Button>\n        ) : (\n            ''\n        )}\n        {editRightLink ? (\n            <Button\n                icon\n                labelPosition=\"right\"\n                color=\"green\"\n                disabled={saveRightLink}\n                onClick={handleSaveClick}\n            >\n                Save\n                <Icon name=\"save outline\" />\n            </Button>\n        ) : (\n            ''\n        )}\n        {saveRightLink && !publishRightLink ? (\n            <Button\n                icon\n                labelPosition=\"right\"\n                color=\"violet\"\n                disabled={publishRightLink}\n                onClick={handlePublishClick}\n            >\n                Publish\n                <Icon name=\"paper plane outline\" />\n            </Button>\n        ) : (\n            ''\n        )}\n        <ProfileButton\n            disableToggle={disableToggle}\n            disableToggledBanner={disableToggledBanner}\n        />\n    </>\n);\n\nexport default RightLinkManagementOpt;\n","export const CLOUD_NAME = process.env.REACT_APP_CLOUDINARY_CLOUD_NAME;\nexport const UPLOAD_PRESET =\n    process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET_NAME;\nexport const UPLOAD_API = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/upload`;\n","import axios from 'axios';\nimport { UPLOAD_API } from '../config/config';\n\nexport default {\n    uploadImage: (data) => axios.post(UPLOAD_API, data),\n};\n","import React, { useState } from 'react';\nimport { Input, Select, Search } from 'semantic-ui-react';\nimport API from '../../utils/api';\nimport { UPLOAD_PRESET } from '../../config/config';\n\nconst equals = (a, b) => {\n    if (a === b) return true;\n\n    if (a instanceof Date && b instanceof Date)\n        return a.getTime() === b.getTime();\n\n    if (!a || !b || (typeof a !== 'object' && typeof b !== 'object'))\n        return a === b;\n\n    if (a.prototype !== b.prototype) return false;\n\n    const keys = Object.keys(a);\n    if (keys.length !== Object.keys(b).length) return false;\n\n    return keys.every((k) => equals(a[k], b[k]));\n};\n\nexport const StandardInput = ({ field, values, setValues, dataGroup }) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = value;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    const handleUpload = async (e) => {\n        const userFolder = JSON.parse(localStorage.getItem('TRC-User')).email;\n        const formData = new FormData();\n        formData.append('file', e.target.files[0]);\n        formData.append('upload_preset', UPLOAD_PRESET);\n        formData.append('folder', userFolder);\n\n        const imageURL = await API.uploadImage(formData);\n\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = imageURL.data.secure_url;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <>\n            {['profilePicture', 'bgImageLink'].includes(field) ? (\n                <Input\n                    type=\"file\"\n                    id={field}\n                    name={field}\n                    onChange={handleUpload}\n                />\n            ) : (\n                <Input\n                    defaultValue={values[dataGroup][field] || ''}\n                    onChange={handleChange}\n                />\n            )}\n        </>\n    );\n};\n\nexport const SelectInput = ({\n    field,\n    values,\n    setValues,\n    options,\n    dataGroup,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup] };\n        item[field] = value;\n        items[dataGroup] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkSearch = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    collection,\n    position,\n}) => {\n    const [searchValue, setSearchValue] = useState('');\n\n    const handleChange = (e) => {\n        setSearchValue(e.target.value.toLowerCase());\n    };\n\n    const handleSelect = (e, { result }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = result.title;\n        if (field === 'name') {\n            item.iconName = result.title;\n        }\n        items[dataGroup][group][position] = item;\n        setSearchValue(result.title);\n        setValues({ ...items });\n    };\n\n    return (\n        <Search\n            aligned=\"left\"\n            onResultSelect={handleSelect}\n            onSearchChange={handleChange}\n            results={collection.filter((x) => x.title.includes(searchValue))}\n            value={searchValue}\n        />\n    );\n};\n\nexport const RLGroupInput = ({\n    field,\n    data,\n    values,\n    setData,\n    dataGroup,\n    group,\n    setFilter,\n}) => {\n    const prevGroupName = values[0].name;\n\n    const handleChange = (e, { value }) => {\n        const items = { ...data };\n        const item = [...items[dataGroup][group]];\n        const groupLinks = [...items[dataGroup].links];\n        for (let i = 0; i < item.length; i += 1) {\n            if (equals(item[i], values[0])) {\n                item[i][field] = value;\n            }\n        }\n        for (let i = 0; i < groupLinks.length; i += 1) {\n            if (groupLinks[i].group.value === prevGroupName) {\n                groupLinks[i].group.value = value;\n            }\n        }\n        items[dataGroup][group] = item;\n        items[dataGroup].links = groupLinks;\n        setFilter(value);\n        setData({ ...items });\n    };\n\n    return (\n        <Input defaultValue={values[0][field] || ''} onChange={handleChange} />\n    );\n};\n\nexport const RLGroupSelectInput = ({\n    field,\n    values,\n    setData,\n    options,\n    dataGroup,\n    group,\n    data,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...data };\n        const item = [...items[dataGroup][group]];\n        for (let i = 0; i < item.length; i += 1) {\n            if (equals(item[i], values[0])) {\n                item[i][field] = value;\n            }\n        }\n        items[dataGroup][group] = item;\n        // setFilter(value);\n        setData({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[0][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const SocialLinksStandardInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = value;\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Input\n            defaultValue={values[dataGroup][group][position][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const SocialLinksSelectInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    options,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field] = value;\n        items[dataGroup][group][position] = item;\n        setValues(items);\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][group][position][field] || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkStandardInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field].value = value;\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Input\n            defaultValue={values[dataGroup][group][position][field].value || ''}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport const RightLinkSelectInput = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    options,\n    position,\n}) => {\n    const handleChange = (e, { value }) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position] };\n        item[field].value = value;\n        if (field === 'type') {\n            if (value === 'internal') {\n                item.internal.value = true;\n            } else {\n                item.internal.value = false;\n            }\n        }\n        items[dataGroup][group][position] = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <Select\n            options={options}\n            defaultValue={values[dataGroup][group][position][field].value || ''}\n            onChange={handleChange}\n        />\n    );\n};\n","import React from 'react';\nimport { Segment, Header, Image } from 'semantic-ui-react';\nimport { StandardInput, SelectInput } from '../CustomInput/CustomInputs';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst Profile = ({ editRightLink, data, setData }) => {\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n        { key: 'custom', text: 'custom', value: 'custom' },\n    ];\n\n    const presetBool = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    return (\n        <Segment className=\"Profile\">\n            <Header content=\"Profile\" />\n            <Segment>\n                <pre>\n                    <b>Title:</b>{' '}\n                    {editRightLink ? (\n                        <StandardInput\n                            dataGroup=\"profile\"\n                            field=\"title\"\n                            values={data}\n                            setValues={setData}\n                        />\n                    ) : data.profile.title ? (\n                        <p>{`${data.profile.title}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                <pre>\n                    <b>Title Color:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"titleColor\"\n                            values={data}\n                            setValues={setData}\n                            options={presetColorOptions}\n                        />\n                    ) : data.profile.titleColor ? (\n                        data.profile.titleColor\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n            </Segment>\n            <Segment>\n                <pre>\n                    <b>Background Color:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"bgColor\"\n                            values={data}\n                            setValues={setData}\n                            options={presetColorOptions}\n                        />\n                    ) : data.profile.bgColor ? (\n                        <p>{`${data.profile.bgColor}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                {data.profile.bgColor === 'custom' ? (\n                    <pre>\n                        <p>\n                            <b>Custom Background Color:</b>\n                            <br />\n                            <a\n                                href=\"https://mycolor.space/gradient3\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                Try a Gradiant?\n                                {/* add a hover text (tooltip) to say 'use this link and copy and paste exactly \"css code\" box' */}\n                            </a>\n                        </p>\n                        {editRightLink ? (\n                            <StandardInput\n                                dataGroup=\"profile\"\n                                field=\"bgCustomColor\"\n                                values={data}\n                                setValues={setData}\n                            />\n                        ) : data.profile.bgCustomColor ? (\n                            <p>{`${data.profile.bgCustomColor}`}</p>\n                        ) : (\n                            'empty'\n                        )}\n                    </pre>\n                ) : (\n                    ''\n                )}\n                <pre>\n                    <b>Background Image:</b>{' '}\n                    {editRightLink ? (\n                        <SelectInput\n                            dataGroup=\"profile\"\n                            field=\"bgImage\"\n                            values={data}\n                            setValues={setData}\n                            options={presetBool}\n                        />\n                    ) : data.profile.bgImage ? (\n                        <p>{`${data.profile.bgImage}`}</p>\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n                {data.profile.bgImage ? (\n                    <pre>\n                        <b>Background Image Link:</b>{' '}\n                        {editRightLink ? (\n                            <StandardInput\n                                dataGroup=\"profile\"\n                                field=\"bgImageLink\"\n                                values={data}\n                                setValues={setData}\n                            />\n                        ) : data.profile.bgImageLink ? (\n                            <Image\n                                src={data.profile.bgImageLink}\n                                size=\"small\"\n                                inline\n                            />\n                        ) : (\n                            'empty'\n                        )}\n                    </pre>\n                ) : (\n                    ''\n                )}\n            </Segment>\n            <Segment>\n                <pre>\n                    <b>Profile Picture:</b>{' '}\n                    {editRightLink ? (\n                        <StandardInput\n                            dataGroup=\"profile\"\n                            field=\"profilePicture\"\n                            values={data}\n                            setValues={setData}\n                        />\n                    ) : data.profile.profilePicture ? (\n                        <Image\n                            src={data.profile.profilePicture}\n                            size=\"small\"\n                            inline\n                        />\n                    ) : (\n                        'empty'\n                    )}\n                </pre>\n            </Segment>\n        </Segment>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nexport const BRANDS = [\n    { title: 'amazon', image: <Icon name=\"amazon\" size=\"big\" /> },\n    { title: 'amazon pay', image: <Icon name=\"amazon pay\" size=\"big\" /> },\n    { title: 'android', image: <Icon name=\"android\" size=\"big\" /> },\n    { title: 'angellist', image: <Icon name=\"angellist\" size=\"big\" /> },\n    { title: 'app store', image: <Icon name=\"app store\" size=\"big\" /> },\n    {\n        title: 'app store ios',\n        image: <Icon name=\"app store ios\" size=\"big\" />,\n    },\n    { title: 'apple', image: <Icon name=\"apple\" size=\"big\" /> },\n    { title: 'apple pay', image: <Icon name=\"apple pay\" size=\"big\" /> },\n    { title: 'audible', image: <Icon name=\"audible\" size=\"big\" /> },\n    { title: 'aws', image: <Icon name=\"aws\" size=\"big\" /> },\n    { title: 'bandcamp', image: <Icon name=\"bandcamp\" size=\"big\" /> },\n    { title: 'behance', image: <Icon name=\"behance\" size=\"big\" /> },\n    {\n        title: 'behance square',\n        image: <Icon name=\"behance square\" size=\"big\" />,\n    },\n    { title: 'bimobject', image: <Icon name=\"bimobject\" size=\"big\" /> },\n    { title: 'bitbucket', image: <Icon name=\"bitbucket\" size=\"big\" /> },\n    { title: 'bitcoin', image: <Icon name=\"bitcoin\" size=\"big\" /> },\n    { title: 'bity', image: <Icon name=\"bity\" size=\"big\" /> },\n    { title: 'blackberry', image: <Icon name=\"blackberry\" size=\"big\" /> },\n    { title: 'blogger', image: <Icon name=\"blogger\" size=\"big\" /> },\n    { title: 'blogger b', image: <Icon name=\"blogger b\" size=\"big\" /> },\n    { title: 'bluetooth', image: <Icon name=\"bluetooth\" size=\"big\" /> },\n    { title: 'bluetooth b', image: <Icon name=\"bluetooth b\" size=\"big\" /> },\n    { title: 'btc', image: <Icon name=\"btc\" size=\"big\" /> },\n    {\n        title: 'cc amazon pay',\n        image: <Icon name=\"cc amazon pay\" size=\"big\" />,\n    },\n    { title: 'cc amex', image: <Icon name=\"cc amex\" size=\"big\" /> },\n    { title: 'cc apple pay', image: <Icon name=\"cc apple pay\" size=\"big\" /> },\n    {\n        title: 'cc diners club',\n        image: <Icon name=\"cc diners club\" size=\"big\" />,\n    },\n    { title: 'cc discover', image: <Icon name=\"cc discover\" size=\"big\" /> },\n    { title: 'cc jcb', image: <Icon name=\"cc jcb\" size=\"big\" /> },\n    {\n        title: 'cc mastercard',\n        image: <Icon name=\"cc mastercard\" size=\"big\" />,\n    },\n    { title: 'cc paypal', image: <Icon name=\"cc paypal\" size=\"big\" /> },\n    { title: 'cc stripe', image: <Icon name=\"cc stripe\" size=\"big\" /> },\n    { title: 'cc visa', image: <Icon name=\"cc visa\" size=\"big\" /> },\n    { title: 'chrome', image: <Icon name=\"chrome\" size=\"big\" /> },\n    { title: 'codepen', image: <Icon name=\"codepen\" size=\"big\" /> },\n    {\n        title: 'creative commons',\n        image: <Icon name=\"creative commons\" size=\"big\" />,\n    },\n    { title: 'deviantart', image: <Icon name=\"deviantart\" size=\"big\" /> },\n    { title: 'digg', image: <Icon name=\"digg\" size=\"big\" /> },\n    {\n        title: 'digital ocean',\n        image: <Icon name=\"digital ocean\" size=\"big\" />,\n    },\n    { title: 'discord', image: <Icon name=\"discord\" size=\"big\" /> },\n    { title: 'docker', image: <Icon name=\"docker\" size=\"big\" /> },\n    { title: 'dribbble', image: <Icon name=\"dribbble\" size=\"big\" /> },\n    {\n        title: 'dribbble square',\n        image: <Icon name=\"dribbble square\" size=\"big\" />,\n    },\n    { title: 'dropbox', image: <Icon name=\"dropbox\" size=\"big\" /> },\n    { title: 'drupal', image: <Icon name=\"drupal\" size=\"big\" /> },\n    { title: 'ember', image: <Icon name=\"ember\" size=\"big\" /> },\n    { title: 'empire', image: <Icon name=\"empire\" size=\"big\" /> },\n    { title: 'ethereum', image: <Icon name=\"ethereum\" size=\"big\" /> },\n    { title: 'etsy', image: <Icon name=\"etsy\" size=\"big\" /> },\n    { title: 'facebook', image: <Icon name=\"facebook\" size=\"big\" /> },\n    { title: 'facebook f', image: <Icon name=\"facebook f\" size=\"big\" /> },\n    {\n        title: 'facebook messenger',\n        image: <Icon name=\"facebook messenger\" size=\"big\" />,\n    },\n    {\n        title: 'facebook square',\n        image: <Icon name=\"facebook square\" size=\"big\" />,\n    },\n    { title: 'firefox', image: <Icon name=\"firefox\" size=\"big\" /> },\n    { title: 'flickr', image: <Icon name=\"flickr\" size=\"big\" /> },\n    { title: 'flipboard', image: <Icon name=\"flipboard\" size=\"big\" /> },\n    { title: 'foursquare', image: <Icon name=\"foursquare\" size=\"big\" /> },\n    {\n        title: 'free code camp',\n        image: <Icon name=\"free code camp\" size=\"big\" />,\n    },\n    { title: 'git', image: <Icon name=\"git\" size=\"big\" /> },\n    { title: 'git square', image: <Icon name=\"git square\" size=\"big\" /> },\n    { title: 'github', image: <Icon name=\"github\" size=\"big\" /> },\n    {\n        title: 'github alternate',\n        image: <Icon name=\"github alternate\" size=\"big\" />,\n    },\n    {\n        title: 'github square',\n        image: <Icon name=\"github square\" size=\"big\" />,\n    },\n    { title: 'gitkraken', image: <Icon name=\"gitkraken\" size=\"big\" /> },\n    { title: 'gitlab', image: <Icon name=\"gitlab\" size=\"big\" /> },\n    { title: 'goodreads', image: <Icon name=\"goodreads\" size=\"big\" /> },\n    { title: 'goodreads g', image: <Icon name=\"goodreads g\" size=\"big\" /> },\n    { title: 'google', image: <Icon name=\"google\" size=\"big\" /> },\n    { title: 'google drive', image: <Icon name=\"google drive\" size=\"big\" /> },\n    { title: 'google play', image: <Icon name=\"google play\" size=\"big\" /> },\n    { title: 'google plus', image: <Icon name=\"google plus\" size=\"big\" /> },\n    {\n        title: 'google plus g',\n        image: <Icon name=\"google plus g\" size=\"big\" />,\n    },\n    {\n        title: 'google plus square',\n        image: <Icon name=\"google plus square\" size=\"big\" />,\n    },\n    {\n        title: 'google wallet',\n        image: <Icon name=\"google wallet\" size=\"big\" />,\n    },\n    { title: 'hooli', image: <Icon name=\"hooli\" size=\"big\" /> },\n    { title: 'instagram', image: <Icon name=\"instagram\" size=\"big\" /> },\n    { title: 'itunes', image: <Icon name=\"itunes\" size=\"big\" /> },\n    { title: 'itunes note', image: <Icon name=\"itunes note\" size=\"big\" /> },\n    { title: 'jenkins', image: <Icon name=\"jenkins\" size=\"big\" /> },\n    { title: 'joomla', image: <Icon name=\"joomla\" size=\"big\" /> },\n    { title: 'jsfiddle', image: <Icon name=\"jsfiddle\" size=\"big\" /> },\n    { title: 'keycdn', image: <Icon name=\"keycdn\" size=\"big\" /> },\n    { title: 'kickstarter', image: <Icon name=\"kickstarter\" size=\"big\" /> },\n    {\n        title: 'kickstarter k',\n        image: <Icon name=\"kickstarter k\" size=\"big\" />,\n    },\n    { title: 'laravel', image: <Icon name=\"laravel\" size=\"big\" /> },\n    { title: 'linkedin', image: <Icon name=\"linkedin\" size=\"big\" /> },\n    { title: 'lyft', image: <Icon name=\"lyft\" size=\"big\" /> },\n    { title: 'magento', image: <Icon name=\"magento\" size=\"big\" /> },\n    { title: 'medium', image: <Icon name=\"medium\" size=\"big\" /> },\n    { title: 'medium m', image: <Icon name=\"medium m\" size=\"big\" /> },\n    { title: 'meetup', image: <Icon name=\"meetup\" size=\"big\" /> },\n    { title: 'microsoft', image: <Icon name=\"microsoft\" size=\"big\" /> },\n    { title: 'mix', image: <Icon name=\"mix\" size=\"big\" /> },\n    { title: 'mixcloud', image: <Icon name=\"mixcloud\" size=\"big\" /> },\n    { title: 'napster', image: <Icon name=\"napster\" size=\"big\" /> },\n    {\n        title: 'nintendo switch',\n        image: <Icon name=\"nintendo switch\" size=\"big\" />,\n    },\n    { title: 'npm', image: <Icon name=\"npm\" size=\"big\" /> },\n    { title: 'nutritionix', image: <Icon name=\"nutritionix\" size=\"big\" /> },\n    { title: 'patreon', image: <Icon name=\"patreon\" size=\"big\" /> },\n    { title: 'paypal', image: <Icon name=\"paypal\" size=\"big\" /> },\n    { title: 'periscope', image: <Icon name=\"periscope\" size=\"big\" /> },\n    { title: 'php', image: <Icon name=\"php\" size=\"big\" /> },\n    { title: 'pied piper', image: <Icon name=\"pied piper\" size=\"big\" /> },\n    {\n        title: 'pied piper alternate',\n        image: <Icon name=\"pied piper alternate\" size=\"big\" />,\n    },\n    {\n        title: 'pied piper pp',\n        image: <Icon name=\"pied piper pp\" size=\"big\" />,\n    },\n    { title: 'pinterest', image: <Icon name=\"pinterest\" size=\"big\" /> },\n    { title: 'pinterest p', image: <Icon name=\"pinterest p\" size=\"big\" /> },\n    {\n        title: 'pinterest square',\n        image: <Icon name=\"pinterest square\" size=\"big\" />,\n    },\n    { title: 'playstation', image: <Icon name=\"playstation\" size=\"big\" /> },\n    { title: 'quora', image: <Icon name=\"quora\" size=\"big\" /> },\n    { title: 'reddit', image: <Icon name=\"reddit\" size=\"big\" /> },\n    { title: 'reddit alien', image: <Icon name=\"reddit alien\" size=\"big\" /> },\n    {\n        title: 'reddit square',\n        image: <Icon name=\"reddit square\" size=\"big\" />,\n    },\n    { title: 'replyd', image: <Icon name=\"replyd\" size=\"big\" /> },\n    { title: 'rocketchat', image: <Icon name=\"rocketchat\" size=\"big\" /> },\n    { title: 'skype', image: <Icon name=\"skype\" size=\"big\" /> },\n    { title: 'slack', image: <Icon name=\"slack\" size=\"big\" /> },\n    { title: 'slack hash', image: <Icon name=\"slack hash\" size=\"big\" /> },\n    { title: 'slideshare', image: <Icon name=\"slideshare\" size=\"big\" /> },\n    { title: 'snapchat', image: <Icon name=\"snapchat\" size=\"big\" /> },\n    {\n        title: 'snapchat ghost',\n        image: <Icon name=\"snapchat ghost\" size=\"big\" />,\n    },\n    {\n        title: 'snapchat square',\n        image: <Icon name=\"snapchat square\" size=\"big\" />,\n    },\n    { title: 'soundcloud', image: <Icon name=\"soundcloud\" size=\"big\" /> },\n    { title: 'spotify', image: <Icon name=\"spotify\" size=\"big\" /> },\n    {\n        title: 'stack exchange',\n        image: <Icon name=\"stack exchange\" size=\"big\" />,\n    },\n    {\n        title: 'stack overflow',\n        image: <Icon name=\"stack overflow\" size=\"big\" />,\n    },\n    { title: 'staylinked', image: <Icon name=\"staylinked\" size=\"big\" /> },\n    { title: 'steam', image: <Icon name=\"steam\" size=\"big\" /> },\n    { title: 'steam square', image: <Icon name=\"steam square\" size=\"big\" /> },\n    { title: 'steam symbol', image: <Icon name=\"steam symbol\" size=\"big\" /> },\n    { title: 'stripe', image: <Icon name=\"stripe\" size=\"big\" /> },\n    { title: 'stripe s', image: <Icon name=\"stripe s\" size=\"big\" /> },\n    { title: 'stumbleupon', image: <Icon name=\"stumbleupon\" size=\"big\" /> },\n    {\n        title: 'stumbleupon circle',\n        image: <Icon name=\"stumbleupon circle\" size=\"big\" />,\n    },\n    { title: 'telegram', image: <Icon name=\"telegram\" size=\"big\" /> },\n    {\n        title: 'telegram plane',\n        image: <Icon name=\"telegram plane\" size=\"big\" />,\n    },\n    { title: 'trello', image: <Icon name=\"trello\" size=\"big\" /> },\n    { title: 'tripadvisor', image: <Icon name=\"tripadvisor\" size=\"big\" /> },\n    { title: 'tumblr', image: <Icon name=\"tumblr\" size=\"big\" /> },\n    {\n        title: 'tumblr square',\n        image: <Icon name=\"tumblr square\" size=\"big\" />,\n    },\n    { title: 'twitch', image: <Icon name=\"twitch\" size=\"big\" /> },\n    { title: 'twitter', image: <Icon name=\"twitter\" size=\"big\" /> },\n    {\n        title: 'twitter square',\n        image: <Icon name=\"twitter square\" size=\"big\" />,\n    },\n    { title: 'uber', image: <Icon name=\"uber\" size=\"big\" /> },\n    { title: 'vimeo', image: <Icon name=\"vimeo\" size=\"big\" /> },\n    { title: 'vimeo square', image: <Icon name=\"vimeo square\" size=\"big\" /> },\n    { title: 'vimeo v', image: <Icon name=\"vimeo v\" size=\"big\" /> },\n    { title: 'vine', image: <Icon name=\"vine\" size=\"big\" /> },\n    { title: 'vk', image: <Icon name=\"vk\" size=\"big\" /> },\n    { title: 'wechat', image: <Icon name=\"wechat\" size=\"big\" /> },\n    { title: 'weibo', image: <Icon name=\"weibo\" size=\"big\" /> },\n    { title: 'whatsapp', image: <Icon name=\"whatsapp\" size=\"big\" /> },\n    {\n        title: 'whatsapp square',\n        image: <Icon name=\"whatsapp square\" size=\"big\" />,\n    },\n    { title: 'wikipedia w', image: <Icon name=\"wikipedia w\" size=\"big\" /> },\n    { title: 'xbox', image: <Icon name=\"xbox\" size=\"big\" /> },\n    { title: 'y combinator', image: <Icon name=\"y combinator\" size=\"big\" /> },\n    { title: 'yahoo', image: <Icon name=\"yahoo\" size=\"big\" /> },\n    { title: 'yelp', image: <Icon name=\"yelp\" size=\"big\" /> },\n    { title: 'youtube', image: <Icon name=\"youtube\" size=\"big\" /> },\n    {\n        title: 'youtube square',\n        image: <Icon name=\"youtube square\" size=\"big\" />,\n    },\n];\n\nexport const ICONS = [...BRANDS];\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport './AddLink.css';\n\nconst AddLink = ({ collection, data, setData, linkGroup }) => {\n    const addSocialLink = {\n        name: '',\n        iconName: '',\n        link: '',\n        color: '',\n        secondaryColor: '',\n        surrounded: '',\n        surroundedInColor: '',\n    };\n\n    const addRightLinkGroup = {\n        name: 'New Group',\n        color: 'green',\n    };\n\n    const addRightLink = {\n        group: linkGroup,\n        name: {\n            type: 'text',\n            value: 'New Right Link',\n        },\n        link: {\n            type: 'text',\n            value: '',\n        },\n        linkSpaced: {\n            type: 'bool',\n            value: false,\n        },\n        type: {\n            type: 'typeSelect',\n            value: '',\n        },\n        typeAction: {\n            type: 'text',\n            value: '',\n        },\n        internal: {\n            type: 'bool',\n            value: false,\n        },\n        featured: {\n            type: 'bool',\n            value: false,\n        },\n        featuredText: {\n            type: 'text',\n            value: '',\n        },\n        featuredTimerDate: {\n            type: 'text',\n            value: '',\n        },\n        featuredTimerText: {\n            type: 'text',\n            value: '',\n        },\n        featuredColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        featuredAltStyle: {\n            type: 'text',\n            value: '',\n        },\n        pinned: {\n            type: 'bool',\n            value: false,\n        },\n        mainMedia: {\n            type: 'obj',\n            value: {\n                type: {\n                    type: 'mediaSelect',\n                    value: '',\n                },\n                mediaText: {\n                    type: 'text',\n                    value: '',\n                },\n                speed: {\n                    type: 'number',\n                    value: 1000,\n                },\n                collection: {\n                    type: 'array',\n                    arrayType: 'collection',\n                    value: [],\n                },\n            },\n        },\n        additionalLinks: {\n            type: 'array',\n            arrayType: 'addLinks',\n            value: [],\n        },\n        color: {\n            type: 'colorSelect',\n            value: '',\n        },\n        colorOveride: {\n            type: 'text',\n            value: '',\n        },\n        fontColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        colored: {\n            type: 'bool',\n            value: false,\n        },\n        buttonColor: {\n            type: 'colorSelect',\n            value: '',\n        },\n        bannerSide: {\n            type: 'sideSelect',\n            value: '',\n        },\n        additionalStyle: {\n            type: 'text',\n            value: 'longText',\n        },\n        modalAlternativeText: {\n            type: 'obj',\n            value: {\n                removed: {\n                    type: 'bool',\n                    value: false,\n                },\n                text: {\n                    type: 'text',\n                    value: '',\n                },\n            },\n        },\n        bioContent: {\n            type: 'array',\n            arrayType: 'bio',\n            value: [],\n        },\n    };\n\n    const addAdditionalLinks = {\n        name: '',\n        link: '',\n    };\n\n    const addBio = {\n        header: '',\n        subHeader: '',\n    };\n\n    // need to return empty, if edit mode return\n    const addCollection = '';\n\n    const handleClick = () => {\n        if (collection === 'socialLinks') {\n            const items = { ...data };\n            const item = { ...items.socialLinks };\n            const socialLinksCopy = item.group;\n            socialLinksCopy.push(addSocialLink);\n            items.socialLinks.group = socialLinksCopy;\n            setData(items);\n        }\n        if (collection === 'rightLinks') {\n            const items = { ...data };\n            const item = { ...items.rightLinks };\n            const rightLinksCopy = item.links;\n            rightLinksCopy.push(addRightLink);\n            items.rightLinks.links = rightLinksCopy;\n            setData(items);\n        }\n        if (collection === 'rightLinksGroups') {\n            const items = { ...data };\n            const item = { ...items.rightLinks };\n            const rightLinkGroupsCopy = item.groups;\n            rightLinkGroupsCopy.push(addRightLinkGroup);\n            items.rightLinks.groups = rightLinkGroupsCopy;\n            setData(items);\n        }\n        if (collection === 'addLink') {\n            const linksCopy =\n                data.rightLinks.links[linkGroup].additionalLinks.value;\n            linksCopy.push(addAdditionalLinks);\n            setData({\n                ...data,\n                [data.rightLinks.links[linkGroup].additionalLinks.value]:\n                    linksCopy,\n            });\n        }\n        if (collection === 'bio') {\n            const bioCopy = data.rightLinks.links[linkGroup].bioContent.value;\n            bioCopy.push(addBio);\n            setData({\n                ...data,\n                [data.rightLinks.links[linkGroup].bioContent.value]: bioCopy,\n            });\n        }\n        if (collection === 'collection') {\n            const collectionCopy =\n                data.rightLinks.links[linkGroup].mainMedia.value.collection\n                    .value;\n            collectionCopy.push(addCollection);\n            setData({\n                ...data,\n                [data.rightLinks.links[linkGroup].mainMedia.value.collection\n                    .value]: collectionCopy,\n            });\n        }\n    };\n\n    return (\n        <Icon\n            color=\"green\"\n            name=\"add square\"\n            size=\"big\"\n            className=\"custom\"\n            link\n            onClick={handleClick}\n        />\n    );\n};\n\nexport default AddLink;\n","import React, { useState } from 'react';\nimport { Segment, Header, Accordion, Icon, Grid } from 'semantic-ui-react';\nimport {\n    SocialLinksStandardInput,\n    SocialLinksSelectInput,\n    RightLinkSearch,\n} from '../CustomInput/CustomInputs';\nimport { ICONS } from '../../constants/icons';\nimport AddLink from '../AddLink/AddLink';\nimport './socialLinks.css';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst SocialLinks = ({ editRightLink, data, setData }) => {\n    const [activeIndex, setActiveIndex] = useState();\n\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n    ];\n\n    const presetBool = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const handleClick = (e, titleProps) => {\n        const { index } = titleProps;\n        const newIndex = activeIndex === index ? -1 : index;\n\n        setActiveIndex(newIndex);\n    };\n\n    return (\n        <Segment className=\"social links\">\n            <Header content=\"Social Links\" />\n            <Accordion styled>\n                {data.socialLinks.group.map((link, i) => (\n                    <div key={`social link ${i+1}`}>\n                        <Accordion.Title\n                            active={activeIndex === i}\n                            index={i}\n                            onClick={handleClick}\n                        >\n                            <Icon name=\"dropdown\" />\n                            {`Social Link ${i}`}\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === i}>\n                            <Segment>\n                                <pre>\n                                    <b>name:</b>{' '}\n                                    {editRightLink ? (\n                                        <Grid centered columns={2}>\n                                            <Grid.Row>\n                                                <RightLinkSearch\n                                                    dataGroup=\"socialLinks\"\n                                                    group=\"group\"\n                                                    field=\"name\"\n                                                    values={data}\n                                                    setValues={setData}\n                                                    collection={ICONS}\n                                                    position={i}\n                                                />\n                                            </Grid.Row>\n                                        </Grid>\n                                    ) : link.name ? (\n                                        link.name\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>link:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksStandardInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"link\"\n                                            values={data}\n                                            setValues={setData}\n                                            position={i}\n                                        />\n                                    ) : link.link ? (\n                                        <p>{`${link.link}`}</p>\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>color:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"color\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetColorOptions}\n                                            position={i}\n                                        />\n                                    ) : link.color ? (\n                                        link.color\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>surrounded:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"surrounded\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetBool}\n                                            position={i}\n                                        />\n                                    ) : link.surrounded ? (\n                                        `${link.surrounded}`\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                <pre>\n                                    <b>surroundedInColor:</b>{' '}\n                                    {editRightLink ? (\n                                        <SocialLinksSelectInput\n                                            dataGroup=\"socialLinks\"\n                                            group=\"group\"\n                                            field=\"surroundedInColor\"\n                                            values={data}\n                                            setValues={setData}\n                                            options={presetBool}\n                                            position={i}\n                                        />\n                                    ) : link.surroundedInColor ? (\n                                        `${link.surroundedInColor}`\n                                    ) : (\n                                        'empty'\n                                    )}\n                                </pre>\n                                {link.surroundedInColor ? (\n                                    <pre>\n                                        <b>secondaryColor:</b>{' '}\n                                        {editRightLink ? (\n                                            <SocialLinksSelectInput\n                                                dataGroup=\"socialLinks\"\n                                                group=\"group\"\n                                                field=\"secondaryColor\"\n                                                values={data}\n                                                setValues={setData}\n                                                options={presetColorOptions}\n                                                position={i}\n                                            />\n                                        ) : link.secondaryColor ? (\n                                            link.secondaryColor\n                                        ) : (\n                                            'empty'\n                                        )}\n                                    </pre>\n                                ) : (\n                                    ''\n                                )}\n                            </Segment>\n                        </Accordion.Content>\n                    </div>\n                ))}\n            </Accordion>\n            <AddLink\n                collection=\"socialLinks\"\n                data={data}\n                setData={setData}\n                linkGroup=\"\"\n            />\n        </Segment>\n    );\n};\n\nexport default SocialLinks;\n","import React from 'react';\nimport { Segment, Input, TextArea } from 'semantic-ui-react';\nimport AddLink from '../AddLink/AddLink';\n\n/* eslint no-unused-vars: 0 */\n/*  eslint no-nested-ternary: \"off\" */\nexport const EditRightLinkArrays = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n    const handleStandardInputChange = ({ value }, valueField, innerArrayPosition) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value[innerArrayPosition] };\n        item[valueField] = value;\n        items[dataGroup][group][position][field].value[innerArrayPosition] = item;\n        setValues({ ...items });\n    };\n\n    const handleCollectionChange = ({ value }, innerArrayPosition) => {\n        const items = { ...values };\n        let item = { ...items[dataGroup][group][position][field].value.collection.value[innerArrayPosition] };\n        item = value;\n        items[dataGroup][group][position][field].value.collection.value[innerArrayPosition] = item;\n        setValues({ ...items });\n    };\n\n    const editAdditionalLinks = () => <>\n        {Object.keys(values[dataGroup][group][position][field].value).map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>Link Name:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].name}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'name', i)\n                            }\n                        />\n                    </pre>\n                    <pre>\n                        <b>Link:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].link}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'link', i)\n                            }\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='addLink' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    const editBioLinks = () => <>\n        {Object.keys(values[dataGroup][group][position][field].value).map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>Header:</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value[i].header}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'header', i)\n                            }\n                        />\n                    </pre>\n                    <pre>\n                        <b>Body:</b>{' '}\n                        <TextArea  \n                            value={values[dataGroup][group][position][field].value[i].subHeader}\n                            onChange={(e, d) =>\n                                handleStandardInputChange(d, 'subHeader', i)\n                            }\n                            rows={4}\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='bio' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    const editCollection = () => <>\n        {values[dataGroup][group][position][field].value.collection.value.map(\n            (arrayItem, i) => (\n                <Segment>\n                    <pre>\n                        <b>{`Image ${i+1}:`}</b>{' '}\n                        <Input \n                            defaultValue={values[dataGroup][group][position][field].value.collection.value[i]}\n                            onChange={(e, d) =>\n                                handleCollectionChange(d, i)\n                            }\n                        />\n                    </pre>\n                </Segment>\n            )\n        )}\n        <AddLink collection='collection' data={values} setData={setValues} linkGroup={position} />\n    </>\n\n    return values[dataGroup][group][position][field].arrayType === 'addLinks' ? editAdditionalLinks() : values[dataGroup][group][position][field].arrayType === 'bio' ? editBioLinks() : editCollection() \n}\n\nexport const RightLinksArrays = ({\n    RLArr\n}) => {\n    const additionalLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <Segment key={`RLArray ${i+1}`}>\n                    <pre>\n                        <b>Link Name:</b> {' '}\n                        {link.name !== '' ? \n                        <p>{`${link.name}`}</p> : 'empty'}\n                    </pre>\n                    <pre>\n                        <b>Link:</b> {' '}\n                        {link.link !== '' ? \n                        <p>{`${link.link}`}</p> : 'empty'}\n                    </pre>\n                </Segment>\n            )\n        )}\n    </>\n\n    const bioLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <Segment key={`RLBio ${i+1}`}>\n                    <pre>\n                        <b>Header:</b> {' '}\n                        {link.header !== '' ? \n                        <p>{`${link.header}`}</p> : 'empty'}\n                    </pre>\n                    <pre>\n                        <b>Body:</b> {' '}\n                        {link.subHeader !== '' ? \n                        <p>{`${link.subHeader}`}</p> : 'empty'}\n                    </pre>\n                </Segment>\n            )\n        )}\n    </>\n\n    const collectionLinks = () => <>\n        {RLArr.value.map(\n            (link, i) => (\n                <pre key={`RLCollection ${i+1}`}>\n                    <b>{`Image ${i+1}:`}</b> {' '}\n                    <p>{`${link}`}</p>\n                </pre>\n            )\n        )}\n    </>\n    \n    return RLArr.arrayType === 'addLinks' ? additionalLinks() : RLArr.arrayType === 'bio' ? bioLinks() : collectionLinks()\n}\n\n","\nimport React from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport { RightLinksArrays } from './RightLinkArrays';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinkObjectPreview = ({\n    RLObj\n}) => <>\n    {Object.keys(RLObj.value).map(\n        (objectKey, i) => (\n            <Segment key={`RLObjectPreview ${objectKey} ${i+1}`}>\n                {RLObj.value[objectKey].arrayType ? (\n                    <RightLinksArrays RLArr={RLObj.value[objectKey]} />\n                ) : (\n                <pre>\n                    <b>{`${objectKey}:`}</b> {' '}\n                    {   objectKey === 'speed' ? \n                        <p>{`${RLObj.value[objectKey].value.toString().slice(0, -3)} sec`}</p>:\n                        RLObj.value[objectKey].value !== '' ? \n                        <p>{`${RLObj.value[objectKey].value}`}</p> : 'empty'\n                    }\n                </pre>\n                )}\n            </Segment>\n        )\n    )}\n</>\n\nexport default RightLinkObjectPreview;\n","\nimport React from 'react';\nimport { Input, Segment, Select } from 'semantic-ui-react';\nimport { EditRightLinkArrays } from './RightLinkArrays';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinkObjects = ({\n    dataGroup,\n    group,\n    field,\n    values,\n    setValues,\n    position,\n}) => {\n\n    const presetMediaOptions = [\n        { key: 'still', text: 'still', value: 'still' },\n        { key: 'video', text: 'video', value: 'video' },\n        { key: 'slideshow', text: 'slideshow', value: 'slideshow' },\n    ];\n\n    const presetBoolOptions = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const presetSpeedOptions = [\n        { key: '1', text: '1 sec', value: 1000 },\n        { key: '2', text: '2 sec', value: 2000 },\n        { key: '3', text: '3 sec', value: 3000 },\n        { key: '4', text: '4 sec', value: 4000 },\n        { key: '5', text: '5 sec', value: 5000 },\n        { key: '6', text: '6 sec', value: 6000 },\n        { key: '7', text: '7 sec', value: 7000 },\n        { key: '8', text: '8 sec', value: 8000 },\n        { key: '9', text: '9 sec', value: 9000 },\n        { key: '10', text: '10 sec', value: 10000 },\n    ]\n\n    const handleStandardInputChange = ({ value }, valueField) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value };\n        item[valueField].value = value;\n        items[dataGroup][group][position][field].value = item;\n        setValues({ ...items });\n    };\n\n    const handleSelectChange = ({ value }, valueField) => {\n        const items = { ...values };\n        const item = { ...items[dataGroup][group][position][field].value };\n        item[valueField].value = value;\n        // if (field === 'type') {\n        //     if (value === 'internal') {\n        //         item.internal.value = true;\n        //     } else {\n        //         item.internal.value = false;\n        //     }\n        // }\n        items[dataGroup][group][position][field].value = item;\n        setValues({ ...items });\n    };\n\n    return (\n        <>\n            {Object.keys(values[dataGroup][group][position][field].value).map(\n                (objectKey, i) => values[dataGroup][group][position][field].value[\n                        objectKey\n                    ].type === 'text' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Input\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    onChange={(e, d) =>\n                                        handleStandardInputChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'bool' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value\n                                    }\n                                    options={presetBoolOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'mediaSelect' ? (\n                        <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    options={presetMediaOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                            objectKey\n                        ].type === 'array' ? (\n                            <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                               <pre>\n                                <b>Collection:</b> {' '}\n                                <EditRightLinkArrays \n                                    dataGroup={dataGroup}\n                                    group={group}\n                                    field={field}\n                                    values={values}\n                                    setValues={setValues}\n                                    position={position}\n                                />\n                               </pre> \n                            </Segment>\n                    ) : (\n                        values[dataGroup][group][position][field].value[\n                        objectKey\n                        ].type === 'number' ? (\n                            <Segment key={`RLObjectEdit ${objectKey} ${i+1}`}>\n                            <pre>\n                                <b>{`${objectKey}:`}</b> {' '}\n                                <Select\n                                    defaultValue={\n                                        values[dataGroup][group][position][field].value[\n                                            objectKey\n                                        ].value || ''\n                                    }\n                                    options={presetSpeedOptions}\n                                    onChange={(e, d) =>\n                                        handleSelectChange(d, objectKey)\n                                    }\n                                />\n                            </pre>\n                        </Segment>\n                    ) :\n                    (\n                        'Other Not Yet Implented'\n                    )\n            )))))}\n        </>\n    ); \n};\n\nexport default RightLinkObjects;\n","import React, { useState } from 'react';\nimport {\n    Segment,\n    Header,\n    Accordion,\n    Icon,\n    Label,\n    Divider,\n} from 'semantic-ui-react';\nimport {\n    RLGroupInput,\n    RLGroupSelectInput,\n    RightLinkStandardInput,\n    RightLinkSelectInput,\n} from '../CustomInput/CustomInputs';\nimport AddLink from '../AddLink/AddLink';\nimport RightLinkObjectPreview from './RightLinkObjectPreview';\nimport RightLinkObjects from './RightLinkObjects';\nimport { RightLinksArrays, EditRightLinkArrays } from './RightLinkArrays';\nimport './rightLinks.css';\n\n/*  eslint no-nested-ternary: \"off\" */\nconst RightLinks = ({ editRightLink, data, setData }) => {\n    const [activeIndex, setActiveIndex] = useState();\n    const [showgroup, setShowGroup] = useState(false);\n    const [rightLinksFilter, setRightLinksFilter] = useState('');\n\n    const presetColorOptions = [\n        { key: 'red', text: 'red', value: 'red' },\n        { key: 'orange', text: 'orange', value: 'orange' },\n        { key: 'yellow', text: 'yellow', value: 'yellow' },\n        { key: 'olive', text: 'olive', value: 'olive' },\n        { key: 'green', text: 'green', value: 'green' },\n        { key: 'teal', text: 'teal', value: 'teal' },\n        { key: 'blue', text: 'blue', value: 'blue' },\n        { key: 'violet', text: 'violet', value: 'violet' },\n        { key: 'purple', text: 'purple', value: 'purple' },\n        { key: 'pink', text: 'pink', value: 'pink' },\n        { key: 'brown', text: 'brown', value: 'brown' },\n        { key: 'grey', text: 'grey', value: 'grey' },\n        { key: 'black', text: 'black', value: 'black' },\n    ];\n\n    const presetBoolOptions = [\n        { key: 'true', text: 'true', value: true },\n        { key: 'false', text: 'false', value: false },\n    ];\n\n    const presetSideOptions = [\n        { key: 'none', text: 'none', value: 'none' },\n        { key: 'left', text: 'left', value: 'left' },\n        { key: 'right', text: 'right', value: 'right' },\n    ];\n\n    const presetTypeOptions = [\n        { key: 'internal', text: 'internal', value: 'internal' },\n        { key: 'external', text: 'external', value: 'external' },\n        { key: 'item', text: 'item', value: 'item' },\n        {\n            key: 'still/external',\n            text: 'still/external',\n            value: 'still/external',\n        },\n        { key: 'slideshow', text: 'slideshow', value: 'slideshow' },\n        { key: 'bio', text: 'bio', value: 'bio' },\n    ];\n\n    const presetAdditionalStyles = [\n        { key: 'longText', text: 'longText', value: 'longText' },\n    ];\n    const handleClick = (e, titleProps) => {\n        const { index } = titleProps;\n        const newIndex = activeIndex === index ? -1 : index;\n\n        setActiveIndex(newIndex);\n    };\n\n    const handleGroupClick = (e, groupData) => {\n        setShowGroup(true);\n        setRightLinksFilter(`${groupData.children[1]}`);\n    };\n\n    return (\n        <Segment className=\"LinkGroup 1\">\n            <div>\n                {data.rightLinks.groups.map((group, i) => (\n                    <Label\n                        key={`group label ${i + 1}`}\n                        as=\"a\"\n                        image\n                        className=\"linkLabels\"\n                        color={group.color}\n                        onClick={handleGroupClick}\n                    >\n                        <Icon name=\"linkify\" />\n                        {group.name}\n                    </Label>\n                ))}\n                <AddLink\n                    collection=\"rightLinksGroups\"\n                    data={data}\n                    setData={setData}\n                    linkGroup=\"\"\n                />\n            </div>\n            <Divider />\n            <Header content=\"Link Group\" />\n            {showgroup ? (\n                <>\n                    <Segment>\n                        <pre>\n                            <b>Group Name:</b>{' '}\n                            {/* need to add text length validation to this field */}\n                            {editRightLink ? (\n                                <RLGroupInput\n                                    dataGroup=\"rightLinks\"\n                                    group=\"groups\"\n                                    field=\"name\"\n                                    values={data.rightLinks.groups.filter(\n                                        (group) =>\n                                            group.name === rightLinksFilter\n                                    )}\n                                    data={data}\n                                    setData={setData}\n                                    setFilter={setRightLinksFilter}\n                                />\n                            ) : data.rightLinks.groups.filter(\n                                  (group) => group.name === rightLinksFilter\n                              )[0].name ? (\n                                <p>{`${\n                                    data.rightLinks.groups.filter(\n                                        (group) =>\n                                            group.name === rightLinksFilter\n                                    )[0].name\n                                }`}</p>\n                            ) : (\n                                'empty'\n                            )}\n                        </pre>\n                    </Segment>\n                    <Segment>\n                        <pre>\n                            <b>Group Color:</b>{' '}\n                            {editRightLink ? (\n                                <RLGroupSelectInput\n                                    dataGroup=\"rightLinks\"\n                                    group=\"groups\"\n                                    field=\"color\"\n                                    values={data.rightLinks.groups.filter(\n                                        (group) =>\n                                            group.name === rightLinksFilter\n                                    )}\n                                    options={presetColorOptions}\n                                    data={data}\n                                    setData={setData}\n                                />\n                            ) : data.rightLinks.groups.filter(\n                                  (group) => group.name === rightLinksFilter\n                              )[0].color ? (\n                                data.rightLinks.groups.filter(\n                                    (group) => group.name === rightLinksFilter\n                                )[0].color\n                            ) : (\n                                'empty'\n                            )}\n                        </pre>\n                    </Segment>\n                    <Accordion styled>\n                        {data.rightLinks.links.map((link, i) =>\n                            link.group === rightLinksFilter ? (\n                                <div key={`RightLink-${i + 1}`}>\n                                    <Accordion.Title\n                                        active={activeIndex === i}\n                                        index={i}\n                                        onClick={handleClick}\n                                    >\n                                        <Icon name=\"dropdown\" />\n                                        {`${link.name.value}`}\n                                    </Accordion.Title>\n                                    {Object.keys(link).map((key, j) =>\n                                        ['group', 'internal'].includes(key) ? (\n                                            ''\n                                        ) : (\n                                            <Accordion.Content\n                                                active={activeIndex === i}\n                                                key={`RightLink-content-${\n                                                    j + 1\n                                                }`}\n                                            >\n                                                <Segment>\n                                                    <pre>\n                                                        <b>{`${key}:`}</b>{' '}\n                                                        {editRightLink ? (\n                                                            link[key].type ===\n                                                            'text' ? (\n                                                                <RightLinkStandardInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'bool' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetBoolOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'typeSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetTypeOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'colorSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetColorOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'sideSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetSideOptions\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'stylesSelect' ? (\n                                                                <RightLinkSelectInput\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    options={\n                                                                        presetAdditionalStyles\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'obj' ? (\n                                                                <RightLinkObjects\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : link[key]\n                                                                  .type ===\n                                                              'array' ? (\n                                                                <EditRightLinkArrays\n                                                                    dataGroup=\"rightLinks\"\n                                                                    group=\"links\"\n                                                                    field={`${key}`}\n                                                                    values={\n                                                                        data\n                                                                    }\n                                                                    setValues={\n                                                                        setData\n                                                                    }\n                                                                    position={i}\n                                                                />\n                                                            ) : (\n                                                                'field not valid'\n                                                            )\n                                                        ) : ['array'].includes(\n                                                              link[key].type\n                                                          ) ? (\n                                                            <RightLinksArrays\n                                                                RLArr={\n                                                                    link[key]\n                                                                }\n                                                            />\n                                                        ) : link[key].type ===\n                                                          'bool' ? (\n                                                            `${link[key].value}`\n                                                        ) : link[key].type ===\n                                                          'obj' ? (\n                                                            <RightLinkObjectPreview\n                                                                RLObj={\n                                                                    link[key]\n                                                                }\n                                                            />\n                                                        ) : link[key].value ? (\n                                                            <p>{`${link[key].value}`}</p>\n                                                        ) : (\n                                                            'empty'\n                                                        )}\n                                                    </pre>\n                                                </Segment>\n                                            </Accordion.Content>\n                                        )\n                                    )}\n                                </div>\n                            ) : (\n                                ''\n                            )\n                        )}\n                    </Accordion>\n                </>\n            ) : (\n                'Please select one from above or add a new group for your Right-Links'\n            )}\n            <div>\n                {/* {console.log(data)} */}\n                <AddLink\n                    collection=\"rightLinks\"\n                    data={data}\n                    setData={setData}\n                    linkGroup={rightLinksFilter}\n                />\n            </div>\n        </Segment>\n    );\n};\n\nexport default RightLinks;\n","import React from 'react';\nimport { Tab, Menu } from 'semantic-ui-react';\nimport ProfileSection from '../Profile/Profile';\nimport SocialLinks from '../SocialLinks/SocialLinks';\nimport RightLinks from '../RightLinks/RightLinks';\nimport './main.css';\n\nconst Main = ({ editRightLink, data, setData }) => {\n    const panes = [\n        {\n            menuItem: 'Profile',\n            render: () => (\n                <Tab.Pane>\n                    <ProfileSection\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: 'Social Links',\n            render: () => (\n                <Tab.Pane>\n                    <SocialLinks\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: 'Links',\n            render: () => (\n                <Tab.Pane>\n                    <RightLinks\n                        editRightLink={editRightLink}\n                        data={data}\n                        setData={setData}\n                    />\n                </Tab.Pane>\n            ),\n        },\n        {\n            menuItem: (\n                <Menu.Item as=\"a\" key=\"preview\">\n                    Preview\n                    {/* Eventually make this label track changes */}\n                </Menu.Item>\n            ),\n            render: () => <Tab.Pane>{/* <Preview /> */}</Tab.Pane>,\n        },\n    ];\n\n    return (\n        <div className=\"containerSize mainContainer\">\n            <Tab\n                menu={{ fluid: true, vertical: true, tabular: true }}\n                panes={panes}\n            />\n        </div>\n    );\n};\n\nexport default Main;\n","/* eslint-disable arrow-body-style */\nimport React from 'react';\nimport { Modal, Icon, Button } from 'semantic-ui-react';\nimport './Style.css';\n\nconst PublishRightLinkModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    handlePublishClick,\n}) => {\n    const handleNopeClick = () => {\n        setIsModalOpen((previous) => !previous);\n    };\n\n    const handlePublishModalClick = () => {\n        handlePublishClick();\n        setIsModalOpen((previous) => !previous);\n    };\n\n    return (\n        <Modal centered size=\"small\" open={isModalOpen}>\n            <Modal.Header>Should we update your Right-link?</Modal.Header>\n            <Modal.Actions>\n                <Button color=\"red\" onClick={handleNopeClick}>\n                    Nope\n                </Button>\n                <Button\n                    icon\n                    labelPosition=\"right\"\n                    color=\"violet\"\n                    onClick={handlePublishModalClick}\n                >\n                    Yes, Publish Now\n                    <Icon name=\"paper plane outline\" />\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    );\n};\n\nexport default PublishRightLinkModal;\n","/* eslint-disable no-console */\n/* eslint-disable no-alert */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Grid, Message } from 'semantic-ui-react';\nimport _ from 'lodash';\n// import * as Diff from 'diff';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\nimport { db } from '../../utils/auth/firebase';\nimport RightLinkCollectionModal from '../RightLinkCollectionModal/RightLinkCollectionModal';\nimport Header from '../Header/Header';\nimport RightLinkManagementOpt from '../RightLinkManagementOpt/RightLinkManagementOpt';\nimport Main from '../Main/Main';\nimport './Home.css';\nimport PublishRightLinkModal from '../PublishRightLinkModal/PublishRightLinkModal';\n\nconst Home = () => {\n    const MAX_VERSIONS = 5;\n\n    const { currentUser } = useContext(FirebaseContext);\n    // edit save and publish states control if the button is disabled or not\n    const [editRightLink, setEditRightLink] = useState(false);\n    const [saveRightLink, setSaveRightLink] = useState(true);\n    const [publishRightLink, setPublishRightLink] = useState(true);\n    // holds users db doc after signin\n    const [userDbDoc, setUserDbDoc] = useState('');\n    const [isLoginModalOpen, setIsLoginModalOpen] = useState(true);\n    const [isPublishModalOpen, setIsPublishModalOpen] = useState(false);\n    const [userRightLinkData, setUserRightLinkData] = useState([]);\n    const [selectedOriginalRightLinkData, setSelectedOriginalRightLinkData] =\n        useState({});\n    const [data, setData] = useState({});\n    const [disableToggledBanner, setDisableToggledBanner] = useState(false);\n\n    const doesTitleExist = () => {\n        if (data.profile.title.trim() === '') {\n            return false;\n        }\n        return true;\n    };\n\n    const formatDataToSave = (action) => {\n        let dataToSave = [];\n        let dataToFormat = {\n            ...data,\n            publish: false,\n        };\n\n        if (action === 'publish') {\n            dataToFormat = {\n                ...dataToFormat,\n                publish: true,\n            };\n        }\n\n        if (userRightLinkData.data && userRightLinkData.data.length > 0) {\n            const rightLinkExists = _.find(\n                userRightLinkData.data,\n                (x) => x.uuid === dataToFormat.uuid\n            );\n            if (rightLinkExists) {\n                const fullUserRightLinkDataCopy = userRightLinkData.data;\n                for (let i = 0; i < fullUserRightLinkDataCopy.length; i += 1) {\n                    if (\n                        fullUserRightLinkDataCopy[i].uuid ===\n                        rightLinkExists.uuid\n                    ) {\n                        fullUserRightLinkDataCopy[i] = dataToFormat;\n                    }\n                }\n                dataToSave = {\n                    ...userRightLinkData,\n                    data: fullUserRightLinkDataCopy,\n                };\n            } else {\n                const userRightLinkDataCopy = userRightLinkData.data;\n                userRightLinkDataCopy.push({ ...dataToFormat });\n                dataToSave = {\n                    ...userRightLinkData,\n                    data: userRightLinkDataCopy,\n                };\n            }\n        } else {\n            dataToSave = [{ ...dataToFormat }];\n        }\n\n        return dataToSave;\n    };\n\n    const saveData = async () => {\n        const currentDate = new Date().toLocaleString();\n        const userRef = db.collection('users').doc(userDbDoc);\n\n        if (doesTitleExist()) {\n            const dataToSave = formatDataToSave('save');\n\n            try {\n                db.runTransaction(async (transaction) => {\n                    const doc = await transaction.get(userRef);\n\n                    // doc doesn't exist; can't update\n                    if (!doc.exists) return;\n                    // update the users array after getting it from Firestore.\n                    const newUserDataArray = doc.data();\n                    const newVersion = {\n                        version: dataToSave.version\n                            ? dataToSave.version + 1\n                            : 1,\n                        date: currentDate,\n                        data: dataToSave.data ? dataToSave.data : dataToSave,\n                    };\n                    if (newUserDataArray.data.length >= MAX_VERSIONS) {\n                        newUserDataArray.data.shift();\n                    }\n                    newUserDataArray.data.push(newVersion);\n\n                    transaction.update(userRef, { ...newUserDataArray });\n                });\n            } catch (e) {\n                console.log('Transaction failed: ', e);\n            }\n        } else {\n            alert(\n                'Data has not been saved due to missing title. Please add a title (Profile -> Title)'\n            );\n        }\n    };\n\n    const handleSaveClick = () => {\n        console.log(selectedOriginalRightLinkData, data);\n        if (_.isEqual(selectedOriginalRightLinkData, data)) {\n            alert('No changes detected, everything is up to date!');\n        } else if (doesTitleExist()) {\n            setEditRightLink((previous) => !previous);\n            setSaveRightLink((previous) => !previous);\n            saveData();\n            setIsPublishModalOpen((previous) => !previous);\n            setPublishRightLink((previous) => !previous);\n        } else {\n            alert(\n                'Data has not been saved due to missing title. Please add a title (Profile -> Title)'\n            );\n        }\n    };\n\n    const handleEditClick = () => {\n        setEditRightLink((previous) => !previous);\n        setSaveRightLink((previous) => !previous);\n    };\n\n    const handleCancelClick = () => {\n        setEditRightLink((previous) => !previous);\n        setSaveRightLink((previous) => !previous);\n    };\n\n    const handlePublishClick = () => {\n        setPublishRightLink(true);\n\n        const currentDate = new Date().toLocaleString();\n        const userRef = db.collection('users').doc(userDbDoc);\n\n        if (doesTitleExist()) {\n            const dataToSave = formatDataToSave('publish');\n\n            try {\n                db.runTransaction(async (transaction) => {\n                    const doc = await transaction.get(userRef);\n\n                    // doc doesn't exist; can't update\n                    if (!doc.exists) return;\n                    // update the users array after getting it from Firestore.\n                    const newUserDataArray = doc.data();\n                    const newVersion = {\n                        version: dataToSave.version\n                            ? dataToSave.version + 1\n                            : 1,\n                        date: currentDate,\n                        data: dataToSave.data ? dataToSave.data : dataToSave,\n                    };\n                    if (newUserDataArray.data.length >= MAX_VERSIONS) {\n                        newUserDataArray.data.shift();\n                    }\n                    newUserDataArray.data.push(newVersion);\n\n                    transaction.update(userRef, { ...newUserDataArray });\n                });\n            } catch (e) {\n                console.log('Transaction failed: ', e);\n            }\n            alert('Your Right-Link has been published!');\n        } else {\n            alert(\n                'Data has not been Published due to missing title. Please add a title (Profile -> Title)'\n            );\n        }\n    };\n\n    const disableToggle = () => {\n        setDisableToggledBanner((previous) => !previous);\n    };\n\n    useEffect(() => {\n        const fetch = () => {\n            db.collection('users')\n                .where('uid', '==', currentUser.uid)\n                .onSnapshot((snapshot) => {\n                    let currentData = 0;\n                    const items = snapshot.docs.map((doc) => ({\n                        id: doc.id,\n                        ...doc.data(),\n                    }));\n                    if (items[0] && items[0].data) {\n                        currentData = _.maxBy(items[0].data, 'version');\n                        setUserDbDoc(items[0].id);\n                    }\n\n                    setUserRightLinkData(\n                        currentData && currentData !== 0 ? currentData : []\n                    );\n                });\n        };\n        fetch();\n    }, []);\n\n    return (\n        <Grid columns={2}>\n            {isLoginModalOpen ? (\n                <RightLinkCollectionModal\n                    isModalOpen={isLoginModalOpen}\n                    setIsModalOpen={setIsLoginModalOpen}\n                    collection={userRightLinkData}\n                    setSelectedOriginalRightLinkData={\n                        setSelectedOriginalRightLinkData\n                    }\n                    setData={setData}\n                    setPublishRightLink={setPublishRightLink}\n                />\n            ) : (\n                <>\n                    <Grid.Row centered>\n                        <Header />\n                    </Grid.Row>\n                    {disableToggledBanner ? (\n                        <Grid.Row centered className=\"p-0\">\n                            <Message info size=\"small\">\n                                <Message.Header>\n                                    This Right-Link is currently Disabled\n                                </Message.Header>\n                            </Message>\n                        </Grid.Row>\n                    ) : (\n                        ''\n                    )}\n                    <Grid.Row className=\"RLContentRight\">\n                        <RightLinkManagementOpt\n                            handleEditClick={handleEditClick}\n                            editRightLink={editRightLink}\n                            handleSaveClick={handleSaveClick}\n                            saveRightLink={saveRightLink}\n                            handlePublishClick={handlePublishClick}\n                            publishRightLink={publishRightLink}\n                            handleCancelClick={handleCancelClick}\n                            disableToggledBanner={disableToggledBanner}\n                            disableToggle={disableToggle}\n                        />\n                    </Grid.Row>\n                    <Grid.Row centered>\n                        <Main\n                            editRightLink={editRightLink}\n                            data={data}\n                            setData={setData}\n                        />\n                    </Grid.Row>\n                </>\n            )}\n            {isPublishModalOpen ? (\n                <PublishRightLinkModal\n                    isModalOpen={isPublishModalOpen}\n                    setIsModalOpen={setIsPublishModalOpen}\n                    handlePublishClick={handlePublishClick}\n                />\n            ) : (\n                ''\n            )}\n        </Grid>\n    );\n};\n\nexport default Home;\n","import React, { useContext, useCallback } from 'react';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport firebaseApp, { signInWithGoogle } from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\nimport './login.css';\n\nfunction Login({ history }) {\n    const { currentUser } = useContext(FirebaseContext);\n\n    const handleLogin = useCallback(\n        async (event) => {\n            event.preventDefault();\n            const { email, password } = event.target.elements;\n            try {\n                await firebaseApp\n                    .auth()\n                    .signInWithEmailAndPassword(email.value, password.value);\n                history.push('/');\n            } catch (error) {\n                alert(error);\n            }\n        },\n        [history]\n    );\n\n    if (currentUser) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <div className=\"login\">\n            <form className=\"login__container\" onSubmit={handleLogin}>\n                <h1>Log in</h1>\n                <input\n                    className=\"login__textBox\"\n                    name=\"email\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                />\n                <input\n                    className=\"login__textBox\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n                <button className=\"login__btn\" type=\"submit\">\n                    Log in\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"login__btn login__google\"\n                    onClick={signInWithGoogle}\n                >\n                    Login with Google\n                </button>\n                <div>\n                    <Link to=\"/reset\">Forgot Password</Link>\n                </div>\n                <div>\n                    Don&apos;t have an account?{' '}\n                    <Link to=\"/register\">Register</Link> now.\n                </div>\n            </form>\n        </div>\n    );\n}\nexport default withRouter(Login);\n","import React, { useCallback } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport {\n    registerWithEmailAndPassword,\n    signInWithGoogle,\n} from '../../utils/auth/firebase';\nimport './register.css';\n\nfunction Register({ history }) {\n    const handleSignUp = useCallback(\n        async (event) => {\n            event.preventDefault();\n            const { name, email, password } = event.target.elements;\n            try {\n                await registerWithEmailAndPassword(\n                    name.value,\n                    email.value,\n                    password.value\n                );\n                history.push('/');\n            } catch (error) {\n                alert(error);\n            }\n        },\n        [history]\n    );\n    return (\n        <div className=\"register\">\n            <form className=\"register__container\" onSubmit={handleSignUp}>\n                <h1>Register</h1>\n                <input\n                    className=\"register__textBox\"\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Full Name\"\n                />\n                <input\n                    className=\"register__textBox\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                />\n                <input\n                    className=\"register__textBox\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n                <button className=\"register__btn\" type=\"submit\">\n                    Sign Up\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"login__btn login__google\"\n                    onClick={signInWithGoogle}\n                >\n                    Register with Google\n                </button>\n                <div>\n                    Already have an account? <Link to=\"/\">Login</Link> now.\n                </div>\n            </form>\n        </div>\n    );\n}\nexport default withRouter(Register);\n","import React, { useState, useContext } from 'react';\nimport { withRouter, Link, Redirect } from 'react-router-dom';\nimport { sendPasswordResetEmail } from '../../utils/auth/firebase';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\nimport './reset.css';\n\nfunction Reset() {\n    const [email, setEmail] = useState('');\n    const { currentUser } = useContext(FirebaseContext);\n\n    if (currentUser) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <div className=\"reset\">\n            <div className=\"reset__container\">\n                <input\n                    type=\"text\"\n                    className=\"reset__textBox\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"E-mail Address\"\n                />\n                <button\n                    type=\"button\"\n                    className=\"reset__btn\"\n                    onClick={() => sendPasswordResetEmail(email)}\n                >\n                    Send password reset email\n                </button>\n                <div>\n                    Don&apos;t have an account?{' '}\n                    <Link to=\"/register\">Register</Link> now.\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default withRouter(Reset);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { FirebaseContext } from '../../utils/auth/FirebaseContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const { currentUser } = useContext(FirebaseContext);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                currentUser ? (\n                    <Component {...rest} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/login',\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","/* eslint-disable arrow-body-style */\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { CloudinaryContext } from 'cloudinary-react';\nimport { FirebaseProvider } from './utils/auth/FirebaseContext';\nimport Home from './components/Home/Home';\nimport 'semantic-ui-css/semantic.min.css';\nimport Login from './components/Login/Login';\nimport Register from './components/Login/Register';\nimport Reset from './components/Login/Reset';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport { CLOUD_NAME, UPLOAD_PRESET } from './config/config';\n\nconst App = () => {\n    return (\n        <FirebaseProvider>\n            <CloudinaryContext\n                cloudName={CLOUD_NAME}\n                uploadPreset={UPLOAD_PRESET}\n            >\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <PrivateRoute exact path=\"/\" component={Home} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/register\" component={Register} />\n                        <Route exact path=\"/reset\" component={Reset} />\n                    </Switch>\n                </Router>\n            </CloudinaryContext>\n        </FirebaseProvider>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}